id: Database
language: CSharp
name:
  Default: Database
qualifiedName:
  Default: Database
type: Assembly
modifiers: {}
items:
- id: Database
  commentId: N:Database
  language: CSharp
  name:
    CSharp: Database
    VB: Database
  nameWithType:
    CSharp: Database
    VB: Database
  qualifiedName:
    CSharp: Database
    VB: Database
  type: Namespace
  assemblies:
  - Database
  modifiers: {}
  items:
  - id: Database.ConnectionInfo
    commentId: T:Database.ConnectionInfo
    language: CSharp
    name:
      CSharp: ConnectionInfo
      VB: ConnectionInfo
    nameWithType:
      CSharp: ConnectionInfo
      VB: ConnectionInfo
    qualifiedName:
      CSharp: Database.ConnectionInfo
      VB: Database.ConnectionInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: ConnectionInfo
      path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
      startLine: 18
    summary: "\nClass to store information of connection to the database in the settings\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [SettingsSerializeAs(SettingsSerializeAs.Xml)]

          public class ConnectionInfo
        VB: >-
          <SettingsSerializeAs(SettingsSerializeAs.Xml)>

          Public Class ConnectionInfo
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.Configuration.SettingsSerializeAsAttribute
      ctor: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
      arguments:
      - type: System.Configuration.SettingsSerializeAs
        value: 1
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.ConnectionInfo.Server
      commentId: P:Database.ConnectionInfo.Server
      language: CSharp
      name:
        CSharp: Server
        VB: Server
      nameWithType:
        CSharp: ConnectionInfo.Server
        VB: ConnectionInfo.Server
      qualifiedName:
        CSharp: Database.ConnectionInfo.Server
        VB: Database.ConnectionInfo.Server
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Server
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 22
      example: []
      syntax:
        content:
          CSharp: public string Server { get; set; }
          VB: Public Property Server As String
        parameters: []
        return:
          type: System.String
          description: Database server name
      overload: Database.ConnectionInfo.Server*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Database.ConnectionInfo.UserID
      commentId: P:Database.ConnectionInfo.UserID
      language: CSharp
      name:
        CSharp: UserID
        VB: UserID
      nameWithType:
        CSharp: ConnectionInfo.UserID
        VB: ConnectionInfo.UserID
      qualifiedName:
        CSharp: Database.ConnectionInfo.UserID
        VB: Database.ConnectionInfo.UserID
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: UserID
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 25
      example: []
      syntax:
        content:
          CSharp: public string UserID { get; set; }
          VB: Public Property UserID As String
        parameters: []
        return:
          type: System.String
          description: User ID to log on the database
      overload: Database.ConnectionInfo.UserID*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Database.ConnectionInfo.Password
      commentId: P:Database.ConnectionInfo.Password
      language: CSharp
      name:
        CSharp: Password
        VB: Password
      nameWithType:
        CSharp: ConnectionInfo.Password
        VB: ConnectionInfo.Password
      qualifiedName:
        CSharp: Database.ConnectionInfo.Password
        VB: Database.ConnectionInfo.Password
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Password
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 28
      example: []
      syntax:
        content:
          CSharp: public string Password { get; set; }
          VB: Public Property Password As String
        parameters: []
        return:
          type: System.String
          description: Password of the user ID
      overload: Database.ConnectionInfo.Password*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Database.ConnectionInfo.Db
      commentId: P:Database.ConnectionInfo.Db
      language: CSharp
      name:
        CSharp: Db
        VB: Db
      nameWithType:
        CSharp: ConnectionInfo.Db
        VB: ConnectionInfo.Db
      qualifiedName:
        CSharp: Database.ConnectionInfo.Db
        VB: Database.ConnectionInfo.Db
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Db
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 31
      example: []
      syntax:
        content:
          CSharp: public string Db { get; set; }
          VB: Public Property Db As String
        parameters: []
        return:
          type: System.String
          description: Database to use
      overload: Database.ConnectionInfo.Db*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Database.IniInfo
    commentId: T:Database.IniInfo
    language: CSharp
    name:
      CSharp: IniInfo
      VB: IniInfo
    nameWithType:
      CSharp: IniInfo
      VB: IniInfo
    qualifiedName:
      CSharp: Database.IniInfo
      VB: Database.IniInfo
    type: Struct
    assemblies:
    - Database
    namespace: Database
    source:
      id: IniInfo
      path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
      startLine: 38
    summary: "\nStructure of the information from other projects required to initialize the main class\n"
    example: []
    syntax:
      content:
        CSharp: public struct IniInfo
        VB: Public Structure IniInfo
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Database.IniInfo.AlarmType_Alarm
      commentId: F:Database.IniInfo.AlarmType_Alarm
      language: CSharp
      name:
        CSharp: AlarmType_Alarm
        VB: AlarmType_Alarm
      nameWithType:
        CSharp: IniInfo.AlarmType_Alarm
        VB: IniInfo.AlarmType_Alarm
      qualifiedName:
        CSharp: Database.IniInfo.AlarmType_Alarm
        VB: Database.IniInfo.AlarmType_Alarm
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: AlarmType_Alarm
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 41
      example: []
      syntax:
        content:
          CSharp: public string AlarmType_Alarm
          VB: Public AlarmType_Alarm As String
        return:
          type: System.String
          description: Event type to put in the audit trail in case of alarm (see class AuditTrailInfo)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.IniInfo.AlarmType_Warning
      commentId: F:Database.IniInfo.AlarmType_Warning
      language: CSharp
      name:
        CSharp: AlarmType_Warning
        VB: AlarmType_Warning
      nameWithType:
        CSharp: IniInfo.AlarmType_Warning
        VB: IniInfo.AlarmType_Warning
      qualifiedName:
        CSharp: Database.IniInfo.AlarmType_Warning
        VB: Database.IniInfo.AlarmType_Warning
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: AlarmType_Warning
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 43
      example: []
      syntax:
        content:
          CSharp: public string AlarmType_Warning
          VB: Public AlarmType_Warning As String
        return:
          type: System.String
          description: Event type to put in the audit trail in case of warning (see class AuditTrailInfo)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.IniInfo.RecipeWeight_mgG_Unit
      commentId: F:Database.IniInfo.RecipeWeight_mgG_Unit
      language: CSharp
      name:
        CSharp: RecipeWeight_mgG_Unit
        VB: RecipeWeight_mgG_Unit
      nameWithType:
        CSharp: IniInfo.RecipeWeight_mgG_Unit
        VB: IniInfo.RecipeWeight_mgG_Unit
      qualifiedName:
        CSharp: Database.IniInfo.RecipeWeight_mgG_Unit
        VB: Database.IniInfo.RecipeWeight_mgG_Unit
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: RecipeWeight_mgG_Unit
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 45
      example: []
      syntax:
        content:
          CSharp: public string RecipeWeight_mgG_Unit
          VB: Public RecipeWeight_mgG_Unit As String
        return:
          type: System.String
          description: Unit mg/g to put in the weight recipe database table (used by the class CycleWeightInfo)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.IniInfo.RecipeWeight_mgG_Conversion
      commentId: F:Database.IniInfo.RecipeWeight_mgG_Conversion
      language: CSharp
      name:
        CSharp: RecipeWeight_mgG_Conversion
        VB: RecipeWeight_mgG_Conversion
      nameWithType:
        CSharp: IniInfo.RecipeWeight_mgG_Conversion
        VB: IniInfo.RecipeWeight_mgG_Conversion
      qualifiedName:
        CSharp: Database.IniInfo.RecipeWeight_mgG_Conversion
        VB: Database.IniInfo.RecipeWeight_mgG_Conversion
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: RecipeWeight_mgG_Conversion
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 47
      example: []
      syntax:
        content:
          CSharp: public decimal? RecipeWeight_mgG_Conversion
          VB: Public RecipeWeight_mgG_Conversion As Decimal?
        return:
          type: System.Nullable{System.Decimal}
          description: Conversion value of the unit mg/g. Used to calculate the conversion ratio in the class CycleWeightInfo
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.IniInfo.RecipeWeight_gG_Unit
      commentId: F:Database.IniInfo.RecipeWeight_gG_Unit
      language: CSharp
      name:
        CSharp: RecipeWeight_gG_Unit
        VB: RecipeWeight_gG_Unit
      nameWithType:
        CSharp: IniInfo.RecipeWeight_gG_Unit
        VB: IniInfo.RecipeWeight_gG_Unit
      qualifiedName:
        CSharp: Database.IniInfo.RecipeWeight_gG_Unit
        VB: Database.IniInfo.RecipeWeight_gG_Unit
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: RecipeWeight_gG_Unit
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 49
      example: []
      syntax:
        content:
          CSharp: public string RecipeWeight_gG_Unit
          VB: Public RecipeWeight_gG_Unit As String
        return:
          type: System.String
          description: Unit g/g to put in the weight recipe database table (used by the class CycleWeightInfo)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.IniInfo.RecipeWeight_gG_Conversion
      commentId: F:Database.IniInfo.RecipeWeight_gG_Conversion
      language: CSharp
      name:
        CSharp: RecipeWeight_gG_Conversion
        VB: RecipeWeight_gG_Conversion
      nameWithType:
        CSharp: IniInfo.RecipeWeight_gG_Conversion
        VB: IniInfo.RecipeWeight_gG_Conversion
      qualifiedName:
        CSharp: Database.IniInfo.RecipeWeight_gG_Conversion
        VB: Database.IniInfo.RecipeWeight_gG_Conversion
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: RecipeWeight_gG_Conversion
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 51
      example: []
      syntax:
        content:
          CSharp: public decimal? RecipeWeight_gG_Conversion
          VB: Public RecipeWeight_gG_Conversion As Decimal?
        return:
          type: System.Nullable{System.Decimal}
          description: Conversion value of the unit g/g. Used to calculate the conversion ratio in the class CycleWeightInfo
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.IniInfo.CycleFinalWeight_g_Unit
      commentId: F:Database.IniInfo.CycleFinalWeight_g_Unit
      language: CSharp
      name:
        CSharp: CycleFinalWeight_g_Unit
        VB: CycleFinalWeight_g_Unit
      nameWithType:
        CSharp: IniInfo.CycleFinalWeight_g_Unit
        VB: IniInfo.CycleFinalWeight_g_Unit
      qualifiedName:
        CSharp: Database.IniInfo.CycleFinalWeight_g_Unit
        VB: Database.IniInfo.CycleFinalWeight_g_Unit
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: CycleFinalWeight_g_Unit
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 53
      example: []
      syntax:
        content:
          CSharp: public string CycleFinalWeight_g_Unit
          VB: Public CycleFinalWeight_g_Unit As String
        return:
          type: System.String
          description: Unit g to put in the cycle database table (used by the class CycleWeightInfo)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.IniInfo.Window
      commentId: F:Database.IniInfo.Window
      language: CSharp
      name:
        CSharp: Window
        VB: Window
      nameWithType:
        CSharp: IniInfo.Window
        VB: IniInfo.Window
      qualifiedName:
        CSharp: Database.IniInfo.Window
        VB: Database.IniInfo.Window
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: Window
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 57
      example: []
      syntax:
        content:
          CSharp: public Window Window
          VB: Public Window As Window
        return:
          type: System.Windows.Window
          description: Main window of the application. Is used to attach the MessageBoxes to it
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Database.RecipeStatus
    commentId: T:Database.RecipeStatus
    language: CSharp
    name:
      CSharp: RecipeStatus
      VB: RecipeStatus
    nameWithType:
      CSharp: RecipeStatus
      VB: RecipeStatus
    qualifiedName:
      CSharp: Database.RecipeStatus
      VB: Database.RecipeStatus
    type: Enum
    assemblies:
    - Database
    namespace: Database
    source:
      id: RecipeStatus
      path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
      startLine: 64
    summary: "\nEnumeration of the status of the recipes. Can be used to filter recipes by one of those status \n"
    remarks: See method GetRecipeStatus to translate the status to put in the applicable database table
    example: []
    syntax:
      content:
        CSharp: public enum RecipeStatus
        VB: Public Enum RecipeStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Database.RecipeStatus.PROD
      commentId: F:Database.RecipeStatus.PROD
      language: CSharp
      name:
        CSharp: PROD
        VB: PROD
      nameWithType:
        CSharp: RecipeStatus.PROD
        VB: RecipeStatus.PROD
      qualifiedName:
        CSharp: Database.RecipeStatus.PROD
        VB: Database.RecipeStatus.PROD
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: PROD
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 67
      example: []
      syntax:
        content:
          CSharp: PROD = 0
          VB: PROD = 0
        return:
          type: Database.RecipeStatus
          description: Production status (recipes in production can be used for production)
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Database.RecipeStatus.DRAFT
      commentId: F:Database.RecipeStatus.DRAFT
      language: CSharp
      name:
        CSharp: DRAFT
        VB: DRAFT
      nameWithType:
        CSharp: RecipeStatus.DRAFT
        VB: RecipeStatus.DRAFT
      qualifiedName:
        CSharp: Database.RecipeStatus.DRAFT
        VB: Database.RecipeStatus.DRAFT
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: DRAFT
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 69
      example: []
      syntax:
        content:
          CSharp: DRAFT = 1
          VB: DRAFT = 1
        return:
          type: Database.RecipeStatus
          description: Draft status (recipes in draft can&apos;t be used in production but can be tested by allowed user)
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Database.RecipeStatus.OBSOLETE
      commentId: F:Database.RecipeStatus.OBSOLETE
      language: CSharp
      name:
        CSharp: OBSOLETE
        VB: OBSOLETE
      nameWithType:
        CSharp: RecipeStatus.OBSOLETE
        VB: RecipeStatus.OBSOLETE
      qualifiedName:
        CSharp: Database.RecipeStatus.OBSOLETE
        VB: Database.RecipeStatus.OBSOLETE
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: OBSOLETE
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 71
      example: []
      syntax:
        content:
          CSharp: OBSOLETE = 2
          VB: OBSOLETE = 2
        return:
          type: Database.RecipeStatus
          description: Obsolete status (obsolete recipes can&apos;t be used at all but they can be brought back by allowed user)
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Database.RecipeStatus.PRODnDRAFT
      commentId: F:Database.RecipeStatus.PRODnDRAFT
      language: CSharp
      name:
        CSharp: PRODnDRAFT
        VB: PRODnDRAFT
      nameWithType:
        CSharp: RecipeStatus.PRODnDRAFT
        VB: RecipeStatus.PRODnDRAFT
      qualifiedName:
        CSharp: Database.RecipeStatus.PRODnDRAFT
        VB: Database.RecipeStatus.PRODnDRAFT
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: PRODnDRAFT
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 73
      example: []
      syntax:
        content:
          CSharp: PRODnDRAFT = 3
          VB: PRODnDRAFT = 3
        return:
          type: Database.RecipeStatus
          description: Production or draft recipes (value used to filter recipes in production or in draft)
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Database.RecipeStatus.None
      commentId: F:Database.RecipeStatus.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: RecipeStatus.None
        VB: RecipeStatus.None
      qualifiedName:
        CSharp: Database.RecipeStatus.None
        VB: Database.RecipeStatus.None
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: None
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 75
      example: []
      syntax:
        content:
          CSharp: None = 4
          VB: None = 4
        return:
          type: Database.RecipeStatus
          description: No status. Recipes should have this status
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Database.DatabaseSettings
    commentId: T:Database.DatabaseSettings
    language: CSharp
    name:
      CSharp: DatabaseSettings
      VB: DatabaseSettings
    nameWithType:
      CSharp: DatabaseSettings
      VB: DatabaseSettings
    qualifiedName:
      CSharp: Database.DatabaseSettings
      VB: Database.DatabaseSettings
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: DatabaseSettings
      path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
      startLine: 81
    summary: "\nStatic class used to allow other projects to access some values from the settings\n"
    example: []
    syntax:
      content:
        CSharp: public static class DatabaseSettings
        VB: Public Module DatabaseSettings
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Database.DatabaseSettings.Error_connectToDbFailed
      commentId: P:Database.DatabaseSettings.Error_connectToDbFailed
      language: CSharp
      name:
        CSharp: Error_connectToDbFailed
        VB: Error_connectToDbFailed
      nameWithType:
        CSharp: DatabaseSettings.Error_connectToDbFailed
        VB: DatabaseSettings.Error_connectToDbFailed
      qualifiedName:
        CSharp: Database.DatabaseSettings.Error_connectToDbFailed
        VB: Database.DatabaseSettings.Error_connectToDbFailed
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Error_connectToDbFailed
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 84
      example: []
      syntax:
        content:
          CSharp: public static string Error_connectToDbFailed { get; }
          VB: Public Shared ReadOnly Property Error_connectToDbFailed As String
        parameters: []
        return:
          type: System.String
          description: Message displayed if the connection to the database fails
      overload: Database.DatabaseSettings.Error_connectToDbFailed*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.DatabaseSettings.General_TrueValue_Read
      commentId: P:Database.DatabaseSettings.General_TrueValue_Read
      language: CSharp
      name:
        CSharp: General_TrueValue_Read
        VB: General_TrueValue_Read
      nameWithType:
        CSharp: DatabaseSettings.General_TrueValue_Read
        VB: DatabaseSettings.General_TrueValue_Read
      qualifiedName:
        CSharp: Database.DatabaseSettings.General_TrueValue_Read
        VB: Database.DatabaseSettings.General_TrueValue_Read
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: General_TrueValue_Read
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 86
      example: []
      syntax:
        content:
          CSharp: public static string General_TrueValue_Read { get; }
          VB: Public Shared ReadOnly Property General_TrueValue_Read As String
        parameters: []
        return:
          type: System.String
          description: Value &quot;true&quot; when read from a database table
      overload: Database.DatabaseSettings.General_TrueValue_Read*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.DatabaseSettings.General_FalseValue_Read
      commentId: P:Database.DatabaseSettings.General_FalseValue_Read
      language: CSharp
      name:
        CSharp: General_FalseValue_Read
        VB: General_FalseValue_Read
      nameWithType:
        CSharp: DatabaseSettings.General_FalseValue_Read
        VB: DatabaseSettings.General_FalseValue_Read
      qualifiedName:
        CSharp: Database.DatabaseSettings.General_FalseValue_Read
        VB: Database.DatabaseSettings.General_FalseValue_Read
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: General_FalseValue_Read
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 88
      example: []
      syntax:
        content:
          CSharp: public static string General_FalseValue_Read { get; }
          VB: Public Shared ReadOnly Property General_FalseValue_Read As String
        parameters: []
        return:
          type: System.String
          description: Value &quot;false&quot; when read from a database table
      overload: Database.DatabaseSettings.General_FalseValue_Read*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.DatabaseSettings.General_TrueValue_Write
      commentId: P:Database.DatabaseSettings.General_TrueValue_Write
      language: CSharp
      name:
        CSharp: General_TrueValue_Write
        VB: General_TrueValue_Write
      nameWithType:
        CSharp: DatabaseSettings.General_TrueValue_Write
        VB: DatabaseSettings.General_TrueValue_Write
      qualifiedName:
        CSharp: Database.DatabaseSettings.General_TrueValue_Write
        VB: Database.DatabaseSettings.General_TrueValue_Write
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: General_TrueValue_Write
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 90
      example: []
      syntax:
        content:
          CSharp: public static string General_TrueValue_Write { get; }
          VB: Public Shared ReadOnly Property General_TrueValue_Write As String
        parameters: []
        return:
          type: System.String
          description: Value &quot;true&quot; to write to a database table
      overload: Database.DatabaseSettings.General_TrueValue_Write*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.DatabaseSettings.General_FalseValue_Write
      commentId: P:Database.DatabaseSettings.General_FalseValue_Write
      language: CSharp
      name:
        CSharp: General_FalseValue_Write
        VB: General_FalseValue_Write
      nameWithType:
        CSharp: DatabaseSettings.General_FalseValue_Write
        VB: DatabaseSettings.General_FalseValue_Write
      qualifiedName:
        CSharp: Database.DatabaseSettings.General_FalseValue_Write
        VB: Database.DatabaseSettings.General_FalseValue_Write
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: General_FalseValue_Write
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 92
      example: []
      syntax:
        content:
          CSharp: public static string General_FalseValue_Write { get; }
          VB: Public Shared ReadOnly Property General_FalseValue_Write As String
        parameters: []
        return:
          type: System.String
          description: Value &quot;false&quot; to write to a database table
      overload: Database.DatabaseSettings.General_FalseValue_Write*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.DatabaseSettings.ConnectionInfo
      commentId: P:Database.DatabaseSettings.ConnectionInfo
      language: CSharp
      name:
        CSharp: ConnectionInfo
        VB: ConnectionInfo
      nameWithType:
        CSharp: DatabaseSettings.ConnectionInfo
        VB: DatabaseSettings.ConnectionInfo
      qualifiedName:
        CSharp: Database.DatabaseSettings.ConnectionInfo
        VB: Database.DatabaseSettings.ConnectionInfo
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: ConnectionInfo
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 94
      example: []
      syntax:
        content:
          CSharp: public static ConnectionInfo ConnectionInfo { get; }
          VB: Public Shared ReadOnly Property ConnectionInfo As ConnectionInfo
        parameters: []
        return:
          type: Database.ConnectionInfo
          description: Information of connection to the database
      overload: Database.DatabaseSettings.ConnectionInfo*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.DatabaseSettings.DBAppFolder
      commentId: P:Database.DatabaseSettings.DBAppFolder
      language: CSharp
      name:
        CSharp: DBAppFolder
        VB: DBAppFolder
      nameWithType:
        CSharp: DatabaseSettings.DBAppFolder
        VB: DatabaseSettings.DBAppFolder
      qualifiedName:
        CSharp: Database.DatabaseSettings.DBAppFolder
        VB: Database.DatabaseSettings.DBAppFolder
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DBAppFolder
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 96
      example: []
      syntax:
        content:
          CSharp: public static string DBAppFolder { get; }
          VB: Public Shared ReadOnly Property DBAppFolder As String
        parameters: []
        return:
          type: System.String
          description: Folder of the application of the database
      overload: Database.DatabaseSettings.DBAppFolder*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.DatabaseSettings.Timestamp_Format
      commentId: P:Database.DatabaseSettings.Timestamp_Format
      language: CSharp
      name:
        CSharp: Timestamp_Format
        VB: Timestamp_Format
      nameWithType:
        CSharp: DatabaseSettings.Timestamp_Format
        VB: DatabaseSettings.Timestamp_Format
      qualifiedName:
        CSharp: Database.DatabaseSettings.Timestamp_Format
        VB: Database.DatabaseSettings.Timestamp_Format
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Timestamp_Format
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 98
      example: []
      syntax:
        content:
          CSharp: public static string Timestamp_Format { get; }
          VB: Public Shared ReadOnly Property Timestamp_Format As String
        parameters: []
        return:
          type: System.String
          description: Format of timestamps
      overload: Database.DatabaseSettings.Timestamp_Format*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Database.ReadInfo
    commentId: T:Database.ReadInfo
    language: CSharp
    name:
      CSharp: ReadInfo
      VB: ReadInfo
    nameWithType:
      CSharp: ReadInfo
      VB: ReadInfo
    qualifiedName:
      CSharp: Database.ReadInfo
      VB: Database.ReadInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: ReadInfo
      path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
      startLine: 118
    summary: "\nClass containing the parameters required by other method (usually to select one or several row in a database table)\n"
    example: []
    syntax:
      content:
        CSharp: public class ReadInfo
        VB: Public Class ReadInfo
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.ReadInfo.TableInfo
      commentId: P:Database.ReadInfo.TableInfo
      language: CSharp
      name:
        CSharp: TableInfo
        VB: TableInfo
      nameWithType:
        CSharp: ReadInfo.TableInfo
        VB: ReadInfo.TableInfo
      qualifiedName:
        CSharp: Database.ReadInfo.TableInfo
        VB: Database.ReadInfo.TableInfo
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TableInfo
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 121
      example: []
      syntax:
        content:
          CSharp: public IComTabInfo TableInfo { get; }
          VB: Public ReadOnly Property TableInfo As IComTabInfo
        parameters: []
        return:
          type: Database.IComTabInfo
          description: Object of database table. The values of this object can be used to select a set of rows
      overload: Database.ReadInfo.TableInfo*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.ReadInfo.OrderBy
      commentId: P:Database.ReadInfo.OrderBy
      language: CSharp
      name:
        CSharp: OrderBy
        VB: OrderBy
      nameWithType:
        CSharp: ReadInfo.OrderBy
        VB: ReadInfo.OrderBy
      qualifiedName:
        CSharp: Database.ReadInfo.OrderBy
        VB: Database.ReadInfo.OrderBy
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: OrderBy
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 124
      example: []
      syntax:
        content:
          CSharp: public string OrderBy { get; }
          VB: Public ReadOnly Property OrderBy As String
        parameters: []
        return:
          type: System.String
          description: Must contains the id of the column to use to sort the rows
      overload: Database.ReadInfo.OrderBy*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.ReadInfo.IsOrderAsc
      commentId: P:Database.ReadInfo.IsOrderAsc
      language: CSharp
      name:
        CSharp: IsOrderAsc
        VB: IsOrderAsc
      nameWithType:
        CSharp: ReadInfo.IsOrderAsc
        VB: ReadInfo.IsOrderAsc
      qualifiedName:
        CSharp: Database.ReadInfo.IsOrderAsc
        VB: Database.ReadInfo.IsOrderAsc
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: IsOrderAsc
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 127
      example: []
      syntax:
        content:
          CSharp: public bool IsOrderAsc { get; }
          VB: Public ReadOnly Property IsOrderAsc As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: If value value = true then the order of the sort is ascending. Descending if false
      overload: Database.ReadInfo.IsOrderAsc*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.ReadInfo.DtBefore
      commentId: P:Database.ReadInfo.DtBefore
      language: CSharp
      name:
        CSharp: DtBefore
        VB: DtBefore
      nameWithType:
        CSharp: ReadInfo.DtBefore
        VB: ReadInfo.DtBefore
      qualifiedName:
        CSharp: Database.ReadInfo.DtBefore
        VB: Database.ReadInfo.DtBefore
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DtBefore
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 130
      example: []
      syntax:
        content:
          CSharp: public DateTime? DtBefore { get; }
          VB: Public ReadOnly Property DtBefore As Date?
        parameters: []
        return:
          type: System.Nullable{System.DateTime}
          description: 'Used for tables containing a date and time column: date and time of the first row to filter'
      overload: Database.ReadInfo.DtBefore*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.ReadInfo.DtAfter
      commentId: P:Database.ReadInfo.DtAfter
      language: CSharp
      name:
        CSharp: DtAfter
        VB: DtAfter
      nameWithType:
        CSharp: ReadInfo.DtAfter
        VB: ReadInfo.DtAfter
      qualifiedName:
        CSharp: Database.ReadInfo.DtAfter
        VB: Database.ReadInfo.DtAfter
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DtAfter
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 133
      example: []
      syntax:
        content:
          CSharp: public DateTime? DtAfter { get; }
          VB: Public ReadOnly Property DtAfter As Date?
        parameters: []
        return:
          type: System.Nullable{System.DateTime}
          description: 'Used for tables containing a date and time column: date and time of the last row to filter'
      overload: Database.ReadInfo.DtAfter*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.ReadInfo.EventTypes
      commentId: P:Database.ReadInfo.EventTypes
      language: CSharp
      name:
        CSharp: EventTypes
        VB: EventTypes
      nameWithType:
        CSharp: ReadInfo.EventTypes
        VB: ReadInfo.EventTypes
      qualifiedName:
        CSharp: Database.ReadInfo.EventTypes
        VB: Database.ReadInfo.EventTypes
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: EventTypes
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 136
      example: []
      syntax:
        content:
          CSharp: public string[] EventTypes { get; }
          VB: Public ReadOnly Property EventTypes As String()
        parameters: []
        return:
          type: System.String[]
          description: Used for tables containing an event type column. List of event types to filter
      overload: Database.ReadInfo.EventTypes*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.ReadInfo.CustomWhere
      commentId: P:Database.ReadInfo.CustomWhere
      language: CSharp
      name:
        CSharp: CustomWhere
        VB: CustomWhere
      nameWithType:
        CSharp: ReadInfo.CustomWhere
        VB: ReadInfo.CustomWhere
      qualifiedName:
        CSharp: Database.ReadInfo.CustomWhere
        VB: Database.ReadInfo.CustomWhere
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: CustomWhere
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 139
      example: []
      syntax:
        content:
          CSharp: public string CustomWhere { get; }
          VB: Public ReadOnly Property CustomWhere As String
        parameters: []
        return:
          type: System.String
          description: Parameter containing a custom SQL command to put after the WHERE statetement
      overload: Database.ReadInfo.CustomWhere*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.ReadInfo.#ctor(Database.IComTabInfo,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String[],System.String)
      commentId: M:Database.ReadInfo.#ctor(Database.IComTabInfo,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String[],System.String)
      language: CSharp
      name:
        CSharp: ReadInfo(IComTabInfo, String, Boolean, Nullable<DateTime>, Nullable<DateTime>, String[], String)
        VB: ReadInfo(IComTabInfo, String, Boolean, Nullable(Of DateTime), Nullable(Of DateTime), String(), String)
      nameWithType:
        CSharp: ReadInfo.ReadInfo(IComTabInfo, String, Boolean, Nullable<DateTime>, Nullable<DateTime>, String[], String)
        VB: ReadInfo.ReadInfo(IComTabInfo, String, Boolean, Nullable(Of DateTime), Nullable(Of DateTime), String(), String)
      qualifiedName:
        CSharp: Database.ReadInfo.ReadInfo(Database.IComTabInfo, System.String, System.Boolean, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.String[], System.String)
        VB: Database.ReadInfo.ReadInfo(Database.IComTabInfo, System.String, System.Boolean, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.String(), System.String)
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 151
      summary: "\nInitialize all variables of the class from parameters\n"
      example: []
      syntax:
        content:
          CSharp: public ReadInfo(IComTabInfo _tableInfo = null, string _orderBy = null, bool _isOrderAsc = true, DateTime? _dtBefore = null, DateTime? _dtAfter = null, string[] _eventTypes = null, string _customWhere = "")
          VB: Public Sub New(_tableInfo As IComTabInfo = Nothing, _orderBy As String = Nothing, _isOrderAsc As Boolean = True, _dtBefore As Date? = Nothing, _dtAfter As Date? = Nothing, _eventTypes As String() = Nothing, _customWhere As String = "")
        parameters:
        - id: _tableInfo
          type: Database.IComTabInfo
          description: <xref href="Database.ReadInfo.TableInfo" data-throw-if-not-resolved="false"></xref>
        - id: _orderBy
          type: System.String
          description: <xref href="Database.ReadInfo.OrderBy" data-throw-if-not-resolved="false"></xref>
        - id: _isOrderAsc
          type: System.Boolean
          description: <xref href="Database.ReadInfo.IsOrderAsc" data-throw-if-not-resolved="false"></xref>
        - id: _dtBefore
          type: System.Nullable{System.DateTime}
          description: <xref href="Database.ReadInfo.DtBefore" data-throw-if-not-resolved="false"></xref>
        - id: _dtAfter
          type: System.Nullable{System.DateTime}
          description: <xref href="Database.ReadInfo.DtAfter" data-throw-if-not-resolved="false"></xref>
        - id: _eventTypes
          type: System.String[]
          description: <xref href="Database.ReadInfo.EventTypes" data-throw-if-not-resolved="false"></xref>
        - id: _customWhere
          type: System.String
          description: <xref href="Database.ReadInfo.CustomWhere" data-throw-if-not-resolved="false"></xref>
      overload: Database.ReadInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Database.ReadInfo.TableInfo: 
        Database.ReadInfo.OrderBy: 
        Database.ReadInfo.IsOrderAsc: 
        Database.ReadInfo.DtBefore: 
        Database.ReadInfo.DtAfter: 
        Database.ReadInfo.EventTypes: 
        Database.ReadInfo.CustomWhere: 
    - id: Database.ReadInfo.#ctor(Database.ReadInfo,Database.IComTabInfo)
      commentId: M:Database.ReadInfo.#ctor(Database.ReadInfo,Database.IComTabInfo)
      language: CSharp
      name:
        CSharp: ReadInfo(ReadInfo, IComTabInfo)
        VB: ReadInfo(ReadInfo, IComTabInfo)
      nameWithType:
        CSharp: ReadInfo.ReadInfo(ReadInfo, IComTabInfo)
        VB: ReadInfo.ReadInfo(ReadInfo, IComTabInfo)
      qualifiedName:
        CSharp: Database.ReadInfo.ReadInfo(Database.ReadInfo, Database.IComTabInfo)
        VB: Database.ReadInfo.ReadInfo(Database.ReadInfo, Database.IComTabInfo)
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 174
      summary: "\nInitialize all variables of the class from another object of the same class (the database table is replaced though)\n"
      example: []
      syntax:
        content:
          CSharp: public ReadInfo(ReadInfo _readInfo, IComTabInfo _tableInfo = null)
          VB: Public Sub New(_readInfo As ReadInfo, _tableInfo As IComTabInfo = Nothing)
        parameters:
        - id: _readInfo
          type: Database.ReadInfo
          description: Object of the same class
        - id: _tableInfo
          type: Database.IComTabInfo
          description: <xref href="Database.ReadInfo.TableInfo" data-throw-if-not-resolved="false"></xref>
      overload: Database.ReadInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Database.ReadInfo.TableInfo: 
  - id: Database.MyDatabase
    commentId: T:Database.MyDatabase
    language: CSharp
    name:
      CSharp: MyDatabase
      VB: MyDatabase
    nameWithType:
      CSharp: MyDatabase
      VB: MyDatabase
    qualifiedName:
      CSharp: Database.MyDatabase
      VB: Database.MyDatabase
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: MyDatabase
      path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
      startLine: 192
    summary: "\nMain class of the namespace. This class allow the interface with a database (connect, disconnect, insert rows, update rows, delete rows, read rows)\n"
    example: []
    syntax:
      content:
        CSharp: public static class MyDatabase
        VB: Public Module MyDatabase
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Database.MyDatabase.info
      commentId: F:Database.MyDatabase.info
      language: CSharp
      name:
        CSharp: info
        VB: info
      nameWithType:
        CSharp: MyDatabase.info
        VB: MyDatabase.info
      qualifiedName:
        CSharp: Database.MyDatabase.info
        VB: Database.MyDatabase.info
      type: Field
      assemblies:
      - Database
      namespace: Database
      source:
        id: info
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 197
      example: []
      syntax:
        content:
          CSharp: public static IniInfo info
          VB: Public Shared info As IniInfo
        return:
          type: Database.IniInfo
          description: "\nVariable initialized by other projects\n"
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.Initialize(Database.IniInfo)
      commentId: M:Database.MyDatabase.Initialize(Database.IniInfo)
      language: CSharp
      name:
        CSharp: Initialize(IniInfo)
        VB: Initialize(IniInfo)
      nameWithType:
        CSharp: MyDatabase.Initialize(IniInfo)
        VB: MyDatabase.Initialize(IniInfo)
      qualifiedName:
        CSharp: Database.MyDatabase.Initialize(Database.IniInfo)
        VB: Database.MyDatabase.Initialize(Database.IniInfo)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: Initialize
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 261
      summary: "\nMethod called by other project which initializes the variable <xref href=\"Database.MyDatabase.info\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static void Initialize(IniInfo info_arg)
          VB: Public Shared Sub Initialize(info_arg As IniInfo)
        parameters:
        - id: info_arg
          type: Database.IniInfo
          description: <xref href="Database.IniInfo" data-throw-if-not-resolved="false"></xref> variable which contains the applicable settings from the calling project
      overload: Database.MyDatabase.Initialize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Database.MyDatabase.info: 
        Database.IniInfo: 
    - id: Database.MyDatabase.TaskEnQueue(System.Func{System.Object})
      commentId: M:Database.MyDatabase.TaskEnQueue(System.Func{System.Object})
      language: CSharp
      name:
        CSharp: TaskEnQueue(Func<Object>)
        VB: TaskEnQueue(Func(Of Object))
      nameWithType:
        CSharp: MyDatabase.TaskEnQueue(Func<Object>)
        VB: MyDatabase.TaskEnQueue(Func(Of Object))
      qualifiedName:
        CSharp: Database.MyDatabase.TaskEnQueue(System.Func<System.Object>)
        VB: Database.MyDatabase.TaskEnQueue(System.Func(Of System.Object))
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: TaskEnQueue
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 282
      summary: "\nOnly allowed method to interact with the database. This method adds a task to be executed to the task queue \n"
      example: []
      syntax:
        content:
          CSharp: public static Task<object> TaskEnQueue(Func<object> function)
          VB: Public Shared Function TaskEnQueue(function As Func(Of Object)) As Task(Of Object)
        parameters:
        - id: function
          type: System.Func{System.Object}
          description: Method to be added to the queue
        return:
          type: System.Threading.Tasks.Task{System.Object}
          description: The added task, it allows to interact with the task (e.g. wait it ends, get its return value)
      overload: Database.MyDatabase.TaskEnQueue*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.InsertRow_new(Database.IBasTabInfo,System.Object[])
      commentId: M:Database.MyDatabase.InsertRow_new(Database.IBasTabInfo,System.Object[])
      language: CSharp
      name:
        CSharp: InsertRow_new(IBasTabInfo, Object[])
        VB: InsertRow_new(IBasTabInfo, Object())
      nameWithType:
        CSharp: MyDatabase.InsertRow_new(IBasTabInfo, Object[])
        VB: MyDatabase.InsertRow_new(IBasTabInfo, Object())
      qualifiedName:
        CSharp: Database.MyDatabase.InsertRow_new(Database.IBasTabInfo, System.Object[])
        VB: Database.MyDatabase.InsertRow_new(Database.IBasTabInfo, System.Object())
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: InsertRow_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 289
      syntax:
        content:
          CSharp: public static bool InsertRow_new(IBasTabInfo tableInfo, object[] values)
          VB: Public Shared Function InsertRow_new(tableInfo As IBasTabInfo, values As Object()) As Boolean
        parameters:
        - id: tableInfo
          type: Database.IBasTabInfo
        - id: values
          type: System.Object[]
        return:
          type: System.Boolean
      overload: Database.MyDatabase.InsertRow_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.Update_Row_new(Database.IComTabInfo,System.Object[],System.Int32)
      commentId: M:Database.MyDatabase.Update_Row_new(Database.IComTabInfo,System.Object[],System.Int32)
      language: CSharp
      name:
        CSharp: Update_Row_new(IComTabInfo, Object[], Int32)
        VB: Update_Row_new(IComTabInfo, Object(), Int32)
      nameWithType:
        CSharp: MyDatabase.Update_Row_new(IComTabInfo, Object[], Int32)
        VB: MyDatabase.Update_Row_new(IComTabInfo, Object(), Int32)
      qualifiedName:
        CSharp: Database.MyDatabase.Update_Row_new(Database.IComTabInfo, System.Object[], System.Int32)
        VB: Database.MyDatabase.Update_Row_new(Database.IComTabInfo, System.Object(), System.Int32)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: Update_Row_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 351
      syntax:
        content:
          CSharp: public static bool Update_Row_new(IComTabInfo tableInfo, object[] values, int id)
          VB: Public Shared Function Update_Row_new(tableInfo As IComTabInfo, values As Object(), id As Integer) As Boolean
        parameters:
        - id: tableInfo
          type: Database.IComTabInfo
        - id: values
          type: System.Object[]
        - id: id
          type: System.Int32
        return:
          type: System.Boolean
      overload: Database.MyDatabase.Update_Row_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.DeleteRow_new(Database.IComTabInfo,System.Object)
      commentId: M:Database.MyDatabase.DeleteRow_new(Database.IComTabInfo,System.Object)
      language: CSharp
      name:
        CSharp: DeleteRow_new(IComTabInfo, Object)
        VB: DeleteRow_new(IComTabInfo, Object)
      nameWithType:
        CSharp: MyDatabase.DeleteRow_new(IComTabInfo, Object)
        VB: MyDatabase.DeleteRow_new(IComTabInfo, Object)
      qualifiedName:
        CSharp: Database.MyDatabase.DeleteRow_new(Database.IComTabInfo, System.Object)
        VB: Database.MyDatabase.DeleteRow_new(Database.IComTabInfo, System.Object)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: DeleteRow_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 388
      syntax:
        content:
          CSharp: public static bool DeleteRow_new(IComTabInfo tableInfo, object id)
          VB: Public Shared Function DeleteRow_new(tableInfo As IComTabInfo, id As Object) As Boolean
        parameters:
        - id: tableInfo
          type: Database.IComTabInfo
        - id: id
          type: System.Object
        return:
          type: System.Boolean
      overload: Database.MyDatabase.DeleteRow_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.DeleteRows_new(Database.IDtTabInfo,System.DateTime)
      commentId: M:Database.MyDatabase.DeleteRows_new(Database.IDtTabInfo,System.DateTime)
      language: CSharp
      name:
        CSharp: DeleteRows_new(IDtTabInfo, DateTime)
        VB: DeleteRows_new(IDtTabInfo, DateTime)
      nameWithType:
        CSharp: MyDatabase.DeleteRows_new(IDtTabInfo, DateTime)
        VB: MyDatabase.DeleteRows_new(IDtTabInfo, DateTime)
      qualifiedName:
        CSharp: Database.MyDatabase.DeleteRows_new(Database.IDtTabInfo, System.DateTime)
        VB: Database.MyDatabase.DeleteRows_new(Database.IDtTabInfo, System.DateTime)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: DeleteRows_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 409
      syntax:
        content:
          CSharp: public static bool DeleteRows_new(IDtTabInfo tableInfo, DateTime firstRecordDate)
          VB: Public Shared Function DeleteRows_new(tableInfo As IDtTabInfo, firstRecordDate As Date) As Boolean
        parameters:
        - id: tableInfo
          type: Database.IDtTabInfo
        - id: firstRecordDate
          type: System.DateTime
        return:
          type: System.Boolean
      overload: Database.MyDatabase.DeleteRows_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetOneRow_new(Database.IComTabInfo,System.Nullable{System.Int32},System.Object[])
      commentId: M:Database.MyDatabase.GetOneRow_new(Database.IComTabInfo,System.Nullable{System.Int32},System.Object[])
      language: CSharp
      name:
        CSharp: GetOneRow_new(IComTabInfo, Nullable<Int32>, Object[])
        VB: GetOneRow_new(IComTabInfo, Nullable(Of Int32), Object())
      nameWithType:
        CSharp: MyDatabase.GetOneRow_new(IComTabInfo, Nullable<Int32>, Object[])
        VB: MyDatabase.GetOneRow_new(IComTabInfo, Nullable(Of Int32), Object())
      qualifiedName:
        CSharp: Database.MyDatabase.GetOneRow_new(Database.IComTabInfo, System.Nullable<System.Int32>, System.Object[])
        VB: Database.MyDatabase.GetOneRow_new(Database.IComTabInfo, System.Nullable(Of System.Int32), System.Object())
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetOneRow_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 426
      syntax:
        content:
          CSharp: public static object[] GetOneRow_new(IComTabInfo table, int? id = null, object[] values = null)
          VB: Public Shared Function GetOneRow_new(table As IComTabInfo, id As Integer? = Nothing, values As Object() = Nothing) As Object()
        parameters:
        - id: table
          type: Database.IComTabInfo
        - id: id
          type: System.Nullable{System.Int32}
        - id: values
          type: System.Object[]
        return:
          type: System.Object[]
      overload: Database.MyDatabase.GetOneRow_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetOneRow(System.String,System.Int32,System.String,System.Boolean)
      commentId: M:Database.MyDatabase.GetOneRow(System.String,System.Int32,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: GetOneRow(String, Int32, String, Boolean)
        VB: GetOneRow(String, Int32, String, Boolean)
      nameWithType:
        CSharp: MyDatabase.GetOneRow(String, Int32, String, Boolean)
        VB: MyDatabase.GetOneRow(String, Int32, String, Boolean)
      qualifiedName:
        CSharp: Database.MyDatabase.GetOneRow(System.String, System.Int32, System.String, System.Boolean)
        VB: Database.MyDatabase.GetOneRow(System.String, System.Int32, System.String, System.Boolean)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetOneRow
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 464
      syntax:
        content:
          CSharp: public static object[] GetOneRow(string tableName, int nRow, string orderBy = null, bool isOrderAsc = true)
          VB: Public Shared Function GetOneRow(tableName As String, nRow As Integer, orderBy As String = Nothing, isOrderAsc As Boolean = True) As Object()
        parameters:
        - id: tableName
          type: System.String
        - id: nRow
          type: System.Int32
        - id: orderBy
          type: System.String
        - id: isOrderAsc
          type: System.Boolean
        return:
          type: System.Object[]
      overload: Database.MyDatabase.GetOneRow*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetRows_new(Database.ReadInfo,System.Object[],System.Int32)
      commentId: M:Database.MyDatabase.GetRows_new(Database.ReadInfo,System.Object[],System.Int32)
      language: CSharp
      name:
        CSharp: GetRows_new(ReadInfo, Object[], Int32)
        VB: GetRows_new(ReadInfo, Object(), Int32)
      nameWithType:
        CSharp: MyDatabase.GetRows_new(ReadInfo, Object[], Int32)
        VB: MyDatabase.GetRows_new(ReadInfo, Object(), Int32)
      qualifiedName:
        CSharp: Database.MyDatabase.GetRows_new(Database.ReadInfo, System.Object[], System.Int32)
        VB: Database.MyDatabase.GetRows_new(Database.ReadInfo, System.Object(), System.Int32)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetRows_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 499
      syntax:
        content:
          CSharp: public static List<object[]> GetRows_new(ReadInfo readInfo, object[] values = null, int nRows = 0)
          VB: Public Shared Function GetRows_new(readInfo As ReadInfo, values As Object() = Nothing, nRows As Integer = 0) As List(Of Object())
        parameters:
        - id: readInfo
          type: Database.ReadInfo
        - id: values
          type: System.Object[]
        - id: nRows
          type: System.Int32
        return:
          type: System.Collections.Generic.List{System.Object[]}
      overload: Database.MyDatabase.GetRows_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetAuditTrailRows_new(Database.ReadInfo,System.Int32)
      commentId: M:Database.MyDatabase.GetAuditTrailRows_new(Database.ReadInfo,System.Int32)
      language: CSharp
      name:
        CSharp: GetAuditTrailRows_new(ReadInfo, Int32)
        VB: GetAuditTrailRows_new(ReadInfo, Int32)
      nameWithType:
        CSharp: MyDatabase.GetAuditTrailRows_new(ReadInfo, Int32)
        VB: MyDatabase.GetAuditTrailRows_new(ReadInfo, Int32)
      qualifiedName:
        CSharp: Database.MyDatabase.GetAuditTrailRows_new(Database.ReadInfo, System.Int32)
        VB: Database.MyDatabase.GetAuditTrailRows_new(Database.ReadInfo, System.Int32)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetAuditTrailRows_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 545
      syntax:
        content:
          CSharp: public static List<object[]> GetAuditTrailRows_new(ReadInfo _readInfo, int nRows = 0)
          VB: Public Shared Function GetAuditTrailRows_new(_readInfo As ReadInfo, nRows As Integer = 0) As List(Of Object())
        parameters:
        - id: _readInfo
          type: Database.ReadInfo
        - id: nRows
          type: System.Int32
        return:
          type: System.Collections.Generic.List{System.Object[]}
      overload: Database.MyDatabase.GetAuditTrailRows_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetAlarms_new(System.Int32,System.Int32,System.Boolean)
      commentId: M:Database.MyDatabase.GetAlarms_new(System.Int32,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: GetAlarms_new(Int32, Int32, Boolean)
        VB: GetAlarms_new(Int32, Int32, Boolean)
      nameWithType:
        CSharp: MyDatabase.GetAlarms_new(Int32, Int32, Boolean)
        VB: MyDatabase.GetAlarms_new(Int32, Int32, Boolean)
      qualifiedName:
        CSharp: Database.MyDatabase.GetAlarms_new(System.Int32, System.Int32, System.Boolean)
        VB: Database.MyDatabase.GetAlarms_new(System.Int32, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetAlarms_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 587
      syntax:
        content:
          CSharp: public static List<object[]> GetAlarms_new(int firstId, int lastId, bool readAlert = false)
          VB: Public Shared Function GetAlarms_new(firstId As Integer, lastId As Integer, readAlert As Boolean = False) As List(Of Object())
        parameters:
        - id: firstId
          type: System.Int32
        - id: lastId
          type: System.Int32
        - id: readAlert
          type: System.Boolean
        return:
          type: System.Collections.Generic.List{System.Object[]}
      overload: Database.MyDatabase.GetAlarms_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetLastRecipes_new(Database.RecipeStatus)
      commentId: M:Database.MyDatabase.GetLastRecipes_new(Database.RecipeStatus)
      language: CSharp
      name:
        CSharp: GetLastRecipes_new(RecipeStatus)
        VB: GetLastRecipes_new(RecipeStatus)
      nameWithType:
        CSharp: MyDatabase.GetLastRecipes_new(RecipeStatus)
        VB: MyDatabase.GetLastRecipes_new(RecipeStatus)
      qualifiedName:
        CSharp: Database.MyDatabase.GetLastRecipes_new(Database.RecipeStatus)
        VB: Database.MyDatabase.GetLastRecipes_new(Database.RecipeStatus)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetLastRecipes_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 606
      syntax:
        content:
          CSharp: public static List<object[]> GetLastRecipes_new(RecipeStatus status = RecipeStatus.PRODnDRAFT)
          VB: Public Shared Function GetLastRecipes_new(status As RecipeStatus = RecipeStatus.PRODnDRAFT) As List(Of Object())
        parameters:
        - id: status
          type: Database.RecipeStatus
        return:
          type: System.Collections.Generic.List{System.Object[]}
      overload: Database.MyDatabase.GetLastRecipes_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetLastDailyTestDate(Database.DailyTestInfo,System.Object[],System.Nullable{System.DateTime})
      commentId: M:Database.MyDatabase.GetLastDailyTestDate(Database.DailyTestInfo,System.Object[],System.Nullable{System.DateTime})
      language: CSharp
      name:
        CSharp: GetLastDailyTestDate(DailyTestInfo, Object[], Nullable<DateTime>)
        VB: GetLastDailyTestDate(DailyTestInfo, Object(), Nullable(Of DateTime))
      nameWithType:
        CSharp: MyDatabase.GetLastDailyTestDate(DailyTestInfo, Object[], Nullable<DateTime>)
        VB: MyDatabase.GetLastDailyTestDate(DailyTestInfo, Object(), Nullable(Of DateTime))
      qualifiedName:
        CSharp: Database.MyDatabase.GetLastDailyTestDate(Database.DailyTestInfo, System.Object[], System.Nullable<System.DateTime>)
        VB: Database.MyDatabase.GetLastDailyTestDate(Database.DailyTestInfo, System.Object(), System.Nullable(Of System.DateTime))
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetLastDailyTestDate
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 625
      syntax:
        content:
          CSharp: public static DateTime? GetLastDailyTestDate(DailyTestInfo sampleInfo, object[] sampleValues, DateTime? lastSample = null)
          VB: Public Shared Function GetLastDailyTestDate(sampleInfo As DailyTestInfo, sampleValues As Object(), lastSample As Date? = Nothing) As Date?
        parameters:
        - id: sampleInfo
          type: Database.DailyTestInfo
        - id: sampleValues
          type: System.Object[]
        - id: lastSample
          type: System.Nullable{System.DateTime}
        return:
          type: System.Nullable{System.DateTime}
      overload: Database.MyDatabase.GetLastDailyTestDate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetMax_new(Database.IComTabInfo,System.String,System.Object[])
      commentId: M:Database.MyDatabase.GetMax_new(Database.IComTabInfo,System.String,System.Object[])
      language: CSharp
      name:
        CSharp: GetMax_new(IComTabInfo, String, Object[])
        VB: GetMax_new(IComTabInfo, String, Object())
      nameWithType:
        CSharp: MyDatabase.GetMax_new(IComTabInfo, String, Object[])
        VB: MyDatabase.GetMax_new(IComTabInfo, String, Object())
      qualifiedName:
        CSharp: Database.MyDatabase.GetMax_new(Database.IComTabInfo, System.String, System.Object[])
        VB: Database.MyDatabase.GetMax_new(Database.IComTabInfo, System.String, System.Object())
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetMax_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 672
      syntax:
        content:
          CSharp: public static int GetMax_new(IComTabInfo tableInfo, string column, object[] values = null)
          VB: Public Shared Function GetMax_new(tableInfo As IComTabInfo, column As String, values As Object() = Nothing) As Integer
        parameters:
        - id: tableInfo
          type: Database.IComTabInfo
        - id: column
          type: System.String
        - id: values
          type: System.Object[]
        return:
          type: System.Int32
      overload: Database.MyDatabase.GetMax_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetRowCount(System.String)
      commentId: M:Database.MyDatabase.GetRowCount(System.String)
      language: CSharp
      name:
        CSharp: GetRowCount(String)
        VB: GetRowCount(String)
      nameWithType:
        CSharp: MyDatabase.GetRowCount(String)
        VB: MyDatabase.GetRowCount(String)
      qualifiedName:
        CSharp: Database.MyDatabase.GetRowCount(System.String)
        VB: Database.MyDatabase.GetRowCount(System.String)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetRowCount
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 721
      syntax:
        content:
          CSharp: public static int GetRowCount(string tableName)
          VB: Public Shared Function GetRowCount(tableName As String) As Integer
        parameters:
        - id: tableName
          type: System.String
        return:
          type: System.Int32
      overload: Database.MyDatabase.GetRowCount*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.CreateTempTable
      commentId: M:Database.MyDatabase.CreateTempTable
      language: CSharp
      name:
        CSharp: CreateTempTable()
        VB: CreateTempTable()
      nameWithType:
        CSharp: MyDatabase.CreateTempTable()
        VB: MyDatabase.CreateTempTable()
      qualifiedName:
        CSharp: Database.MyDatabase.CreateTempTable()
        VB: Database.MyDatabase.CreateTempTable()
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: CreateTempTable
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 748
      syntax:
        content:
          CSharp: public static bool CreateTempTable()
          VB: Public Shared Function CreateTempTable As Boolean
        return:
          type: System.Boolean
      overload: Database.MyDatabase.CreateTempTable*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetResultRowTemp_new
      commentId: M:Database.MyDatabase.GetResultRowTemp_new
      language: CSharp
      name:
        CSharp: GetResultRowTemp_new()
        VB: GetResultRowTemp_new()
      nameWithType:
        CSharp: MyDatabase.GetResultRowTemp_new()
        VB: MyDatabase.GetResultRowTemp_new()
      qualifiedName:
        CSharp: Database.MyDatabase.GetResultRowTemp_new()
        VB: Database.MyDatabase.GetResultRowTemp_new()
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetResultRowTemp_new
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 769
      syntax:
        content:
          CSharp: public static object[] GetResultRowTemp_new()
          VB: Public Shared Function GetResultRowTemp_new As Object()
        return:
          type: System.Object[]
      overload: Database.MyDatabase.GetResultRowTemp_new*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Database.MyDatabase.GetRecipeStatus(Database.RecipeStatus)
      commentId: M:Database.MyDatabase.GetRecipeStatus(Database.RecipeStatus)
      language: CSharp
      name:
        CSharp: GetRecipeStatus(RecipeStatus)
        VB: GetRecipeStatus(RecipeStatus)
      nameWithType:
        CSharp: MyDatabase.GetRecipeStatus(RecipeStatus)
        VB: MyDatabase.GetRecipeStatus(RecipeStatus)
      qualifiedName:
        CSharp: Database.MyDatabase.GetRecipeStatus(Database.RecipeStatus)
        VB: Database.MyDatabase.GetRecipeStatus(Database.RecipeStatus)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetRecipeStatus
        path: C:\Temp\MixingApplication\Source code\Database\MyDatabase.cs
        startLine: 787
      syntax:
        content:
          CSharp: public static int GetRecipeStatus(RecipeStatus status)
          VB: Public Shared Function GetRecipeStatus(status As RecipeStatus) As Integer
        parameters:
        - id: status
          type: Database.RecipeStatus
        return:
          type: System.Int32
      overload: Database.MyDatabase.GetRecipeStatus*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Database.IBasTabInfo
    commentId: T:Database.IBasTabInfo
    language: CSharp
    name:
      CSharp: IBasTabInfo
      VB: IBasTabInfo
    nameWithType:
      CSharp: IBasTabInfo
      VB: IBasTabInfo
    qualifiedName:
      CSharp: Database.IBasTabInfo
      VB: Database.IBasTabInfo
    type: Interface
    assemblies:
    - Database
    namespace: Database
    source:
      id: IBasTabInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 45
    summary: "\nBasic interface for a database table.\n<p>Creation revision: 001</p> \n"
    example: []
    syntax:
      content:
        CSharp: public interface IBasTabInfo
        VB: Public Interface IBasTabInfo
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Database.IBasTabInfo.TabName
      commentId: P:Database.IBasTabInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: IBasTabInfo.TabName
        VB: IBasTabInfo.TabName
      qualifiedName:
        CSharp: Database.IBasTabInfo.TabName
        VB: Database.IBasTabInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 48
      example: []
      syntax:
        content:
          CSharp: string TabName { get; }
          VB: ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table
      overload: Database.IBasTabInfo.TabName*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Database.IBasTabInfo.Ids
      commentId: P:Database.IBasTabInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: IBasTabInfo.Ids
        VB: IBasTabInfo.Ids
      qualifiedName:
        CSharp: Database.IBasTabInfo.Ids
        VB: Database.IBasTabInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 52
      example: []
      syntax:
        content:
          CSharp: string[] Ids { get; }
          VB: ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table
      overload: Database.IBasTabInfo.Ids*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Database.IBasTabInfo.Descriptions
      commentId: P:Database.IBasTabInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: IBasTabInfo.Descriptions
        VB: IBasTabInfo.Descriptions
      qualifiedName:
        CSharp: Database.IBasTabInfo.Descriptions
        VB: Database.IBasTabInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 54
      example: []
      syntax:
        content:
          CSharp: string[] Descriptions { get; }
          VB: ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.IBasTabInfo.Descriptions*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: Database.IComTabInfo
    commentId: T:Database.IComTabInfo
    language: CSharp
    name:
      CSharp: IComTabInfo
      VB: IComTabInfo
    nameWithType:
      CSharp: IComTabInfo
      VB: IComTabInfo
    qualifiedName:
      CSharp: Database.IComTabInfo
      VB: Database.IComTabInfo
    type: Interface
    assemblies:
    - Database
    namespace: Database
    source:
      id: IComTabInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 62
    summary: "\nInterface of a common database table.\nBased on the basic database table interface\n<p>Creation revision: 001</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface IComTabInfo : IBasTabInfo'
        VB: >-
          Public Interface IComTabInfo

              Inherits IBasTabInfo
    inheritedMembers:
    - Database.IBasTabInfo.TabName
    - Database.IBasTabInfo.Ids
    - Database.IBasTabInfo.Descriptions
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Database.IComTabInfo.Id
      commentId: P:Database.IComTabInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: IComTabInfo.Id
        VB: IComTabInfo.Id
      qualifiedName:
        CSharp: Database.IComTabInfo.Id
        VB: Database.IComTabInfo.Id
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Id
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 65
      example: []
      syntax:
        content:
          CSharp: int Id { get; }
          VB: ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented.'
      overload: Database.IComTabInfo.Id*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: Database.IDtTabInfo
    commentId: T:Database.IDtTabInfo
    language: CSharp
    name:
      CSharp: IDtTabInfo
      VB: IDtTabInfo
    nameWithType:
      CSharp: IDtTabInfo
      VB: IDtTabInfo
    qualifiedName:
      CSharp: Database.IDtTabInfo
      VB: Database.IDtTabInfo
    type: Interface
    assemblies:
    - Database
    namespace: Database
    source:
      id: IDtTabInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 73
    summary: "\nInterface of a basic table which contains a date and time column.\nBased on the basic database table interface\n<p>Creation revision: 001</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface IDtTabInfo : IBasTabInfo'
        VB: >-
          Public Interface IDtTabInfo

              Inherits IBasTabInfo
    inheritedMembers:
    - Database.IBasTabInfo.TabName
    - Database.IBasTabInfo.Ids
    - Database.IBasTabInfo.Descriptions
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Database.IDtTabInfo.DateTime
      commentId: P:Database.IDtTabInfo.DateTime
      language: CSharp
      name:
        CSharp: DateTime
        VB: DateTime
      nameWithType:
        CSharp: IDtTabInfo.DateTime
        VB: IDtTabInfo.DateTime
      qualifiedName:
        CSharp: Database.IDtTabInfo.DateTime
        VB: Database.IDtTabInfo.DateTime
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DateTime
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 76
      example: []
      syntax:
        content:
          CSharp: int DateTime { get; }
          VB: ReadOnly Property DateTime As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the date and time column
      overload: Database.IDtTabInfo.DateTime*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: Database.ISeqTabInfo
    commentId: T:Database.ISeqTabInfo
    language: CSharp
    name:
      CSharp: ISeqTabInfo
      VB: ISeqTabInfo
    nameWithType:
      CSharp: ISeqTabInfo
      VB: ISeqTabInfo
    qualifiedName:
      CSharp: Database.ISeqTabInfo
      VB: Database.ISeqTabInfo
    type: Interface
    assemblies:
    - Database
    namespace: Database
    source:
      id: ISeqTabInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 84
    summary: "\nInterface of a sequential table (table whose rows can refer to another row from the same table or another sequential table).\nBased on the common database table interface\n<p>Creation revision: 001</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface ISeqTabInfo : IComTabInfo, IBasTabInfo'
        VB: >-
          Public Interface ISeqTabInfo

              Inherits IComTabInfo
    inheritedMembers:
    - Database.IComTabInfo.Id
    - Database.IBasTabInfo.TabName
    - Database.IBasTabInfo.Ids
    - Database.IBasTabInfo.Descriptions
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Database.ISeqTabInfo.SeqType
      commentId: P:Database.ISeqTabInfo.SeqType
      language: CSharp
      name:
        CSharp: SeqType
        VB: SeqType
      nameWithType:
        CSharp: ISeqTabInfo.SeqType
        VB: ISeqTabInfo.SeqType
      qualifiedName:
        CSharp: Database.ISeqTabInfo.SeqType
        VB: Database.ISeqTabInfo.SeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 87
      example: []
      syntax:
        content:
          CSharp: int SeqType { get; }
          VB: ReadOnly Property SeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Identification number of the current sequential table
      overload: Database.ISeqTabInfo.SeqType*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Database.ISeqTabInfo.NextSeqType
      commentId: P:Database.ISeqTabInfo.NextSeqType
      language: CSharp
      name:
        CSharp: NextSeqType
        VB: NextSeqType
      nameWithType:
        CSharp: ISeqTabInfo.NextSeqType
        VB: ISeqTabInfo.NextSeqType
      qualifiedName:
        CSharp: Database.ISeqTabInfo.NextSeqType
        VB: Database.ISeqTabInfo.NextSeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 90
      example: []
      syntax:
        content:
          CSharp: int NextSeqType { get; }
          VB: ReadOnly Property NextSeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential type column. The type is a variable used to identify the next sequential table
      overload: Database.ISeqTabInfo.NextSeqType*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Database.ISeqTabInfo.NextSeqId
      commentId: P:Database.ISeqTabInfo.NextSeqId
      language: CSharp
      name:
        CSharp: NextSeqId
        VB: NextSeqId
      nameWithType:
        CSharp: ISeqTabInfo.NextSeqId
        VB: ISeqTabInfo.NextSeqId
      qualifiedName:
        CSharp: Database.ISeqTabInfo.NextSeqId
        VB: Database.ISeqTabInfo.NextSeqId
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqId
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 93
      example: []
      syntax:
        content:
          CSharp: int NextSeqId { get; }
          VB: ReadOnly Property NextSeqId As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential id column. This column contains the id (see Id from IComTabInfo) of the row of the next sequential table
      overload: Database.ISeqTabInfo.NextSeqId*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: Database.ICycleSeqInfo
    commentId: T:Database.ICycleSeqInfo
    language: CSharp
    name:
      CSharp: ICycleSeqInfo
      VB: ICycleSeqInfo
    nameWithType:
      CSharp: ICycleSeqInfo
      VB: ICycleSeqInfo
    qualifiedName:
      CSharp: Database.ICycleSeqInfo
      VB: Database.ICycleSeqInfo
    type: Interface
    assemblies:
    - Database
    namespace: Database
    source:
      id: ICycleSeqInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 101
    summary: "\nInterface of a cycle sequential table. This type of table contains the information of the sequence of a cycle (results and recipe information). Recipe information is based on the applicable recipe table (which is a sequential table)\nBased on the sequential database table interface\n<p>Creation revision: 001</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface ICycleSeqInfo : ISeqTabInfo, IComTabInfo, IBasTabInfo'
        VB: >-
          Public Interface ICycleSeqInfo

              Inherits ISeqTabInfo
    inheritedMembers:
    - Database.ISeqTabInfo.SeqType
    - Database.ISeqTabInfo.NextSeqType
    - Database.ISeqTabInfo.NextSeqId
    - Database.IComTabInfo.Id
    - Database.IBasTabInfo.TabName
    - Database.IBasTabInfo.Ids
    - Database.IBasTabInfo.Descriptions
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Database.ICycleSeqInfo.GetRecipeParameters(System.Object[],System.Int32)
      commentId: M:Database.ICycleSeqInfo.GetRecipeParameters(System.Object[],System.Int32)
      language: CSharp
      name:
        CSharp: GetRecipeParameters(Object[], Int32)
        VB: GetRecipeParameters(Object(), Int32)
      nameWithType:
        CSharp: ICycleSeqInfo.GetRecipeParameters(Object[], Int32)
        VB: ICycleSeqInfo.GetRecipeParameters(Object(), Int32)
      qualifiedName:
        CSharp: Database.ICycleSeqInfo.GetRecipeParameters(System.Object[], System.Int32)
        VB: Database.ICycleSeqInfo.GetRecipeParameters(System.Object(), System.Int32)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetRecipeParameters
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 115
      summary: "\nMethod which returns the recipe information related to the applicable recipe table \n"
      example: []
      syntax:
        content:
          CSharp: object[] GetRecipeParameters(object[] recipe, int idCycle)
          VB: Function GetRecipeParameters(recipe As Object(), idCycle As Integer) As Object()
        parameters:
        - id: recipe
          type: System.Object[]
          description: Variable containing the recipe information
        - id: idCycle
          type: System.Int32
          description: The value of the id column (see Id from IComTabInfo) of the row of the first cycle sequential table
        return:
          type: System.Object[]
      overload: Database.ICycleSeqInfo.GetRecipeParameters*
      modifiers:
        CSharp: []
        VB: []
  - id: Database.AuditTrailInfo
    commentId: T:Database.AuditTrailInfo
    language: CSharp
    name:
      CSharp: AuditTrailInfo
      VB: AuditTrailInfo
    nameWithType:
      CSharp: AuditTrailInfo
      VB: AuditTrailInfo
    qualifiedName:
      CSharp: Database.AuditTrailInfo
      VB: Database.AuditTrailInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: AuditTrailInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 134
    summary: "\nClass containing the infomration of the audit trail database table. The table must contain at least the following colummns: \nId (UNIQUE INTEGER)\nDateTime, \nusername, \neventType, \ndescription, \nvalueBefore, \nvalueAfter, \ncomment\n<p>Creation revision: 001</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AuditTrailInfo : IComTabInfo, IDtTabInfo, IBasTabInfo'
        VB: >-
          Public Class AuditTrailInfo

              Implements IComTabInfo, IDtTabInfo, IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.IComTabInfo
    - Database.IDtTabInfo
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.AuditTrailInfo.#ctor
      commentId: M:Database.AuditTrailInfo.#ctor
      language: CSharp
      name:
        CSharp: AuditTrailInfo()
        VB: AuditTrailInfo()
      nameWithType:
        CSharp: AuditTrailInfo.AuditTrailInfo()
        VB: AuditTrailInfo.AuditTrailInfo()
      qualifiedName:
        CSharp: Database.AuditTrailInfo.AuditTrailInfo()
        VB: Database.AuditTrailInfo.AuditTrailInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 139
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public AuditTrailInfo()
          VB: Public Sub New
      overload: Database.AuditTrailInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.AuditTrailInfo.TabName
      commentId: P:Database.AuditTrailInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: AuditTrailInfo.TabName
        VB: AuditTrailInfo.TabName
      qualifiedName:
        CSharp: Database.AuditTrailInfo.TabName
        VB: Database.AuditTrailInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 170
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.AuditTrailInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AuditTrailInfo.Ids
      commentId: P:Database.AuditTrailInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: AuditTrailInfo.Ids
        VB: AuditTrailInfo.Ids
      qualifiedName:
        CSharp: Database.AuditTrailInfo.Ids
        VB: Database.AuditTrailInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 176
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; set; }
          VB: Public Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.AuditTrailInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Database.AuditTrailInfo.Descriptions
      commentId: P:Database.AuditTrailInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: AuditTrailInfo.Descriptions
        VB: AuditTrailInfo.Descriptions
      qualifiedName:
        CSharp: Database.AuditTrailInfo.Descriptions
        VB: Database.AuditTrailInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 178
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.AuditTrailInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AuditTrailInfo.Id
      commentId: P:Database.AuditTrailInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: AuditTrailInfo.Id
        VB: AuditTrailInfo.Id
      qualifiedName:
        CSharp: Database.AuditTrailInfo.Id
        VB: Database.AuditTrailInfo.Id
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Id
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 181
      example: []
      syntax:
        content:
          CSharp: public int Id { get; }
          VB: Public ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
      overload: Database.AuditTrailInfo.Id*
      implements:
      - Database.IComTabInfo.Id
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AuditTrailInfo.DateTime
      commentId: P:Database.AuditTrailInfo.DateTime
      language: CSharp
      name:
        CSharp: DateTime
        VB: DateTime
      nameWithType:
        CSharp: AuditTrailInfo.DateTime
        VB: AuditTrailInfo.DateTime
      qualifiedName:
        CSharp: Database.AuditTrailInfo.DateTime
        VB: Database.AuditTrailInfo.DateTime
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DateTime
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 184
      example: []
      syntax:
        content:
          CSharp: public int DateTime { get; }
          VB: Public ReadOnly Property DateTime As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the date and time column. This column contains the date and time of the insertion the rows. From IDtTabInfo
      overload: Database.AuditTrailInfo.DateTime*
      implements:
      - Database.IDtTabInfo.DateTime
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AuditTrailInfo.Username
      commentId: P:Database.AuditTrailInfo.Username
      language: CSharp
      name:
        CSharp: Username
        VB: Username
      nameWithType:
        CSharp: AuditTrailInfo.Username
        VB: AuditTrailInfo.Username
      qualifiedName:
        CSharp: Database.AuditTrailInfo.Username
        VB: Database.AuditTrailInfo.Username
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Username
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 187
      example: []
      syntax:
        content:
          CSharp: public int Username { get; }
          VB: Public ReadOnly Property Username As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the username column. This column contains the username of the user who performed the event to be logged in the audit trail
      overload: Database.AuditTrailInfo.Username*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AuditTrailInfo.EventType
      commentId: P:Database.AuditTrailInfo.EventType
      language: CSharp
      name:
        CSharp: EventType
        VB: EventType
      nameWithType:
        CSharp: AuditTrailInfo.EventType
        VB: AuditTrailInfo.EventType
      qualifiedName:
        CSharp: Database.AuditTrailInfo.EventType
        VB: Database.AuditTrailInfo.EventType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: EventType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 190
      example: []
      syntax:
        content:
          CSharp: public int EventType { get; }
          VB: Public ReadOnly Property EventType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the event type column. This column contains the type the event to be logged in the audit trail
      overload: Database.AuditTrailInfo.EventType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AuditTrailInfo.Description
      commentId: P:Database.AuditTrailInfo.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: AuditTrailInfo.Description
        VB: AuditTrailInfo.Description
      qualifiedName:
        CSharp: Database.AuditTrailInfo.Description
        VB: Database.AuditTrailInfo.Description
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Description
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 193
      example: []
      syntax:
        content:
          CSharp: public int Description { get; }
          VB: Public ReadOnly Property Description As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the description column. This column contains the description the event to be logged in the audit trail
      overload: Database.AuditTrailInfo.Description*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AuditTrailInfo.ValueBefore
      commentId: P:Database.AuditTrailInfo.ValueBefore
      language: CSharp
      name:
        CSharp: ValueBefore
        VB: ValueBefore
      nameWithType:
        CSharp: AuditTrailInfo.ValueBefore
        VB: AuditTrailInfo.ValueBefore
      qualifiedName:
        CSharp: Database.AuditTrailInfo.ValueBefore
        VB: Database.AuditTrailInfo.ValueBefore
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: ValueBefore
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 196
      example: []
      syntax:
        content:
          CSharp: public int ValueBefore { get; }
          VB: Public ReadOnly Property ValueBefore As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the value before column. This column contains the value before the event to be logged in the audit trail
      overload: Database.AuditTrailInfo.ValueBefore*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AuditTrailInfo.ValueAfter
      commentId: P:Database.AuditTrailInfo.ValueAfter
      language: CSharp
      name:
        CSharp: ValueAfter
        VB: ValueAfter
      nameWithType:
        CSharp: AuditTrailInfo.ValueAfter
        VB: AuditTrailInfo.ValueAfter
      qualifiedName:
        CSharp: Database.AuditTrailInfo.ValueAfter
        VB: Database.AuditTrailInfo.ValueAfter
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: ValueAfter
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 199
      example: []
      syntax:
        content:
          CSharp: public int ValueAfter { get; }
          VB: Public ReadOnly Property ValueAfter As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the value after column. This column contains the value after the event to be logged in the audit trail
      overload: Database.AuditTrailInfo.ValueAfter*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AuditTrailInfo.Comment
      commentId: P:Database.AuditTrailInfo.Comment
      language: CSharp
      name:
        CSharp: Comment
        VB: Comment
      nameWithType:
        CSharp: AuditTrailInfo.Comment
        VB: AuditTrailInfo.Comment
      qualifiedName:
        CSharp: Database.AuditTrailInfo.Comment
        VB: Database.AuditTrailInfo.Comment
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Comment
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 202
      example: []
      syntax:
        content:
          CSharp: public int Comment { get; }
          VB: Public ReadOnly Property Comment As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the comment column. This column contains the comment of the event to be logged in the audit trail
      overload: Database.AuditTrailInfo.Comment*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Database.AccessTableInfo
    commentId: T:Database.AccessTableInfo
    language: CSharp
    name:
      CSharp: AccessTableInfo
      VB: AccessTableInfo
    nameWithType:
      CSharp: AccessTableInfo
      VB: AccessTableInfo
    qualifiedName:
      CSharp: Database.AccessTableInfo
      VB: Database.AccessTableInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: AccessTableInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 212
    summary: "\nClass containing the infomration of the access database table. The table must contain at least the following colummns: \nId,\nRole,\ncyclestart... (TBD).\n<p>Creation revision: 001</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AccessTableInfo : IComTabInfo, IBasTabInfo'
        VB: >-
          Public Class AccessTableInfo

              Implements IComTabInfo, IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.IComTabInfo
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.AccessTableInfo.#ctor
      commentId: M:Database.AccessTableInfo.#ctor
      language: CSharp
      name:
        CSharp: AccessTableInfo()
        VB: AccessTableInfo()
      nameWithType:
        CSharp: AccessTableInfo.AccessTableInfo()
        VB: AccessTableInfo.AccessTableInfo()
      qualifiedName:
        CSharp: Database.AccessTableInfo.AccessTableInfo()
        VB: Database.AccessTableInfo.AccessTableInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 217
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public AccessTableInfo()
          VB: Public Sub New
      overload: Database.AccessTableInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.AccessTableInfo.TabName
      commentId: P:Database.AccessTableInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: AccessTableInfo.TabName
        VB: AccessTableInfo.TabName
      qualifiedName:
        CSharp: Database.AccessTableInfo.TabName
        VB: Database.AccessTableInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 256
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.AccessTableInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AccessTableInfo.Ids
      commentId: P:Database.AccessTableInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: AccessTableInfo.Ids
        VB: AccessTableInfo.Ids
      qualifiedName:
        CSharp: Database.AccessTableInfo.Ids
        VB: Database.AccessTableInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 262
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; }
          VB: Public ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.AccessTableInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AccessTableInfo.Descriptions
      commentId: P:Database.AccessTableInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: AccessTableInfo.Descriptions
        VB: AccessTableInfo.Descriptions
      qualifiedName:
        CSharp: Database.AccessTableInfo.Descriptions
        VB: Database.AccessTableInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 264
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.AccessTableInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AccessTableInfo.Id
      commentId: P:Database.AccessTableInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: AccessTableInfo.Id
        VB: AccessTableInfo.Id
      qualifiedName:
        CSharp: Database.AccessTableInfo.Id
        VB: Database.AccessTableInfo.Id
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Id
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 267
      example: []
      syntax:
        content:
          CSharp: public int Id { get; }
          VB: Public ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
      overload: Database.AccessTableInfo.Id*
      implements:
      - Database.IComTabInfo.Id
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AccessTableInfo.Role
      commentId: P:Database.AccessTableInfo.Role
      language: CSharp
      name:
        CSharp: Role
        VB: Role
      nameWithType:
        CSharp: AccessTableInfo.Role
        VB: AccessTableInfo.Role
      qualifiedName:
        CSharp: Database.AccessTableInfo.Role
        VB: Database.AccessTableInfo.Role
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Role
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 270
      example: []
      syntax:
        content:
          CSharp: public int Role { get; }
          VB: Public ReadOnly Property Role As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the role column. This column contains the name of the applicable access role
      overload: Database.AccessTableInfo.Role*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.AccessTableInfo.CycleStart
      commentId: P:Database.AccessTableInfo.CycleStart
      language: CSharp
      name:
        CSharp: CycleStart
        VB: CycleStart
      nameWithType:
        CSharp: AccessTableInfo.CycleStart
        VB: AccessTableInfo.CycleStart
      qualifiedName:
        CSharp: Database.AccessTableInfo.CycleStart
        VB: Database.AccessTableInfo.CycleStart
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: CycleStart
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 273
      example: []
      syntax:
        content:
          CSharp: public static int CycleStart { get; }
          VB: Public Shared ReadOnly Property CycleStart As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the cycle start column. This column is the access right of the action start a cycle for the applicable access role
      overload: Database.AccessTableInfo.CycleStart*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.AccessTableInfo.RecipeUpdate
      commentId: P:Database.AccessTableInfo.RecipeUpdate
      language: CSharp
      name:
        CSharp: RecipeUpdate
        VB: RecipeUpdate
      nameWithType:
        CSharp: AccessTableInfo.RecipeUpdate
        VB: AccessTableInfo.RecipeUpdate
      qualifiedName:
        CSharp: Database.AccessTableInfo.RecipeUpdate
        VB: Database.AccessTableInfo.RecipeUpdate
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: RecipeUpdate
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 276
      example: []
      syntax:
        content:
          CSharp: public static int RecipeUpdate { get; }
          VB: Public Shared ReadOnly Property RecipeUpdate As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the create recipe column. This column is the access the right of the action create a recipe for the applicable access role
      overload: Database.AccessTableInfo.RecipeUpdate*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.AccessTableInfo.Backup
      commentId: P:Database.AccessTableInfo.Backup
      language: CSharp
      name:
        CSharp: Backup
        VB: Backup
      nameWithType:
        CSharp: AccessTableInfo.Backup
        VB: AccessTableInfo.Backup
      qualifiedName:
        CSharp: Database.AccessTableInfo.Backup
        VB: Database.AccessTableInfo.Backup
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Backup
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 279
      example: []
      syntax:
        content:
          CSharp: public static int Backup { get; }
          VB: Public Shared ReadOnly Property Backup As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the backup column. This column is the access the right of the backup and archiving actions
      overload: Database.AccessTableInfo.Backup*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.AccessTableInfo.Parameters
      commentId: P:Database.AccessTableInfo.Parameters
      language: CSharp
      name:
        CSharp: Parameters
        VB: Parameters
      nameWithType:
        CSharp: AccessTableInfo.Parameters
        VB: AccessTableInfo.Parameters
      qualifiedName:
        CSharp: Database.AccessTableInfo.Parameters
        VB: Database.AccessTableInfo.Parameters
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Parameters
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 282
      example: []
      syntax:
        content:
          CSharp: public static int Parameters { get; }
          VB: Public Shared ReadOnly Property Parameters As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the parameters column. This column is the access the right of the parameters screen
      overload: Database.AccessTableInfo.Parameters*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.AccessTableInfo.DailyTest
      commentId: P:Database.AccessTableInfo.DailyTest
      language: CSharp
      name:
        CSharp: DailyTest
        VB: DailyTest
      nameWithType:
        CSharp: AccessTableInfo.DailyTest
        VB: AccessTableInfo.DailyTest
      qualifiedName:
        CSharp: Database.AccessTableInfo.DailyTest
        VB: Database.AccessTableInfo.DailyTest
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DailyTest
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 285
      example: []
      syntax:
        content:
          CSharp: public static int DailyTest { get; }
          VB: Public Shared ReadOnly Property DailyTest As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the daily test column. This column is the access the right of the daily test
      overload: Database.AccessTableInfo.DailyTest*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.AccessTableInfo.AckAlarm
      commentId: P:Database.AccessTableInfo.AckAlarm
      language: CSharp
      name:
        CSharp: AckAlarm
        VB: AckAlarm
      nameWithType:
        CSharp: AccessTableInfo.AckAlarm
        VB: AccessTableInfo.AckAlarm
      qualifiedName:
        CSharp: Database.AccessTableInfo.AckAlarm
        VB: Database.AccessTableInfo.AckAlarm
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: AckAlarm
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 288
      example: []
      syntax:
        content:
          CSharp: public static int AckAlarm { get; }
          VB: Public Shared ReadOnly Property AckAlarm As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the ackowledgment of alarm column. This column is the access the right of the ackowledgment of alarm
      overload: Database.AccessTableInfo.AckAlarm*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.AccessTableInfo.ApplicationStop
      commentId: P:Database.AccessTableInfo.ApplicationStop
      language: CSharp
      name:
        CSharp: ApplicationStop
        VB: ApplicationStop
      nameWithType:
        CSharp: AccessTableInfo.ApplicationStop
        VB: AccessTableInfo.ApplicationStop
      qualifiedName:
        CSharp: Database.AccessTableInfo.ApplicationStop
        VB: Database.AccessTableInfo.ApplicationStop
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: ApplicationStop
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 291
      example: []
      syntax:
        content:
          CSharp: public static int ApplicationStop { get; }
          VB: Public Shared ReadOnly Property ApplicationStop As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the application stop column. This column is the access the right of the action stop the application for the applicable access role
      overload: Database.AccessTableInfo.ApplicationStop*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.AccessTableInfo.OperatorRole
      commentId: P:Database.AccessTableInfo.OperatorRole
      language: CSharp
      name:
        CSharp: OperatorRole
        VB: OperatorRole
      nameWithType:
        CSharp: AccessTableInfo.OperatorRole
        VB: AccessTableInfo.OperatorRole
      qualifiedName:
        CSharp: Database.AccessTableInfo.OperatorRole
        VB: Database.AccessTableInfo.OperatorRole
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: OperatorRole
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 294
      example: []
      syntax:
        content:
          CSharp: public static string OperatorRole { get; }
          VB: Public Shared ReadOnly Property OperatorRole As String
        parameters: []
        return:
          type: System.String
          description: Name of the operator access role
      overload: Database.AccessTableInfo.OperatorRole*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.AccessTableInfo.SupervisorRole
      commentId: P:Database.AccessTableInfo.SupervisorRole
      language: CSharp
      name:
        CSharp: SupervisorRole
        VB: SupervisorRole
      nameWithType:
        CSharp: AccessTableInfo.SupervisorRole
        VB: AccessTableInfo.SupervisorRole
      qualifiedName:
        CSharp: Database.AccessTableInfo.SupervisorRole
        VB: Database.AccessTableInfo.SupervisorRole
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SupervisorRole
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 297
      example: []
      syntax:
        content:
          CSharp: public static string SupervisorRole { get; }
          VB: Public Shared ReadOnly Property SupervisorRole As String
        parameters: []
        return:
          type: System.String
          description: Name of the supervisor access role
      overload: Database.AccessTableInfo.SupervisorRole*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.AccessTableInfo.AdministratorRole
      commentId: P:Database.AccessTableInfo.AdministratorRole
      language: CSharp
      name:
        CSharp: AdministratorRole
        VB: AdministratorRole
      nameWithType:
        CSharp: AccessTableInfo.AdministratorRole
        VB: AccessTableInfo.AdministratorRole
      qualifiedName:
        CSharp: Database.AccessTableInfo.AdministratorRole
        VB: Database.AccessTableInfo.AdministratorRole
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: AdministratorRole
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 300
      example: []
      syntax:
        content:
          CSharp: public static string AdministratorRole { get; }
          VB: Public Shared ReadOnly Property AdministratorRole As String
        parameters: []
        return:
          type: System.String
          description: Name of the administrator access role
      overload: Database.AccessTableInfo.AdministratorRole*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Database.AccessTableInfo.NoneRole
      commentId: P:Database.AccessTableInfo.NoneRole
      language: CSharp
      name:
        CSharp: NoneRole
        VB: NoneRole
      nameWithType:
        CSharp: AccessTableInfo.NoneRole
        VB: AccessTableInfo.NoneRole
      qualifiedName:
        CSharp: Database.AccessTableInfo.NoneRole
        VB: Database.AccessTableInfo.NoneRole
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NoneRole
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 303
      example: []
      syntax:
        content:
          CSharp: public static string NoneRole { get; }
          VB: Public Shared ReadOnly Property NoneRole As String
        parameters: []
        return:
          type: System.String
          description: Name of the guest access role (role without access)
      overload: Database.AccessTableInfo.NoneRole*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Database.RecipeInfo
    commentId: T:Database.RecipeInfo
    language: CSharp
    name:
      CSharp: RecipeInfo
      VB: RecipeInfo
    nameWithType:
      CSharp: RecipeInfo
      VB: RecipeInfo
    qualifiedName:
      CSharp: Database.RecipeInfo
      VB: Database.RecipeInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: RecipeInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 317
    summary: "\nClass containing the infomration of the recipe database table. The table must contain at least the following colummns: \nid, \nfirstSeqType, \nfirstSeqId, \nrecipeName, \nversion, \nstatus\n<p>Creation revision: 001</p>\n"
    remarks: Recipes are sequences of rows of sequencetial tables based on ISeqTabInfo interface
    example: []
    syntax:
      content:
        CSharp: 'public class RecipeInfo : ISeqTabInfo, IComTabInfo, IBasTabInfo'
        VB: >-
          Public Class RecipeInfo

              Implements ISeqTabInfo, IComTabInfo, IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.ISeqTabInfo
    - Database.IComTabInfo
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.RecipeInfo.#ctor
      commentId: M:Database.RecipeInfo.#ctor
      language: CSharp
      name:
        CSharp: RecipeInfo()
        VB: RecipeInfo()
      nameWithType:
        CSharp: RecipeInfo.RecipeInfo()
        VB: RecipeInfo.RecipeInfo()
      qualifiedName:
        CSharp: Database.RecipeInfo.RecipeInfo()
        VB: Database.RecipeInfo.RecipeInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 322
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public RecipeInfo()
          VB: Public Sub New
      overload: Database.RecipeInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.RecipeInfo.TabName
      commentId: P:Database.RecipeInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: RecipeInfo.TabName
        VB: RecipeInfo.TabName
      qualifiedName:
        CSharp: Database.RecipeInfo.TabName
        VB: Database.RecipeInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 353
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.RecipeInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.Ids
      commentId: P:Database.RecipeInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: RecipeInfo.Ids
        VB: RecipeInfo.Ids
      qualifiedName:
        CSharp: Database.RecipeInfo.Ids
        VB: Database.RecipeInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 359
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; }
          VB: Public ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.RecipeInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.Descriptions
      commentId: P:Database.RecipeInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: RecipeInfo.Descriptions
        VB: RecipeInfo.Descriptions
      qualifiedName:
        CSharp: Database.RecipeInfo.Descriptions
        VB: Database.RecipeInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 361
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.RecipeInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.SeqType
      commentId: P:Database.RecipeInfo.SeqType
      language: CSharp
      name:
        CSharp: SeqType
        VB: SeqType
      nameWithType:
        CSharp: RecipeInfo.SeqType
        VB: RecipeInfo.SeqType
      qualifiedName:
        CSharp: Database.RecipeInfo.SeqType
        VB: Database.RecipeInfo.SeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 364
      example: []
      syntax:
        content:
          CSharp: public int SeqType { get; }
          VB: Public ReadOnly Property SeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Identification number of the current sequential table. From ISeqTabInfo interface
      overload: Database.RecipeInfo.SeqType*
      implements:
      - Database.ISeqTabInfo.SeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.Id
      commentId: P:Database.RecipeInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: RecipeInfo.Id
        VB: RecipeInfo.Id
      qualifiedName:
        CSharp: Database.RecipeInfo.Id
        VB: Database.RecipeInfo.Id
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Id
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 367
      example: []
      syntax:
        content:
          CSharp: public int Id { get; }
          VB: Public ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
      overload: Database.RecipeInfo.Id*
      implements:
      - Database.IComTabInfo.Id
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.NextSeqType
      commentId: P:Database.RecipeInfo.NextSeqType
      language: CSharp
      name:
        CSharp: NextSeqType
        VB: NextSeqType
      nameWithType:
        CSharp: RecipeInfo.NextSeqType
        VB: RecipeInfo.NextSeqType
      qualifiedName:
        CSharp: Database.RecipeInfo.NextSeqType
        VB: Database.RecipeInfo.NextSeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 370
      example: []
      syntax:
        content:
          CSharp: public int NextSeqType { get; }
          VB: Public ReadOnly Property NextSeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential type column. The type is a variable used to identify the next sequential table. From ISeqTabInfo interface
      overload: Database.RecipeInfo.NextSeqType*
      implements:
      - Database.ISeqTabInfo.NextSeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.NextSeqId
      commentId: P:Database.RecipeInfo.NextSeqId
      language: CSharp
      name:
        CSharp: NextSeqId
        VB: NextSeqId
      nameWithType:
        CSharp: RecipeInfo.NextSeqId
        VB: RecipeInfo.NextSeqId
      qualifiedName:
        CSharp: Database.RecipeInfo.NextSeqId
        VB: Database.RecipeInfo.NextSeqId
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqId
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 373
      example: []
      syntax:
        content:
          CSharp: public int NextSeqId { get; }
          VB: Public ReadOnly Property NextSeqId As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential id column. This column contains the id (see Id from IComTabInfo) of the row of the next sequential table. From ISeqTabInfo interface
      overload: Database.RecipeInfo.NextSeqId*
      implements:
      - Database.ISeqTabInfo.NextSeqId
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.Name
      commentId: P:Database.RecipeInfo.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: RecipeInfo.Name
        VB: RecipeInfo.Name
      qualifiedName:
        CSharp: Database.RecipeInfo.Name
        VB: Database.RecipeInfo.Name
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Name
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 376
      example: []
      syntax:
        content:
          CSharp: public int Name { get; }
          VB: Public ReadOnly Property Name As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column is the name of the recipe
      overload: Database.RecipeInfo.Name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.Version
      commentId: P:Database.RecipeInfo.Version
      language: CSharp
      name:
        CSharp: Version
        VB: Version
      nameWithType:
        CSharp: RecipeInfo.Version
        VB: RecipeInfo.Version
      qualifiedName:
        CSharp: Database.RecipeInfo.Version
        VB: Database.RecipeInfo.Version
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Version
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 379
      example: []
      syntax:
        content:
          CSharp: public int Version { get; }
          VB: Public ReadOnly Property Version As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the version column. This column is the version of the recipe
      overload: Database.RecipeInfo.Version*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.Status
      commentId: P:Database.RecipeInfo.Status
      language: CSharp
      name:
        CSharp: Status
        VB: Status
      nameWithType:
        CSharp: RecipeInfo.Status
        VB: RecipeInfo.Status
      qualifiedName:
        CSharp: Database.RecipeInfo.Status
        VB: Database.RecipeInfo.Status
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Status
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 382
      example: []
      syntax:
        content:
          CSharp: public int Status { get; }
          VB: Public ReadOnly Property Status As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the status column. This column is the status of the recipe (e.g. draft, production, obsolete)
      overload: Database.RecipeInfo.Status*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.FinaleWeightMin
      commentId: P:Database.RecipeInfo.FinaleWeightMin
      language: CSharp
      name:
        CSharp: FinaleWeightMin
        VB: FinaleWeightMin
      nameWithType:
        CSharp: RecipeInfo.FinaleWeightMin
        VB: RecipeInfo.FinaleWeightMin
      qualifiedName:
        CSharp: Database.RecipeInfo.FinaleWeightMin
        VB: Database.RecipeInfo.FinaleWeightMin
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: FinaleWeightMin
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 385
      example: []
      syntax:
        content:
          CSharp: public int FinaleWeightMin { get; }
          VB: Public ReadOnly Property FinaleWeightMin As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the final weight min column. This column contains the minimum acceptable final weight of the product
      overload: Database.RecipeInfo.FinaleWeightMin*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeInfo.FinaleWeightMax
      commentId: P:Database.RecipeInfo.FinaleWeightMax
      language: CSharp
      name:
        CSharp: FinaleWeightMax
        VB: FinaleWeightMax
      nameWithType:
        CSharp: RecipeInfo.FinaleWeightMax
        VB: RecipeInfo.FinaleWeightMax
      qualifiedName:
        CSharp: Database.RecipeInfo.FinaleWeightMax
        VB: Database.RecipeInfo.FinaleWeightMax
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: FinaleWeightMax
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 388
      example: []
      syntax:
        content:
          CSharp: public int FinaleWeightMax { get; }
          VB: Public ReadOnly Property FinaleWeightMax As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the final weight max column. This column contains the maximum acceptable final weight of the product
      overload: Database.RecipeInfo.FinaleWeightMax*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Database.RecipeWeightInfo
    commentId: T:Database.RecipeWeightInfo
    language: CSharp
    name:
      CSharp: RecipeWeightInfo
      VB: RecipeWeightInfo
    nameWithType:
      CSharp: RecipeWeightInfo
      VB: RecipeWeightInfo
    qualifiedName:
      CSharp: Database.RecipeWeightInfo
      VB: Database.RecipeWeightInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: RecipeWeightInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 407
    summary: "\nClass containing the infomration of the recipe weight database table. The table must contain at least the following colummns: \nid, \nnextSeqType, \nnextSeqId, \nseqName, \nisBarcodeUsed, \nbarcode, \nunit, \ndecimalNumber, \nsetpoint, \nmin, \nmax\n<p>Creation revision: 001</p>\n"
    remarks: This table contains the required information to perform cycle weight sequences
    example: []
    syntax:
      content:
        CSharp: 'public class RecipeWeightInfo : ISeqTabInfo, IComTabInfo, IBasTabInfo'
        VB: >-
          Public Class RecipeWeightInfo

              Implements ISeqTabInfo, IComTabInfo, IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.ISeqTabInfo
    - Database.IComTabInfo
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.RecipeWeightInfo.#ctor
      commentId: M:Database.RecipeWeightInfo.#ctor
      language: CSharp
      name:
        CSharp: RecipeWeightInfo()
        VB: RecipeWeightInfo()
      nameWithType:
        CSharp: RecipeWeightInfo.RecipeWeightInfo()
        VB: RecipeWeightInfo.RecipeWeightInfo()
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.RecipeWeightInfo()
        VB: Database.RecipeWeightInfo.RecipeWeightInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 412
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public RecipeWeightInfo()
          VB: Public Sub New
      overload: Database.RecipeWeightInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.RecipeWeightInfo.TabName
      commentId: P:Database.RecipeWeightInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: RecipeWeightInfo.TabName
        VB: RecipeWeightInfo.TabName
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.TabName
        VB: Database.RecipeWeightInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 445
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.RecipeWeightInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.Ids
      commentId: P:Database.RecipeWeightInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: RecipeWeightInfo.Ids
        VB: RecipeWeightInfo.Ids
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.Ids
        VB: Database.RecipeWeightInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 451
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; }
          VB: Public ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.RecipeWeightInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.Descriptions
      commentId: P:Database.RecipeWeightInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: RecipeWeightInfo.Descriptions
        VB: RecipeWeightInfo.Descriptions
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.Descriptions
        VB: Database.RecipeWeightInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 453
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.RecipeWeightInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.SeqType
      commentId: P:Database.RecipeWeightInfo.SeqType
      language: CSharp
      name:
        CSharp: SeqType
        VB: SeqType
      nameWithType:
        CSharp: RecipeWeightInfo.SeqType
        VB: RecipeWeightInfo.SeqType
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.SeqType
        VB: Database.RecipeWeightInfo.SeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 456
      example: []
      syntax:
        content:
          CSharp: public int SeqType { get; }
          VB: Public ReadOnly Property SeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Identification number of the current sequential table. From ISeqTabInfo interface
      overload: Database.RecipeWeightInfo.SeqType*
      implements:
      - Database.ISeqTabInfo.SeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.Id
      commentId: P:Database.RecipeWeightInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: RecipeWeightInfo.Id
        VB: RecipeWeightInfo.Id
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.Id
        VB: Database.RecipeWeightInfo.Id
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Id
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 459
      example: []
      syntax:
        content:
          CSharp: public int Id { get; }
          VB: Public ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
      overload: Database.RecipeWeightInfo.Id*
      implements:
      - Database.IComTabInfo.Id
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.NextSeqType
      commentId: P:Database.RecipeWeightInfo.NextSeqType
      language: CSharp
      name:
        CSharp: NextSeqType
        VB: NextSeqType
      nameWithType:
        CSharp: RecipeWeightInfo.NextSeqType
        VB: RecipeWeightInfo.NextSeqType
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.NextSeqType
        VB: Database.RecipeWeightInfo.NextSeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 461
      example: []
      syntax:
        content:
          CSharp: public int NextSeqType { get; }
          VB: Public ReadOnly Property NextSeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential type column. The type is a variable used to identify the next sequential table. From ISeqTabInfo interface
      overload: Database.RecipeWeightInfo.NextSeqType*
      implements:
      - Database.ISeqTabInfo.NextSeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.NextSeqId
      commentId: P:Database.RecipeWeightInfo.NextSeqId
      language: CSharp
      name:
        CSharp: NextSeqId
        VB: NextSeqId
      nameWithType:
        CSharp: RecipeWeightInfo.NextSeqId
        VB: RecipeWeightInfo.NextSeqId
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.NextSeqId
        VB: Database.RecipeWeightInfo.NextSeqId
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqId
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 464
      example: []
      syntax:
        content:
          CSharp: public int NextSeqId { get; }
          VB: Public ReadOnly Property NextSeqId As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential id column. This column contains the id (see Id from IComTabInfo) of the row of the next sequential table. From ISeqTabInfo interface
      overload: Database.RecipeWeightInfo.NextSeqId*
      implements:
      - Database.ISeqTabInfo.NextSeqId
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.Name
      commentId: P:Database.RecipeWeightInfo.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: RecipeWeightInfo.Name
        VB: RecipeWeightInfo.Name
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.Name
        VB: Database.RecipeWeightInfo.Name
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Name
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 467
      example: []
      syntax:
        content:
          CSharp: public int Name { get; }
          VB: Public ReadOnly Property Name As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column is the name of the product to be weighted
      overload: Database.RecipeWeightInfo.Name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.IsBarcodeUsed
      commentId: P:Database.RecipeWeightInfo.IsBarcodeUsed
      language: CSharp
      name:
        CSharp: IsBarcodeUsed
        VB: IsBarcodeUsed
      nameWithType:
        CSharp: RecipeWeightInfo.IsBarcodeUsed
        VB: RecipeWeightInfo.IsBarcodeUsed
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.IsBarcodeUsed
        VB: Database.RecipeWeightInfo.IsBarcodeUsed
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: IsBarcodeUsed
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 470
      example: []
      syntax:
        content:
          CSharp: public int IsBarcodeUsed { get; }
          VB: Public ReadOnly Property IsBarcodeUsed As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the is barcode column. This column informs if the barcode of the product needs to be controlled during the cycle sequence
      overload: Database.RecipeWeightInfo.IsBarcodeUsed*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.Barcode
      commentId: P:Database.RecipeWeightInfo.Barcode
      language: CSharp
      name:
        CSharp: Barcode
        VB: Barcode
      nameWithType:
        CSharp: RecipeWeightInfo.Barcode
        VB: RecipeWeightInfo.Barcode
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.Barcode
        VB: Database.RecipeWeightInfo.Barcode
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Barcode
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 473
      example: []
      syntax:
        content:
          CSharp: public int Barcode { get; }
          VB: Public ReadOnly Property Barcode As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the barcode column. This column contains the value of the barcode to be controlled
      overload: Database.RecipeWeightInfo.Barcode*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.Unit
      commentId: P:Database.RecipeWeightInfo.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: RecipeWeightInfo.Unit
        VB: RecipeWeightInfo.Unit
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.Unit
        VB: Database.RecipeWeightInfo.Unit
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Unit
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 476
      example: []
      syntax:
        content:
          CSharp: public int Unit { get; }
          VB: Public ReadOnly Property Unit As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the unit column. This column contains the unit of the setpoint, min and max
      overload: Database.RecipeWeightInfo.Unit*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.DecimalNumber
      commentId: P:Database.RecipeWeightInfo.DecimalNumber
      language: CSharp
      name:
        CSharp: DecimalNumber
        VB: DecimalNumber
      nameWithType:
        CSharp: RecipeWeightInfo.DecimalNumber
        VB: RecipeWeightInfo.DecimalNumber
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.DecimalNumber
        VB: Database.RecipeWeightInfo.DecimalNumber
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DecimalNumber
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 479
      example: []
      syntax:
        content:
          CSharp: public int DecimalNumber { get; }
          VB: Public ReadOnly Property DecimalNumber As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the decimal number column. This column contains the number of decimal places to be displays for the setpoint, min, max and value of the weight during the cycle sequence
      overload: Database.RecipeWeightInfo.DecimalNumber*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.Setpoint
      commentId: P:Database.RecipeWeightInfo.Setpoint
      language: CSharp
      name:
        CSharp: Setpoint
        VB: Setpoint
      nameWithType:
        CSharp: RecipeWeightInfo.Setpoint
        VB: RecipeWeightInfo.Setpoint
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.Setpoint
        VB: Database.RecipeWeightInfo.Setpoint
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Setpoint
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 482
      example: []
      syntax:
        content:
          CSharp: public int Setpoint { get; }
          VB: Public ReadOnly Property Setpoint As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the setpoings column. This column contains the target weight by unit of final product
      overload: Database.RecipeWeightInfo.Setpoint*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.Criteria
      commentId: P:Database.RecipeWeightInfo.Criteria
      language: CSharp
      name:
        CSharp: Criteria
        VB: Criteria
      nameWithType:
        CSharp: RecipeWeightInfo.Criteria
        VB: RecipeWeightInfo.Criteria
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.Criteria
        VB: Database.RecipeWeightInfo.Criteria
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Criteria
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 485
      example: []
      syntax:
        content:
          CSharp: public int Criteria { get; }
          VB: Public ReadOnly Property Criteria As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the min column. This column contains the minimum acceptable weight by unit of final product
      overload: Database.RecipeWeightInfo.Criteria*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeWeightInfo.IsSolvent
      commentId: P:Database.RecipeWeightInfo.IsSolvent
      language: CSharp
      name:
        CSharp: IsSolvent
        VB: IsSolvent
      nameWithType:
        CSharp: RecipeWeightInfo.IsSolvent
        VB: RecipeWeightInfo.IsSolvent
      qualifiedName:
        CSharp: Database.RecipeWeightInfo.IsSolvent
        VB: Database.RecipeWeightInfo.IsSolvent
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: IsSolvent
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 488
      example: []
      syntax:
        content:
          CSharp: public int IsSolvent { get; }
          VB: Public ReadOnly Property IsSolvent As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the is solvent column. This column if the product is a solvent (if it must be evaporated at the end of the cycle)
      overload: Database.RecipeWeightInfo.IsSolvent*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Database.RecipeSpeedMixerInfo
    commentId: T:Database.RecipeSpeedMixerInfo
    language: CSharp
    name:
      CSharp: RecipeSpeedMixerInfo
      VB: RecipeSpeedMixerInfo
    nameWithType:
      CSharp: RecipeSpeedMixerInfo
      VB: RecipeSpeedMixerInfo
    qualifiedName:
      CSharp: Database.RecipeSpeedMixerInfo
      VB: Database.RecipeSpeedMixerInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: RecipeSpeedMixerInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 542
    summary: "\nClass containing the infomration of the recipe speedmixer database table. The table must contain at least the following colummns: \nid, \nnextSeqType, \nnextSeqId, \nseqName, \nacceleration, \ndeceleration, \nvaccum_control, \nisVentgasAir, \nmonitorType, \npressureUnit, \nscurve, \ncoldtrap, \nspeed00, \ntime00, \npressure00, \nspeed01, \ntime01, \npressure01, \nspeed02, \ntime02, \npressure02, \nspeed03, \ntime03, \npressure03, \nspeed04, \ntime04, \npressure04, \nspeed05, \ntime05, \npressure05, \nspeed06, \ntime06, \npressure06, \nspeed07, \ntime07, \npressure07, \nspeed08, \ntime08, \npressure08, \nspeed09, \ntime09, \npressure09, \nspeedMin, \nspeedMax, \npressureMin, \npressureMax\n<p>Creation revision: 001</p>\n"
    remarks: This table contains the required information to perform cycle speedmixer sequences
    example: []
    syntax:
      content:
        CSharp: 'public class RecipeSpeedMixerInfo : ISeqTabInfo, IComTabInfo, IBasTabInfo'
        VB: >-
          Public Class RecipeSpeedMixerInfo

              Implements ISeqTabInfo, IComTabInfo, IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.ISeqTabInfo
    - Database.IComTabInfo
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.RecipeSpeedMixerInfo.#ctor
      commentId: M:Database.RecipeSpeedMixerInfo.#ctor
      language: CSharp
      name:
        CSharp: RecipeSpeedMixerInfo()
        VB: RecipeSpeedMixerInfo()
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.RecipeSpeedMixerInfo()
        VB: RecipeSpeedMixerInfo.RecipeSpeedMixerInfo()
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.RecipeSpeedMixerInfo()
        VB: Database.RecipeSpeedMixerInfo.RecipeSpeedMixerInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 547
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public RecipeSpeedMixerInfo()
          VB: Public Sub New
      overload: Database.RecipeSpeedMixerInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.RecipeSpeedMixerInfo.TabName
      commentId: P:Database.RecipeSpeedMixerInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.TabName
        VB: RecipeSpeedMixerInfo.TabName
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.TabName
        VB: Database.RecipeSpeedMixerInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 592
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.RecipeSpeedMixerInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.Ids
      commentId: P:Database.RecipeSpeedMixerInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.Ids
        VB: RecipeSpeedMixerInfo.Ids
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.Ids
        VB: Database.RecipeSpeedMixerInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 598
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; }
          VB: Public ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.RecipeSpeedMixerInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.Descriptions
      commentId: P:Database.RecipeSpeedMixerInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.Descriptions
        VB: RecipeSpeedMixerInfo.Descriptions
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.Descriptions
        VB: Database.RecipeSpeedMixerInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 600
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.RecipeSpeedMixerInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.SeqType
      commentId: P:Database.RecipeSpeedMixerInfo.SeqType
      language: CSharp
      name:
        CSharp: SeqType
        VB: SeqType
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.SeqType
        VB: RecipeSpeedMixerInfo.SeqType
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.SeqType
        VB: Database.RecipeSpeedMixerInfo.SeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 603
      example: []
      syntax:
        content:
          CSharp: public int SeqType { get; }
          VB: Public ReadOnly Property SeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Identification number of the current sequential table. From ISeqTabInfo interface
      overload: Database.RecipeSpeedMixerInfo.SeqType*
      implements:
      - Database.ISeqTabInfo.SeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.Id
      commentId: P:Database.RecipeSpeedMixerInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.Id
        VB: RecipeSpeedMixerInfo.Id
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.Id
        VB: Database.RecipeSpeedMixerInfo.Id
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Id
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 606
      example: []
      syntax:
        content:
          CSharp: public int Id { get; }
          VB: Public ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
      overload: Database.RecipeSpeedMixerInfo.Id*
      implements:
      - Database.IComTabInfo.Id
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.NextSeqType
      commentId: P:Database.RecipeSpeedMixerInfo.NextSeqType
      language: CSharp
      name:
        CSharp: NextSeqType
        VB: NextSeqType
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.NextSeqType
        VB: RecipeSpeedMixerInfo.NextSeqType
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.NextSeqType
        VB: Database.RecipeSpeedMixerInfo.NextSeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 608
      example: []
      syntax:
        content:
          CSharp: public int NextSeqType { get; }
          VB: Public ReadOnly Property NextSeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential type column. The type is a variable used to identify the next sequential table. From ISeqTabInfo interface
      overload: Database.RecipeSpeedMixerInfo.NextSeqType*
      implements:
      - Database.ISeqTabInfo.NextSeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.NextSeqId
      commentId: P:Database.RecipeSpeedMixerInfo.NextSeqId
      language: CSharp
      name:
        CSharp: NextSeqId
        VB: NextSeqId
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.NextSeqId
        VB: RecipeSpeedMixerInfo.NextSeqId
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.NextSeqId
        VB: Database.RecipeSpeedMixerInfo.NextSeqId
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqId
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 611
      example: []
      syntax:
        content:
          CSharp: public int NextSeqId { get; }
          VB: Public ReadOnly Property NextSeqId As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential id column. This column contains the id (see Id from IComTabInfo) of the row of the next sequential table. From ISeqTabInfo interface
      overload: Database.RecipeSpeedMixerInfo.NextSeqId*
      implements:
      - Database.ISeqTabInfo.NextSeqId
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.Acceleration
      commentId: P:Database.RecipeSpeedMixerInfo.Acceleration
      language: CSharp
      name:
        CSharp: Acceleration
        VB: Acceleration
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.Acceleration
        VB: RecipeSpeedMixerInfo.Acceleration
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.Acceleration
        VB: Database.RecipeSpeedMixerInfo.Acceleration
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Acceleration
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 614
      example: []
      syntax:
        content:
          CSharp: public int Acceleration { get; }
          VB: Public ReadOnly Property Acceleration As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.Acceleration*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.Deceleration
      commentId: P:Database.RecipeSpeedMixerInfo.Deceleration
      language: CSharp
      name:
        CSharp: Deceleration
        VB: Deceleration
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.Deceleration
        VB: RecipeSpeedMixerInfo.Deceleration
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.Deceleration
        VB: Database.RecipeSpeedMixerInfo.Deceleration
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Deceleration
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 617
      example: []
      syntax:
        content:
          CSharp: public int Deceleration { get; }
          VB: Public ReadOnly Property Deceleration As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.Deceleration*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.Vaccum_control
      commentId: P:Database.RecipeSpeedMixerInfo.Vaccum_control
      language: CSharp
      name:
        CSharp: Vaccum_control
        VB: Vaccum_control
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.Vaccum_control
        VB: RecipeSpeedMixerInfo.Vaccum_control
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.Vaccum_control
        VB: Database.RecipeSpeedMixerInfo.Vaccum_control
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Vaccum_control
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 620
      example: []
      syntax:
        content:
          CSharp: public int Vaccum_control { get; }
          VB: Public ReadOnly Property Vaccum_control As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.Vaccum_control*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.PressureUnit
      commentId: P:Database.RecipeSpeedMixerInfo.PressureUnit
      language: CSharp
      name:
        CSharp: PressureUnit
        VB: PressureUnit
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.PressureUnit
        VB: RecipeSpeedMixerInfo.PressureUnit
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.PressureUnit
        VB: Database.RecipeSpeedMixerInfo.PressureUnit
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PressureUnit
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 623
      example: []
      syntax:
        content:
          CSharp: public int PressureUnit { get; }
          VB: Public ReadOnly Property PressureUnit As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.PressureUnit*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.Coldtrap
      commentId: P:Database.RecipeSpeedMixerInfo.Coldtrap
      language: CSharp
      name:
        CSharp: Coldtrap
        VB: Coldtrap
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.Coldtrap
        VB: RecipeSpeedMixerInfo.Coldtrap
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.Coldtrap
        VB: Database.RecipeSpeedMixerInfo.Coldtrap
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Coldtrap
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 626
      example: []
      syntax:
        content:
          CSharp: public int Coldtrap { get; }
          VB: Public ReadOnly Property Coldtrap As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.Coldtrap*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.Speed00
      commentId: P:Database.RecipeSpeedMixerInfo.Speed00
      language: CSharp
      name:
        CSharp: Speed00
        VB: Speed00
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.Speed00
        VB: RecipeSpeedMixerInfo.Speed00
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.Speed00
        VB: Database.RecipeSpeedMixerInfo.Speed00
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Speed00
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 629
      example: []
      syntax:
        content:
          CSharp: public int Speed00 { get; }
          VB: Public ReadOnly Property Speed00 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.Speed00*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.Time00
      commentId: P:Database.RecipeSpeedMixerInfo.Time00
      language: CSharp
      name:
        CSharp: Time00
        VB: Time00
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.Time00
        VB: RecipeSpeedMixerInfo.Time00
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.Time00
        VB: Database.RecipeSpeedMixerInfo.Time00
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Time00
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 632
      example: []
      syntax:
        content:
          CSharp: public int Time00 { get; }
          VB: Public ReadOnly Property Time00 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.Time00*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.Pressure00
      commentId: P:Database.RecipeSpeedMixerInfo.Pressure00
      language: CSharp
      name:
        CSharp: Pressure00
        VB: Pressure00
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.Pressure00
        VB: RecipeSpeedMixerInfo.Pressure00
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.Pressure00
        VB: Database.RecipeSpeedMixerInfo.Pressure00
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Pressure00
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 635
      example: []
      syntax:
        content:
          CSharp: public int Pressure00 { get; }
          VB: Public ReadOnly Property Pressure00 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.Pressure00*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.SpeedMin
      commentId: P:Database.RecipeSpeedMixerInfo.SpeedMin
      language: CSharp
      name:
        CSharp: SpeedMin
        VB: SpeedMin
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.SpeedMin
        VB: RecipeSpeedMixerInfo.SpeedMin
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.SpeedMin
        VB: Database.RecipeSpeedMixerInfo.SpeedMin
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SpeedMin
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 638
      example: []
      syntax:
        content:
          CSharp: public int SpeedMin { get; }
          VB: Public ReadOnly Property SpeedMin As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.SpeedMin*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.SpeedMax
      commentId: P:Database.RecipeSpeedMixerInfo.SpeedMax
      language: CSharp
      name:
        CSharp: SpeedMax
        VB: SpeedMax
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.SpeedMax
        VB: RecipeSpeedMixerInfo.SpeedMax
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.SpeedMax
        VB: Database.RecipeSpeedMixerInfo.SpeedMax
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SpeedMax
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 641
      example: []
      syntax:
        content:
          CSharp: public int SpeedMax { get; }
          VB: Public ReadOnly Property SpeedMax As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.SpeedMax*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.PressureMin
      commentId: P:Database.RecipeSpeedMixerInfo.PressureMin
      language: CSharp
      name:
        CSharp: PressureMin
        VB: PressureMin
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.PressureMin
        VB: RecipeSpeedMixerInfo.PressureMin
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.PressureMin
        VB: Database.RecipeSpeedMixerInfo.PressureMin
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PressureMin
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 644
      example: []
      syntax:
        content:
          CSharp: public int PressureMin { get; }
          VB: Public ReadOnly Property PressureMin As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.PressureMin*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.PressureMax
      commentId: P:Database.RecipeSpeedMixerInfo.PressureMax
      language: CSharp
      name:
        CSharp: PressureMax
        VB: PressureMax
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.PressureMax
        VB: RecipeSpeedMixerInfo.PressureMax
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.PressureMax
        VB: Database.RecipeSpeedMixerInfo.PressureMax
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PressureMax
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 647
      example: []
      syntax:
        content:
          CSharp: public int PressureMax { get; }
          VB: Public ReadOnly Property PressureMax As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the name column. This column contains of the speedmixer sequence
      overload: Database.RecipeSpeedMixerInfo.PressureMax*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.PUnit_Torr
      commentId: P:Database.RecipeSpeedMixerInfo.PUnit_Torr
      language: CSharp
      name:
        CSharp: PUnit_Torr
        VB: PUnit_Torr
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.PUnit_Torr
        VB: RecipeSpeedMixerInfo.PUnit_Torr
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.PUnit_Torr
        VB: Database.RecipeSpeedMixerInfo.PUnit_Torr
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PUnit_Torr
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 650
      example: []
      syntax:
        content:
          CSharp: public string PUnit_Torr { get; }
          VB: Public ReadOnly Property PUnit_Torr As String
        parameters: []
        return:
          type: System.String
          description: The value of the pressure unit Torr to be put in the database table
      overload: Database.RecipeSpeedMixerInfo.PUnit_Torr*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.PUnit_mBar
      commentId: P:Database.RecipeSpeedMixerInfo.PUnit_mBar
      language: CSharp
      name:
        CSharp: PUnit_mBar
        VB: PUnit_mBar
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.PUnit_mBar
        VB: RecipeSpeedMixerInfo.PUnit_mBar
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.PUnit_mBar
        VB: Database.RecipeSpeedMixerInfo.PUnit_mBar
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PUnit_mBar
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 653
      example: []
      syntax:
        content:
          CSharp: public string PUnit_mBar { get; }
          VB: Public ReadOnly Property PUnit_mBar As String
        parameters: []
        return:
          type: System.String
          description: The value of the pressure unit mBar to be put in the database table
      overload: Database.RecipeSpeedMixerInfo.PUnit_mBar*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.PUnit_inHg
      commentId: P:Database.RecipeSpeedMixerInfo.PUnit_inHg
      language: CSharp
      name:
        CSharp: PUnit_inHg
        VB: PUnit_inHg
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.PUnit_inHg
        VB: RecipeSpeedMixerInfo.PUnit_inHg
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.PUnit_inHg
        VB: Database.RecipeSpeedMixerInfo.PUnit_inHg
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PUnit_inHg
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 656
      example: []
      syntax:
        content:
          CSharp: public string PUnit_inHg { get; }
          VB: Public ReadOnly Property PUnit_inHg As String
        parameters: []
        return:
          type: System.String
          description: The value of the pressure unit inHg to be put in the database table
      overload: Database.RecipeSpeedMixerInfo.PUnit_inHg*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.RecipeSpeedMixerInfo.PUnit_PSIA
      commentId: P:Database.RecipeSpeedMixerInfo.PUnit_PSIA
      language: CSharp
      name:
        CSharp: PUnit_PSIA
        VB: PUnit_PSIA
      nameWithType:
        CSharp: RecipeSpeedMixerInfo.PUnit_PSIA
        VB: RecipeSpeedMixerInfo.PUnit_PSIA
      qualifiedName:
        CSharp: Database.RecipeSpeedMixerInfo.PUnit_PSIA
        VB: Database.RecipeSpeedMixerInfo.PUnit_PSIA
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PUnit_PSIA
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 659
      example: []
      syntax:
        content:
          CSharp: public string PUnit_PSIA { get; }
          VB: Public ReadOnly Property PUnit_PSIA As String
        parameters: []
        return:
          type: System.String
          description: The value of the pressure unit PSIA to be put in the database table
      overload: Database.RecipeSpeedMixerInfo.PUnit_PSIA*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Database.CycleTableInfo
    commentId: T:Database.CycleTableInfo
    language: CSharp
    name:
      CSharp: CycleTableInfo
      VB: CycleTableInfo
    nameWithType:
      CSharp: CycleTableInfo
      VB: CycleTableInfo
    qualifiedName:
      CSharp: Database.CycleTableInfo
      VB: Database.CycleTableInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: CycleTableInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 685
    summary: "\nClass containing the information of the cycle database table. The table must contain at least the following colummns: \nid, \nnextSeqType, \nnextSeqId, \njobNumber, \nbatchNumber, \nquantityValue, \nquantityUnit, \nitemNumber, \nrecipeName, \nrecipeVersion, \nequipmentName, \ndateTimeStartCycle, \ndateTimeEndCycle, \nusername, \nfirstAlarmId, \nlastAlarmId, \ncomment, \nisItATest\n<p>Creation revision: 001</p>\n"
    remarks: The information related to a cycle is separated in different rows of sequencetial tables based on ISeqTabInfo interface. The database table related to this class is the first sequence of the cycle information
    example: []
    syntax:
      content:
        CSharp: 'public class CycleTableInfo : ISeqTabInfo, IComTabInfo, IDtTabInfo, IBasTabInfo'
        VB: >-
          Public Class CycleTableInfo

              Implements ISeqTabInfo, IComTabInfo, IDtTabInfo, IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.ISeqTabInfo
    - Database.IComTabInfo
    - Database.IDtTabInfo
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.CycleTableInfo.#ctor
      commentId: M:Database.CycleTableInfo.#ctor
      language: CSharp
      name:
        CSharp: CycleTableInfo()
        VB: CycleTableInfo()
      nameWithType:
        CSharp: CycleTableInfo.CycleTableInfo()
        VB: CycleTableInfo.CycleTableInfo()
      qualifiedName:
        CSharp: Database.CycleTableInfo.CycleTableInfo()
        VB: Database.CycleTableInfo.CycleTableInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 690
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public CycleTableInfo()
          VB: Public Sub New
      overload: Database.CycleTableInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.CycleTableInfo.TabName
      commentId: P:Database.CycleTableInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: CycleTableInfo.TabName
        VB: CycleTableInfo.TabName
      qualifiedName:
        CSharp: Database.CycleTableInfo.TabName
        VB: Database.CycleTableInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 732
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.CycleTableInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.Ids
      commentId: P:Database.CycleTableInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: CycleTableInfo.Ids
        VB: CycleTableInfo.Ids
      qualifiedName:
        CSharp: Database.CycleTableInfo.Ids
        VB: Database.CycleTableInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 738
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; }
          VB: Public ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.CycleTableInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.Descriptions
      commentId: P:Database.CycleTableInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: CycleTableInfo.Descriptions
        VB: CycleTableInfo.Descriptions
      qualifiedName:
        CSharp: Database.CycleTableInfo.Descriptions
        VB: Database.CycleTableInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 740
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.CycleTableInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.SeqType
      commentId: P:Database.CycleTableInfo.SeqType
      language: CSharp
      name:
        CSharp: SeqType
        VB: SeqType
      nameWithType:
        CSharp: CycleTableInfo.SeqType
        VB: CycleTableInfo.SeqType
      qualifiedName:
        CSharp: Database.CycleTableInfo.SeqType
        VB: Database.CycleTableInfo.SeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 743
      example: []
      syntax:
        content:
          CSharp: public int SeqType { get; }
          VB: Public ReadOnly Property SeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Identification number of the current sequential table. From ISeqTabInfo interface
      overload: Database.CycleTableInfo.SeqType*
      implements:
      - Database.ISeqTabInfo.SeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.Id
      commentId: P:Database.CycleTableInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: CycleTableInfo.Id
        VB: CycleTableInfo.Id
      qualifiedName:
        CSharp: Database.CycleTableInfo.Id
        VB: Database.CycleTableInfo.Id
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Id
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 746
      example: []
      syntax:
        content:
          CSharp: public int Id { get; }
          VB: Public ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
      overload: Database.CycleTableInfo.Id*
      implements:
      - Database.IComTabInfo.Id
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.NextSeqType
      commentId: P:Database.CycleTableInfo.NextSeqType
      language: CSharp
      name:
        CSharp: NextSeqType
        VB: NextSeqType
      nameWithType:
        CSharp: CycleTableInfo.NextSeqType
        VB: CycleTableInfo.NextSeqType
      qualifiedName:
        CSharp: Database.CycleTableInfo.NextSeqType
        VB: Database.CycleTableInfo.NextSeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 748
      example: []
      syntax:
        content:
          CSharp: public int NextSeqType { get; }
          VB: Public ReadOnly Property NextSeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential type column. The type is a variable used to identify the next sequential table. From ISeqTabInfo interface
      overload: Database.CycleTableInfo.NextSeqType*
      implements:
      - Database.ISeqTabInfo.NextSeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.NextSeqId
      commentId: P:Database.CycleTableInfo.NextSeqId
      language: CSharp
      name:
        CSharp: NextSeqId
        VB: NextSeqId
      nameWithType:
        CSharp: CycleTableInfo.NextSeqId
        VB: CycleTableInfo.NextSeqId
      qualifiedName:
        CSharp: Database.CycleTableInfo.NextSeqId
        VB: Database.CycleTableInfo.NextSeqId
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqId
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 751
      example: []
      syntax:
        content:
          CSharp: public int NextSeqId { get; }
          VB: Public ReadOnly Property NextSeqId As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential id column. This column contains the id (see Id from IComTabInfo) of the row of the next sequential table. From ISeqTabInfo interface
      overload: Database.CycleTableInfo.NextSeqId*
      implements:
      - Database.ISeqTabInfo.NextSeqId
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.JobNumber
      commentId: P:Database.CycleTableInfo.JobNumber
      language: CSharp
      name:
        CSharp: JobNumber
        VB: JobNumber
      nameWithType:
        CSharp: CycleTableInfo.JobNumber
        VB: CycleTableInfo.JobNumber
      qualifiedName:
        CSharp: Database.CycleTableInfo.JobNumber
        VB: Database.CycleTableInfo.JobNumber
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: JobNumber
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 754
      example: []
      syntax:
        content:
          CSharp: public int JobNumber { get; }
          VB: Public ReadOnly Property JobNumber As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the job number column. This column contains the job number of the cycle
      overload: Database.CycleTableInfo.JobNumber*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.BatchNumber
      commentId: P:Database.CycleTableInfo.BatchNumber
      language: CSharp
      name:
        CSharp: BatchNumber
        VB: BatchNumber
      nameWithType:
        CSharp: CycleTableInfo.BatchNumber
        VB: CycleTableInfo.BatchNumber
      qualifiedName:
        CSharp: Database.CycleTableInfo.BatchNumber
        VB: Database.CycleTableInfo.BatchNumber
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: BatchNumber
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 757
      example: []
      syntax:
        content:
          CSharp: public int BatchNumber { get; }
          VB: Public ReadOnly Property BatchNumber As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the batch number column. This column contains the batch number of the cycle
      overload: Database.CycleTableInfo.BatchNumber*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.FinalWeight
      commentId: P:Database.CycleTableInfo.FinalWeight
      language: CSharp
      name:
        CSharp: FinalWeight
        VB: FinalWeight
      nameWithType:
        CSharp: CycleTableInfo.FinalWeight
        VB: CycleTableInfo.FinalWeight
      qualifiedName:
        CSharp: Database.CycleTableInfo.FinalWeight
        VB: Database.CycleTableInfo.FinalWeight
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: FinalWeight
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 760
      example: []
      syntax:
        content:
          CSharp: public int FinalWeight { get; }
          VB: Public ReadOnly Property FinalWeight As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the final weight column. This column contains wight of the final product at the end of the cycle
      overload: Database.CycleTableInfo.FinalWeight*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.FinalWeightUnit
      commentId: P:Database.CycleTableInfo.FinalWeightUnit
      language: CSharp
      name:
        CSharp: FinalWeightUnit
        VB: FinalWeightUnit
      nameWithType:
        CSharp: CycleTableInfo.FinalWeightUnit
        VB: CycleTableInfo.FinalWeightUnit
      qualifiedName:
        CSharp: Database.CycleTableInfo.FinalWeightUnit
        VB: Database.CycleTableInfo.FinalWeightUnit
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: FinalWeightUnit
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 763
      example: []
      syntax:
        content:
          CSharp: public int FinalWeightUnit { get; }
          VB: Public ReadOnly Property FinalWeightUnit As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the final weight unit column. This column contains unit of the final weight
      overload: Database.CycleTableInfo.FinalWeightUnit*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.ItemNumber
      commentId: P:Database.CycleTableInfo.ItemNumber
      language: CSharp
      name:
        CSharp: ItemNumber
        VB: ItemNumber
      nameWithType:
        CSharp: CycleTableInfo.ItemNumber
        VB: CycleTableInfo.ItemNumber
      qualifiedName:
        CSharp: Database.CycleTableInfo.ItemNumber
        VB: Database.CycleTableInfo.ItemNumber
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: ItemNumber
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 766
      example: []
      syntax:
        content:
          CSharp: public int ItemNumber { get; }
          VB: Public ReadOnly Property ItemNumber As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the item number column. This column contains the item number of the cycle
      overload: Database.CycleTableInfo.ItemNumber*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.RecipeName
      commentId: P:Database.CycleTableInfo.RecipeName
      language: CSharp
      name:
        CSharp: RecipeName
        VB: RecipeName
      nameWithType:
        CSharp: CycleTableInfo.RecipeName
        VB: CycleTableInfo.RecipeName
      qualifiedName:
        CSharp: Database.CycleTableInfo.RecipeName
        VB: Database.CycleTableInfo.RecipeName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: RecipeName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 769
      example: []
      syntax:
        content:
          CSharp: public int RecipeName { get; }
          VB: Public ReadOnly Property RecipeName As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the recipe name column. This column contains the name of the recipe executed during the cycle
      overload: Database.CycleTableInfo.RecipeName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.RecipeVersion
      commentId: P:Database.CycleTableInfo.RecipeVersion
      language: CSharp
      name:
        CSharp: RecipeVersion
        VB: RecipeVersion
      nameWithType:
        CSharp: CycleTableInfo.RecipeVersion
        VB: CycleTableInfo.RecipeVersion
      qualifiedName:
        CSharp: Database.CycleTableInfo.RecipeVersion
        VB: Database.CycleTableInfo.RecipeVersion
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: RecipeVersion
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 772
      example: []
      syntax:
        content:
          CSharp: public int RecipeVersion { get; }
          VB: Public ReadOnly Property RecipeVersion As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the recipe version column. This column contains the version of the executed recipe
      overload: Database.CycleTableInfo.RecipeVersion*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.EquipmentName
      commentId: P:Database.CycleTableInfo.EquipmentName
      language: CSharp
      name:
        CSharp: EquipmentName
        VB: EquipmentName
      nameWithType:
        CSharp: CycleTableInfo.EquipmentName
        VB: CycleTableInfo.EquipmentName
      qualifiedName:
        CSharp: Database.CycleTableInfo.EquipmentName
        VB: Database.CycleTableInfo.EquipmentName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: EquipmentName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 775
      example: []
      syntax:
        content:
          CSharp: public int EquipmentName { get; }
          VB: Public ReadOnly Property EquipmentName As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the equipment name column. This column contains the name of the equipment which performed the cycle
      overload: Database.CycleTableInfo.EquipmentName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.DateTimeStartCycle
      commentId: P:Database.CycleTableInfo.DateTimeStartCycle
      language: CSharp
      name:
        CSharp: DateTimeStartCycle
        VB: DateTimeStartCycle
      nameWithType:
        CSharp: CycleTableInfo.DateTimeStartCycle
        VB: CycleTableInfo.DateTimeStartCycle
      qualifiedName:
        CSharp: Database.CycleTableInfo.DateTimeStartCycle
        VB: Database.CycleTableInfo.DateTimeStartCycle
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DateTimeStartCycle
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 778
      example: []
      syntax:
        content:
          CSharp: public int DateTimeStartCycle { get; }
          VB: Public ReadOnly Property DateTimeStartCycle As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the start date and time column. This column contains date and time of the start of the cycle
      overload: Database.CycleTableInfo.DateTimeStartCycle*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.DateTimeEndCycle
      commentId: P:Database.CycleTableInfo.DateTimeEndCycle
      language: CSharp
      name:
        CSharp: DateTimeEndCycle
        VB: DateTimeEndCycle
      nameWithType:
        CSharp: CycleTableInfo.DateTimeEndCycle
        VB: CycleTableInfo.DateTimeEndCycle
      qualifiedName:
        CSharp: Database.CycleTableInfo.DateTimeEndCycle
        VB: Database.CycleTableInfo.DateTimeEndCycle
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DateTimeEndCycle
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 781
      example: []
      syntax:
        content:
          CSharp: public int DateTimeEndCycle { get; }
          VB: Public ReadOnly Property DateTimeEndCycle As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the end date and time column. This column contains date and time of the end of the cycle
      overload: Database.CycleTableInfo.DateTimeEndCycle*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.Username
      commentId: P:Database.CycleTableInfo.Username
      language: CSharp
      name:
        CSharp: Username
        VB: Username
      nameWithType:
        CSharp: CycleTableInfo.Username
        VB: CycleTableInfo.Username
      qualifiedName:
        CSharp: Database.CycleTableInfo.Username
        VB: Database.CycleTableInfo.Username
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Username
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 784
      example: []
      syntax:
        content:
          CSharp: public int Username { get; }
          VB: Public ReadOnly Property Username As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the username column. This column contains name of the user who started the cycle
      overload: Database.CycleTableInfo.Username*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.FirstAlarmId
      commentId: P:Database.CycleTableInfo.FirstAlarmId
      language: CSharp
      name:
        CSharp: FirstAlarmId
        VB: FirstAlarmId
      nameWithType:
        CSharp: CycleTableInfo.FirstAlarmId
        VB: CycleTableInfo.FirstAlarmId
      qualifiedName:
        CSharp: Database.CycleTableInfo.FirstAlarmId
        VB: Database.CycleTableInfo.FirstAlarmId
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: FirstAlarmId
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 787
      example: []
      syntax:
        content:
          CSharp: public int FirstAlarmId { get; }
          VB: Public ReadOnly Property FirstAlarmId As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the first alarm id column. This column contains value of the id column of the audit trail for the fist active alarm or the last audit trail event
      overload: Database.CycleTableInfo.FirstAlarmId*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.LastAlarmId
      commentId: P:Database.CycleTableInfo.LastAlarmId
      language: CSharp
      name:
        CSharp: LastAlarmId
        VB: LastAlarmId
      nameWithType:
        CSharp: CycleTableInfo.LastAlarmId
        VB: CycleTableInfo.LastAlarmId
      qualifiedName:
        CSharp: Database.CycleTableInfo.LastAlarmId
        VB: Database.CycleTableInfo.LastAlarmId
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: LastAlarmId
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 790
      example: []
      syntax:
        content:
          CSharp: public int LastAlarmId { get; }
          VB: Public ReadOnly Property LastAlarmId As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the last alarm id column. This column contains value of the id column of the audit trail for the last audit trail event
      overload: Database.CycleTableInfo.LastAlarmId*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.Comment
      commentId: P:Database.CycleTableInfo.Comment
      language: CSharp
      name:
        CSharp: Comment
        VB: Comment
      nameWithType:
        CSharp: CycleTableInfo.Comment
        VB: CycleTableInfo.Comment
      qualifiedName:
        CSharp: Database.CycleTableInfo.Comment
        VB: Database.CycleTableInfo.Comment
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Comment
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 793
      example: []
      syntax:
        content:
          CSharp: public int Comment { get; }
          VB: Public ReadOnly Property Comment As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the comment column. This column contains the comment logged during the test
      overload: Database.CycleTableInfo.Comment*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.IsItATest
      commentId: P:Database.CycleTableInfo.IsItATest
      language: CSharp
      name:
        CSharp: IsItATest
        VB: IsItATest
      nameWithType:
        CSharp: CycleTableInfo.IsItATest
        VB: CycleTableInfo.IsItATest
      qualifiedName:
        CSharp: Database.CycleTableInfo.IsItATest
        VB: Database.CycleTableInfo.IsItATest
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: IsItATest
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 796
      example: []
      syntax:
        content:
          CSharp: public int IsItATest { get; }
          VB: Public ReadOnly Property IsItATest As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the is a test column. This column informs if the cycle was executed during production circumpstance or not
      overload: Database.CycleTableInfo.IsItATest*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.bowlWeight
      commentId: P:Database.CycleTableInfo.bowlWeight
      language: CSharp
      name:
        CSharp: bowlWeight
        VB: bowlWeight
      nameWithType:
        CSharp: CycleTableInfo.bowlWeight
        VB: CycleTableInfo.bowlWeight
      qualifiedName:
        CSharp: Database.CycleTableInfo.bowlWeight
        VB: Database.CycleTableInfo.bowlWeight
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: bowlWeight
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 799
      example: []
      syntax:
        content:
          CSharp: public int bowlWeight { get; }
          VB: Public ReadOnly Property bowlWeight As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the bowl weight column. This column contains the weight of the empty bowl
      overload: Database.CycleTableInfo.bowlWeight*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.lastWeightTh
      commentId: P:Database.CycleTableInfo.lastWeightTh
      language: CSharp
      name:
        CSharp: lastWeightTh
        VB: lastWeightTh
      nameWithType:
        CSharp: CycleTableInfo.lastWeightTh
        VB: CycleTableInfo.lastWeightTh
      qualifiedName:
        CSharp: Database.CycleTableInfo.lastWeightTh
        VB: Database.CycleTableInfo.lastWeightTh
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: lastWeightTh
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 802
      example: []
      syntax:
        content:
          CSharp: public int lastWeightTh { get; }
          VB: Public ReadOnly Property lastWeightTh As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the theoritical last weight column. This column contains the expected weight the empty bowl and product at the end of the mix
      overload: Database.CycleTableInfo.lastWeightTh*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.lastWeightEff
      commentId: P:Database.CycleTableInfo.lastWeightEff
      language: CSharp
      name:
        CSharp: lastWeightEff
        VB: lastWeightEff
      nameWithType:
        CSharp: CycleTableInfo.lastWeightEff
        VB: CycleTableInfo.lastWeightEff
      qualifiedName:
        CSharp: Database.CycleTableInfo.lastWeightEff
        VB: Database.CycleTableInfo.lastWeightEff
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: lastWeightEff
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 805
      example: []
      syntax:
        content:
          CSharp: public int lastWeightEff { get; }
          VB: Public ReadOnly Property lastWeightEff As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the actual last weighcolumn. This column contains the actual weight the empty bowl and product at the end of the mix
      overload: Database.CycleTableInfo.lastWeightEff*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleTableInfo.DateTime
      commentId: P:Database.CycleTableInfo.DateTime
      language: CSharp
      name:
        CSharp: DateTime
        VB: DateTime
      nameWithType:
        CSharp: CycleTableInfo.DateTime
        VB: CycleTableInfo.DateTime
      qualifiedName:
        CSharp: Database.CycleTableInfo.DateTime
        VB: Database.CycleTableInfo.DateTime
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DateTime
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 808
      example: []
      syntax:
        content:
          CSharp: public int DateTime { get; }
          VB: Public ReadOnly Property DateTime As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the date and time column. From IDtTabInfo
      overload: Database.CycleTableInfo.DateTime*
      implements:
      - Database.IDtTabInfo.DateTime
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Database.CycleWeightInfo
    commentId: T:Database.CycleWeightInfo
    language: CSharp
    name:
      CSharp: CycleWeightInfo
      VB: CycleWeightInfo
    nameWithType:
      CSharp: CycleWeightInfo
      VB: CycleWeightInfo
    qualifiedName:
      CSharp: Database.CycleWeightInfo
      VB: Database.CycleWeightInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: CycleWeightInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 828
    summary: "\nClass containing the infomration of the cycle weight sequence database table. The table must contain at least the following colummns: \nid, \nnextSeqType, \nnextSeqId, \nproduct, \nwasWeightManual, \ndateTime, \nactualValue, \nsetpoint, \nmin, \nmax, \nunit, \ndecimalNumber\n<p>Creation revision: 001</p>\n"
    remarks: This table contains the information of the cycle weight sequences
    example: []
    syntax:
      content:
        CSharp: 'public class CycleWeightInfo : ICycleSeqInfo, ISeqTabInfo, IComTabInfo, IDtTabInfo, IBasTabInfo'
        VB: >-
          Public Class CycleWeightInfo

              Implements ICycleSeqInfo, ISeqTabInfo, IComTabInfo, IDtTabInfo, IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.ICycleSeqInfo
    - Database.ISeqTabInfo
    - Database.IComTabInfo
    - Database.IDtTabInfo
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.CycleWeightInfo.#ctor
      commentId: M:Database.CycleWeightInfo.#ctor
      language: CSharp
      name:
        CSharp: CycleWeightInfo()
        VB: CycleWeightInfo()
      nameWithType:
        CSharp: CycleWeightInfo.CycleWeightInfo()
        VB: CycleWeightInfo.CycleWeightInfo()
      qualifiedName:
        CSharp: Database.CycleWeightInfo.CycleWeightInfo()
        VB: Database.CycleWeightInfo.CycleWeightInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 833
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public CycleWeightInfo()
          VB: Public Sub New
      overload: Database.CycleWeightInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.CycleWeightInfo.TabName
      commentId: P:Database.CycleWeightInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: CycleWeightInfo.TabName
        VB: CycleWeightInfo.TabName
      qualifiedName:
        CSharp: Database.CycleWeightInfo.TabName
        VB: Database.CycleWeightInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 875
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.CycleWeightInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.Ids
      commentId: P:Database.CycleWeightInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: CycleWeightInfo.Ids
        VB: CycleWeightInfo.Ids
      qualifiedName:
        CSharp: Database.CycleWeightInfo.Ids
        VB: Database.CycleWeightInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 881
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; }
          VB: Public ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.CycleWeightInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.Descriptions
      commentId: P:Database.CycleWeightInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: CycleWeightInfo.Descriptions
        VB: CycleWeightInfo.Descriptions
      qualifiedName:
        CSharp: Database.CycleWeightInfo.Descriptions
        VB: Database.CycleWeightInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 883
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.CycleWeightInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.SeqType
      commentId: P:Database.CycleWeightInfo.SeqType
      language: CSharp
      name:
        CSharp: SeqType
        VB: SeqType
      nameWithType:
        CSharp: CycleWeightInfo.SeqType
        VB: CycleWeightInfo.SeqType
      qualifiedName:
        CSharp: Database.CycleWeightInfo.SeqType
        VB: Database.CycleWeightInfo.SeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 886
      example: []
      syntax:
        content:
          CSharp: public int SeqType { get; }
          VB: Public ReadOnly Property SeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Identification number of the current sequential table. From ISeqTabInfo interface
      overload: Database.CycleWeightInfo.SeqType*
      implements:
      - Database.ISeqTabInfo.SeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.Id
      commentId: P:Database.CycleWeightInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: CycleWeightInfo.Id
        VB: CycleWeightInfo.Id
      qualifiedName:
        CSharp: Database.CycleWeightInfo.Id
        VB: Database.CycleWeightInfo.Id
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Id
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 889
      example: []
      syntax:
        content:
          CSharp: public int Id { get; }
          VB: Public ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
      overload: Database.CycleWeightInfo.Id*
      implements:
      - Database.IComTabInfo.Id
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.NextSeqType
      commentId: P:Database.CycleWeightInfo.NextSeqType
      language: CSharp
      name:
        CSharp: NextSeqType
        VB: NextSeqType
      nameWithType:
        CSharp: CycleWeightInfo.NextSeqType
        VB: CycleWeightInfo.NextSeqType
      qualifiedName:
        CSharp: Database.CycleWeightInfo.NextSeqType
        VB: Database.CycleWeightInfo.NextSeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 891
      example: []
      syntax:
        content:
          CSharp: public int NextSeqType { get; }
          VB: Public ReadOnly Property NextSeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential type column. The type is a variable used to identify the next sequential table. From ISeqTabInfo interface
      overload: Database.CycleWeightInfo.NextSeqType*
      implements:
      - Database.ISeqTabInfo.NextSeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.NextSeqId
      commentId: P:Database.CycleWeightInfo.NextSeqId
      language: CSharp
      name:
        CSharp: NextSeqId
        VB: NextSeqId
      nameWithType:
        CSharp: CycleWeightInfo.NextSeqId
        VB: CycleWeightInfo.NextSeqId
      qualifiedName:
        CSharp: Database.CycleWeightInfo.NextSeqId
        VB: Database.CycleWeightInfo.NextSeqId
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqId
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 894
      example: []
      syntax:
        content:
          CSharp: public int NextSeqId { get; }
          VB: Public ReadOnly Property NextSeqId As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential id column. This column contains the id (see Id from IComTabInfo) of the row of the next sequential table. From ISeqTabInfo interface
      overload: Database.CycleWeightInfo.NextSeqId*
      implements:
      - Database.ISeqTabInfo.NextSeqId
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.Product
      commentId: P:Database.CycleWeightInfo.Product
      language: CSharp
      name:
        CSharp: Product
        VB: Product
      nameWithType:
        CSharp: CycleWeightInfo.Product
        VB: CycleWeightInfo.Product
      qualifiedName:
        CSharp: Database.CycleWeightInfo.Product
        VB: Database.CycleWeightInfo.Product
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Product
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 897
      example: []
      syntax:
        content:
          CSharp: public int Product { get; }
          VB: Public ReadOnly Property Product As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the product column. This column contains the weighted product (from the name column of the weight recipe)
      overload: Database.CycleWeightInfo.Product*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.WasWeightManual
      commentId: P:Database.CycleWeightInfo.WasWeightManual
      language: CSharp
      name:
        CSharp: WasWeightManual
        VB: WasWeightManual
      nameWithType:
        CSharp: CycleWeightInfo.WasWeightManual
        VB: CycleWeightInfo.WasWeightManual
      qualifiedName:
        CSharp: Database.CycleWeightInfo.WasWeightManual
        VB: Database.CycleWeightInfo.WasWeightManual
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: WasWeightManual
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 900
      example: []
      syntax:
        content:
          CSharp: public int WasWeightManual { get; }
          VB: Public ReadOnly Property WasWeightManual As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the was weight manual column. This column informs if the user entered the weighedt value manually or not
      overload: Database.CycleWeightInfo.WasWeightManual*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.DateTime
      commentId: P:Database.CycleWeightInfo.DateTime
      language: CSharp
      name:
        CSharp: DateTime
        VB: DateTime
      nameWithType:
        CSharp: CycleWeightInfo.DateTime
        VB: CycleWeightInfo.DateTime
      qualifiedName:
        CSharp: Database.CycleWeightInfo.DateTime
        VB: Database.CycleWeightInfo.DateTime
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DateTime
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 903
      example: []
      syntax:
        content:
          CSharp: public int DateTime { get; }
          VB: Public ReadOnly Property DateTime As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the date and time column. This column contains the date and time of the weighting. From IDtTabInfo
      overload: Database.CycleWeightInfo.DateTime*
      implements:
      - Database.IDtTabInfo.DateTime
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.ActualValue
      commentId: P:Database.CycleWeightInfo.ActualValue
      language: CSharp
      name:
        CSharp: ActualValue
        VB: ActualValue
      nameWithType:
        CSharp: CycleWeightInfo.ActualValue
        VB: CycleWeightInfo.ActualValue
      qualifiedName:
        CSharp: Database.CycleWeightInfo.ActualValue
        VB: Database.CycleWeightInfo.ActualValue
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: ActualValue
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 906
      example: []
      syntax:
        content:
          CSharp: public int ActualValue { get; }
          VB: Public ReadOnly Property ActualValue As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the weighted value column. This column contains weighted value of the product
      overload: Database.CycleWeightInfo.ActualValue*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.Setpoint
      commentId: P:Database.CycleWeightInfo.Setpoint
      language: CSharp
      name:
        CSharp: Setpoint
        VB: Setpoint
      nameWithType:
        CSharp: CycleWeightInfo.Setpoint
        VB: CycleWeightInfo.Setpoint
      qualifiedName:
        CSharp: Database.CycleWeightInfo.Setpoint
        VB: Database.CycleWeightInfo.Setpoint
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Setpoint
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 909
      example: []
      syntax:
        content:
          CSharp: public int Setpoint { get; }
          VB: Public ReadOnly Property Setpoint As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the setpoint column. This column contains the target weight (equals basically the setpoint from the weight recipe multiplied by the final weight)
      overload: Database.CycleWeightInfo.Setpoint*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.Min
      commentId: P:Database.CycleWeightInfo.Min
      language: CSharp
      name:
        CSharp: Min
        VB: Min
      nameWithType:
        CSharp: CycleWeightInfo.Min
        VB: CycleWeightInfo.Min
      qualifiedName:
        CSharp: Database.CycleWeightInfo.Min
        VB: Database.CycleWeightInfo.Min
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Min
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 912
      example: []
      syntax:
        content:
          CSharp: public int Min { get; }
          VB: Public ReadOnly Property Min As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the min column. This column contains the minimum weight (equals basically the minimum from the weight recipe multiplied by the final weight)
      overload: Database.CycleWeightInfo.Min*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.Max
      commentId: P:Database.CycleWeightInfo.Max
      language: CSharp
      name:
        CSharp: Max
        VB: Max
      nameWithType:
        CSharp: CycleWeightInfo.Max
        VB: CycleWeightInfo.Max
      qualifiedName:
        CSharp: Database.CycleWeightInfo.Max
        VB: Database.CycleWeightInfo.Max
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Max
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 915
      example: []
      syntax:
        content:
          CSharp: public int Max { get; }
          VB: Public ReadOnly Property Max As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the max column. This column contains the maximum weight (equals basically the maximum from the weight recipe multiplied by the final weight)
      overload: Database.CycleWeightInfo.Max*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.Unit
      commentId: P:Database.CycleWeightInfo.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: CycleWeightInfo.Unit
        VB: CycleWeightInfo.Unit
      qualifiedName:
        CSharp: Database.CycleWeightInfo.Unit
        VB: Database.CycleWeightInfo.Unit
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Unit
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 918
      example: []
      syntax:
        content:
          CSharp: public int Unit { get; }
          VB: Public ReadOnly Property Unit As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the unit column. This column contains the unit of the weight
      overload: Database.CycleWeightInfo.Unit*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.DecimalNumber
      commentId: P:Database.CycleWeightInfo.DecimalNumber
      language: CSharp
      name:
        CSharp: DecimalNumber
        VB: DecimalNumber
      nameWithType:
        CSharp: CycleWeightInfo.DecimalNumber
        VB: CycleWeightInfo.DecimalNumber
      qualifiedName:
        CSharp: Database.CycleWeightInfo.DecimalNumber
        VB: Database.CycleWeightInfo.DecimalNumber
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DecimalNumber
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 921
      example: []
      syntax:
        content:
          CSharp: public int DecimalNumber { get; }
          VB: Public ReadOnly Property DecimalNumber As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the decimal number column. This column contains number of decimal places to be displayed (from the weight recipe)
      overload: Database.CycleWeightInfo.DecimalNumber*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.IsSolvent
      commentId: P:Database.CycleWeightInfo.IsSolvent
      language: CSharp
      name:
        CSharp: IsSolvent
        VB: IsSolvent
      nameWithType:
        CSharp: CycleWeightInfo.IsSolvent
        VB: CycleWeightInfo.IsSolvent
      qualifiedName:
        CSharp: Database.CycleWeightInfo.IsSolvent
        VB: Database.CycleWeightInfo.IsSolvent
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: IsSolvent
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 924
      example: []
      syntax:
        content:
          CSharp: public int IsSolvent { get; }
          VB: Public ReadOnly Property IsSolvent As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the is solvent column. This column informs if the product is a solvent (from the weight recipe)
      overload: Database.CycleWeightInfo.IsSolvent*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleWeightInfo.GetRecipeParameters(System.Object[],System.Int32)
      commentId: M:Database.CycleWeightInfo.GetRecipeParameters(System.Object[],System.Int32)
      language: CSharp
      name:
        CSharp: GetRecipeParameters(Object[], Int32)
        VB: GetRecipeParameters(Object(), Int32)
      nameWithType:
        CSharp: CycleWeightInfo.GetRecipeParameters(Object[], Int32)
        VB: CycleWeightInfo.GetRecipeParameters(Object(), Int32)
      qualifiedName:
        CSharp: Database.CycleWeightInfo.GetRecipeParameters(System.Object[], System.Int32)
        VB: Database.CycleWeightInfo.GetRecipeParameters(System.Object(), System.Int32)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetRecipeParameters
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 931
      summary: "\nMethod which returns the recipe information related to the applicable recipe table \n"
      example: []
      syntax:
        content:
          CSharp: public object[] GetRecipeParameters(object[] recipe, int idCycle)
          VB: Public Function GetRecipeParameters(recipe As Object(), idCycle As Integer) As Object()
        parameters:
        - id: recipe
          type: System.Object[]
          description: Variable containing the recipe information
        - id: idCycle
          type: System.Int32
          description: The value of the id column (see Id from IComTabInfo) of the row of the first cycle sequential table
        return:
          type: System.Object[]
      overload: Database.CycleWeightInfo.GetRecipeParameters*
      implements:
      - Database.ICycleSeqInfo.GetRecipeParameters(System.Object[],System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.CycleWeightInfo.GetMin(System.Object[],System.Decimal)
      commentId: M:Database.CycleWeightInfo.GetMin(System.Object[],System.Decimal)
      language: CSharp
      name:
        CSharp: GetMin(Object[], Decimal)
        VB: GetMin(Object(), Decimal)
      nameWithType:
        CSharp: CycleWeightInfo.GetMin(Object[], Decimal)
        VB: CycleWeightInfo.GetMin(Object(), Decimal)
      qualifiedName:
        CSharp: Database.CycleWeightInfo.GetMin(System.Object[], System.Decimal)
        VB: Database.CycleWeightInfo.GetMin(System.Object(), System.Decimal)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetMin
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 998
      syntax:
        content:
          CSharp: public decimal GetMin(object[] recipe, decimal finalWeight)
          VB: Public Function GetMin(recipe As Object(), finalWeight As Decimal) As Decimal
        parameters:
        - id: recipe
          type: System.Object[]
        - id: finalWeight
          type: System.Decimal
        return:
          type: System.Decimal
      overload: Database.CycleWeightInfo.GetMin*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.CycleWeightInfo.GetMax(System.Object[],System.Decimal)
      commentId: M:Database.CycleWeightInfo.GetMax(System.Object[],System.Decimal)
      language: CSharp
      name:
        CSharp: GetMax(Object[], Decimal)
        VB: GetMax(Object(), Decimal)
      nameWithType:
        CSharp: CycleWeightInfo.GetMax(Object[], Decimal)
        VB: CycleWeightInfo.GetMax(Object(), Decimal)
      qualifiedName:
        CSharp: Database.CycleWeightInfo.GetMax(System.Object[], System.Decimal)
        VB: Database.CycleWeightInfo.GetMax(System.Object(), System.Decimal)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetMax
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1019
      syntax:
        content:
          CSharp: public decimal GetMax(object[] recipe, decimal finalWeight)
          VB: Public Function GetMax(recipe As Object(), finalWeight As Decimal) As Decimal
        parameters:
        - id: recipe
          type: System.Object[]
        - id: finalWeight
          type: System.Decimal
        return:
          type: System.Decimal
      overload: Database.CycleWeightInfo.GetMax*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Database.CycleSpeedMixerInfo
    commentId: T:Database.CycleSpeedMixerInfo
    language: CSharp
    name:
      CSharp: CycleSpeedMixerInfo
      VB: CycleSpeedMixerInfo
    nameWithType:
      CSharp: CycleSpeedMixerInfo
      VB: CycleSpeedMixerInfo
    qualifiedName:
      CSharp: Database.CycleSpeedMixerInfo
      VB: Database.CycleSpeedMixerInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: CycleSpeedMixerInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 1061
    summary: "\nClass containing the infomration of the cycle speedmixer sequence database table. The table must contain at least the following colummns: \nid, \nnextSeqType, \nnextSeqId, \ndateTimeStart, \ndateTimeEnd, \ntimeMixTh, \ntimeMixEff, \npressureUnit, \nspeedMin, \nspeedMax, \npressureMin, \npressureMax, \nspeedMean, \npressureMean, \nspeedStd, \npressureStd\n<p>Creation revision: 001</p>\n"
    remarks: This table contains the information of the cycle speedmixer sequences
    example: []
    syntax:
      content:
        CSharp: 'public class CycleSpeedMixerInfo : ICycleSeqInfo, ISeqTabInfo, IComTabInfo, IDtTabInfo, IBasTabInfo'
        VB: >-
          Public Class CycleSpeedMixerInfo

              Implements ICycleSeqInfo, ISeqTabInfo, IComTabInfo, IDtTabInfo, IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.ICycleSeqInfo
    - Database.ISeqTabInfo
    - Database.IComTabInfo
    - Database.IDtTabInfo
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.CycleSpeedMixerInfo.#ctor
      commentId: M:Database.CycleSpeedMixerInfo.#ctor
      language: CSharp
      name:
        CSharp: CycleSpeedMixerInfo()
        VB: CycleSpeedMixerInfo()
      nameWithType:
        CSharp: CycleSpeedMixerInfo.CycleSpeedMixerInfo()
        VB: CycleSpeedMixerInfo.CycleSpeedMixerInfo()
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.CycleSpeedMixerInfo()
        VB: Database.CycleSpeedMixerInfo.CycleSpeedMixerInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1066
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public CycleSpeedMixerInfo()
          VB: Public Sub New
      overload: Database.CycleSpeedMixerInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.CycleSpeedMixerInfo.TabName
      commentId: P:Database.CycleSpeedMixerInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: CycleSpeedMixerInfo.TabName
        VB: CycleSpeedMixerInfo.TabName
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.TabName
        VB: Database.CycleSpeedMixerInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1111
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.CycleSpeedMixerInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.Ids
      commentId: P:Database.CycleSpeedMixerInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: CycleSpeedMixerInfo.Ids
        VB: CycleSpeedMixerInfo.Ids
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.Ids
        VB: Database.CycleSpeedMixerInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1117
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; }
          VB: Public ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.CycleSpeedMixerInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.Descriptions
      commentId: P:Database.CycleSpeedMixerInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: CycleSpeedMixerInfo.Descriptions
        VB: CycleSpeedMixerInfo.Descriptions
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.Descriptions
        VB: Database.CycleSpeedMixerInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1120
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.CycleSpeedMixerInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.SeqType
      commentId: P:Database.CycleSpeedMixerInfo.SeqType
      language: CSharp
      name:
        CSharp: SeqType
        VB: SeqType
      nameWithType:
        CSharp: CycleSpeedMixerInfo.SeqType
        VB: CycleSpeedMixerInfo.SeqType
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.SeqType
        VB: Database.CycleSpeedMixerInfo.SeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1123
      example: []
      syntax:
        content:
          CSharp: public int SeqType { get; }
          VB: Public ReadOnly Property SeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Identification number of the current sequential table. From ISeqTabInfo interface
      overload: Database.CycleSpeedMixerInfo.SeqType*
      implements:
      - Database.ISeqTabInfo.SeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.Id
      commentId: P:Database.CycleSpeedMixerInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: CycleSpeedMixerInfo.Id
        VB: CycleSpeedMixerInfo.Id
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.Id
        VB: Database.CycleSpeedMixerInfo.Id
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Id
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1126
      example: []
      syntax:
        content:
          CSharp: public int Id { get; }
          VB: Public ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
      overload: Database.CycleSpeedMixerInfo.Id*
      implements:
      - Database.IComTabInfo.Id
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.NextSeqType
      commentId: P:Database.CycleSpeedMixerInfo.NextSeqType
      language: CSharp
      name:
        CSharp: NextSeqType
        VB: NextSeqType
      nameWithType:
        CSharp: CycleSpeedMixerInfo.NextSeqType
        VB: CycleSpeedMixerInfo.NextSeqType
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.NextSeqType
        VB: Database.CycleSpeedMixerInfo.NextSeqType
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqType
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1128
      example: []
      syntax:
        content:
          CSharp: public int NextSeqType { get; }
          VB: Public ReadOnly Property NextSeqType As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential type column. The type is a variable used to identify the next sequential table. From ISeqTabInfo interface
      overload: Database.CycleSpeedMixerInfo.NextSeqType*
      implements:
      - Database.ISeqTabInfo.NextSeqType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.NextSeqId
      commentId: P:Database.CycleSpeedMixerInfo.NextSeqId
      language: CSharp
      name:
        CSharp: NextSeqId
        VB: NextSeqId
      nameWithType:
        CSharp: CycleSpeedMixerInfo.NextSeqId
        VB: CycleSpeedMixerInfo.NextSeqId
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.NextSeqId
        VB: Database.CycleSpeedMixerInfo.NextSeqId
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: NextSeqId
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1131
      example: []
      syntax:
        content:
          CSharp: public int NextSeqId { get; }
          VB: Public ReadOnly Property NextSeqId As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the next sequential id column. This column contains the id (see Id from IComTabInfo) of the row of the next sequential table. From ISeqTabInfo interface
      overload: Database.CycleSpeedMixerInfo.NextSeqId*
      implements:
      - Database.ISeqTabInfo.NextSeqId
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.DateTimeStart
      commentId: P:Database.CycleSpeedMixerInfo.DateTimeStart
      language: CSharp
      name:
        CSharp: DateTimeStart
        VB: DateTimeStart
      nameWithType:
        CSharp: CycleSpeedMixerInfo.DateTimeStart
        VB: CycleSpeedMixerInfo.DateTimeStart
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.DateTimeStart
        VB: Database.CycleSpeedMixerInfo.DateTimeStart
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DateTimeStart
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1134
      example: []
      syntax:
        content:
          CSharp: public int DateTimeStart { get; }
          VB: Public ReadOnly Property DateTimeStart As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the start date and time column. This column contains the date and time of the start of the sequence
      overload: Database.CycleSpeedMixerInfo.DateTimeStart*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.DateTimeEnd
      commentId: P:Database.CycleSpeedMixerInfo.DateTimeEnd
      language: CSharp
      name:
        CSharp: DateTimeEnd
        VB: DateTimeEnd
      nameWithType:
        CSharp: CycleSpeedMixerInfo.DateTimeEnd
        VB: CycleSpeedMixerInfo.DateTimeEnd
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.DateTimeEnd
        VB: Database.CycleSpeedMixerInfo.DateTimeEnd
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DateTimeEnd
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1137
      example: []
      syntax:
        content:
          CSharp: public int DateTimeEnd { get; }
          VB: Public ReadOnly Property DateTimeEnd As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the end date and time column. This column contains the date and time of the end of the sequence
      overload: Database.CycleSpeedMixerInfo.DateTimeEnd*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.TimeSeqTh
      commentId: P:Database.CycleSpeedMixerInfo.TimeSeqTh
      language: CSharp
      name:
        CSharp: TimeSeqTh
        VB: TimeSeqTh
      nameWithType:
        CSharp: CycleSpeedMixerInfo.TimeSeqTh
        VB: CycleSpeedMixerInfo.TimeSeqTh
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.TimeSeqTh
        VB: Database.CycleSpeedMixerInfo.TimeSeqTh
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TimeSeqTh
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1140
      example: []
      syntax:
        content:
          CSharp: public int TimeSeqTh { get; }
          VB: Public ReadOnly Property TimeSeqTh As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the theoritical time of the sequence column. This column contains theoritical time of the sequence (from the recipe)
      overload: Database.CycleSpeedMixerInfo.TimeSeqTh*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.TimeSeqEff
      commentId: P:Database.CycleSpeedMixerInfo.TimeSeqEff
      language: CSharp
      name:
        CSharp: TimeSeqEff
        VB: TimeSeqEff
      nameWithType:
        CSharp: CycleSpeedMixerInfo.TimeSeqEff
        VB: CycleSpeedMixerInfo.TimeSeqEff
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.TimeSeqEff
        VB: Database.CycleSpeedMixerInfo.TimeSeqEff
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TimeSeqEff
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1143
      example: []
      syntax:
        content:
          CSharp: public int TimeSeqEff { get; }
          VB: Public ReadOnly Property TimeSeqEff As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the actual time of the sequence column. This column contains actual time of the sequence
      overload: Database.CycleSpeedMixerInfo.TimeSeqEff*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.PressureUnit
      commentId: P:Database.CycleSpeedMixerInfo.PressureUnit
      language: CSharp
      name:
        CSharp: PressureUnit
        VB: PressureUnit
      nameWithType:
        CSharp: CycleSpeedMixerInfo.PressureUnit
        VB: CycleSpeedMixerInfo.PressureUnit
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.PressureUnit
        VB: Database.CycleSpeedMixerInfo.PressureUnit
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PressureUnit
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1146
      example: []
      syntax:
        content:
          CSharp: public int PressureUnit { get; }
          VB: Public ReadOnly Property PressureUnit As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the pressure unit column. This column contains unit of the pressure from the recipe
      overload: Database.CycleSpeedMixerInfo.PressureUnit*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.SpeedMin
      commentId: P:Database.CycleSpeedMixerInfo.SpeedMin
      language: CSharp
      name:
        CSharp: SpeedMin
        VB: SpeedMin
      nameWithType:
        CSharp: CycleSpeedMixerInfo.SpeedMin
        VB: CycleSpeedMixerInfo.SpeedMin
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.SpeedMin
        VB: Database.CycleSpeedMixerInfo.SpeedMin
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SpeedMin
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1149
      example: []
      syntax:
        content:
          CSharp: public int SpeedMin { get; }
          VB: Public ReadOnly Property SpeedMin As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the min speed column. This column contains the minimum allowed average speed from the recipe
      overload: Database.CycleSpeedMixerInfo.SpeedMin*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.SpeedMax
      commentId: P:Database.CycleSpeedMixerInfo.SpeedMax
      language: CSharp
      name:
        CSharp: SpeedMax
        VB: SpeedMax
      nameWithType:
        CSharp: CycleSpeedMixerInfo.SpeedMax
        VB: CycleSpeedMixerInfo.SpeedMax
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.SpeedMax
        VB: Database.CycleSpeedMixerInfo.SpeedMax
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SpeedMax
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1152
      example: []
      syntax:
        content:
          CSharp: public int SpeedMax { get; }
          VB: Public ReadOnly Property SpeedMax As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the max speed column. This column contains the maximum allowed average speed from the recipe
      overload: Database.CycleSpeedMixerInfo.SpeedMax*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.PressureMin
      commentId: P:Database.CycleSpeedMixerInfo.PressureMin
      language: CSharp
      name:
        CSharp: PressureMin
        VB: PressureMin
      nameWithType:
        CSharp: CycleSpeedMixerInfo.PressureMin
        VB: CycleSpeedMixerInfo.PressureMin
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.PressureMin
        VB: Database.CycleSpeedMixerInfo.PressureMin
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PressureMin
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1155
      example: []
      syntax:
        content:
          CSharp: public int PressureMin { get; }
          VB: Public ReadOnly Property PressureMin As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the min pressure column. This column contains the minimum allowed average pressure from the recipe
      overload: Database.CycleSpeedMixerInfo.PressureMin*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.PressureMax
      commentId: P:Database.CycleSpeedMixerInfo.PressureMax
      language: CSharp
      name:
        CSharp: PressureMax
        VB: PressureMax
      nameWithType:
        CSharp: CycleSpeedMixerInfo.PressureMax
        VB: CycleSpeedMixerInfo.PressureMax
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.PressureMax
        VB: Database.CycleSpeedMixerInfo.PressureMax
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PressureMax
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1158
      example: []
      syntax:
        content:
          CSharp: public int PressureMax { get; }
          VB: Public ReadOnly Property PressureMax As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the max pressure column. This column contains the maximum allowed average pressure from the recipe
      overload: Database.CycleSpeedMixerInfo.PressureMax*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.SpeedAvg
      commentId: P:Database.CycleSpeedMixerInfo.SpeedAvg
      language: CSharp
      name:
        CSharp: SpeedAvg
        VB: SpeedAvg
      nameWithType:
        CSharp: CycleSpeedMixerInfo.SpeedAvg
        VB: CycleSpeedMixerInfo.SpeedAvg
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.SpeedAvg
        VB: Database.CycleSpeedMixerInfo.SpeedAvg
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SpeedAvg
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1161
      example: []
      syntax:
        content:
          CSharp: public int SpeedAvg { get; }
          VB: Public ReadOnly Property SpeedAvg As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the average speed column. This column contains average of the speed during the sequence
      overload: Database.CycleSpeedMixerInfo.SpeedAvg*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.PressureAvg
      commentId: P:Database.CycleSpeedMixerInfo.PressureAvg
      language: CSharp
      name:
        CSharp: PressureAvg
        VB: PressureAvg
      nameWithType:
        CSharp: CycleSpeedMixerInfo.PressureAvg
        VB: CycleSpeedMixerInfo.PressureAvg
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.PressureAvg
        VB: Database.CycleSpeedMixerInfo.PressureAvg
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PressureAvg
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1164
      example: []
      syntax:
        content:
          CSharp: public int PressureAvg { get; }
          VB: Public ReadOnly Property PressureAvg As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the average pressure column. This column contains average of the pressure during the sequence
      overload: Database.CycleSpeedMixerInfo.PressureAvg*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.SpeedStd
      commentId: P:Database.CycleSpeedMixerInfo.SpeedStd
      language: CSharp
      name:
        CSharp: SpeedStd
        VB: SpeedStd
      nameWithType:
        CSharp: CycleSpeedMixerInfo.SpeedStd
        VB: CycleSpeedMixerInfo.SpeedStd
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.SpeedStd
        VB: Database.CycleSpeedMixerInfo.SpeedStd
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SpeedStd
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1167
      example: []
      syntax:
        content:
          CSharp: public int SpeedStd { get; }
          VB: Public ReadOnly Property SpeedStd As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the standard deviation speed column. This column contains standard deviation of the speed during the sequence
      overload: Database.CycleSpeedMixerInfo.SpeedStd*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.PressureStd
      commentId: P:Database.CycleSpeedMixerInfo.PressureStd
      language: CSharp
      name:
        CSharp: PressureStd
        VB: PressureStd
      nameWithType:
        CSharp: CycleSpeedMixerInfo.PressureStd
        VB: CycleSpeedMixerInfo.PressureStd
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.PressureStd
        VB: Database.CycleSpeedMixerInfo.PressureStd
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PressureStd
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1170
      example: []
      syntax:
        content:
          CSharp: public int PressureStd { get; }
          VB: Public ReadOnly Property PressureStd As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the standard deviation pressure column. This column contains standard deviation of the pressure during the sequence
      overload: Database.CycleSpeedMixerInfo.PressureStd*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.DateTime
      commentId: P:Database.CycleSpeedMixerInfo.DateTime
      language: CSharp
      name:
        CSharp: DateTime
        VB: DateTime
      nameWithType:
        CSharp: CycleSpeedMixerInfo.DateTime
        VB: CycleSpeedMixerInfo.DateTime
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.DateTime
        VB: Database.CycleSpeedMixerInfo.DateTime
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DateTime
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1173
      example: []
      syntax:
        content:
          CSharp: public int DateTime { get; }
          VB: Public ReadOnly Property DateTime As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the date and time column. From IDtTabInfo
      overload: Database.CycleSpeedMixerInfo.DateTime*
      implements:
      - Database.IDtTabInfo.DateTime
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.CycleSpeedMixerInfo.GetRecipeParameters(System.Object[],System.Int32)
      commentId: M:Database.CycleSpeedMixerInfo.GetRecipeParameters(System.Object[],System.Int32)
      language: CSharp
      name:
        CSharp: GetRecipeParameters(Object[], Int32)
        VB: GetRecipeParameters(Object(), Int32)
      nameWithType:
        CSharp: CycleSpeedMixerInfo.GetRecipeParameters(Object[], Int32)
        VB: CycleSpeedMixerInfo.GetRecipeParameters(Object(), Int32)
      qualifiedName:
        CSharp: Database.CycleSpeedMixerInfo.GetRecipeParameters(System.Object[], System.Int32)
        VB: Database.CycleSpeedMixerInfo.GetRecipeParameters(System.Object(), System.Int32)
      type: Method
      assemblies:
      - Database
      namespace: Database
      source:
        id: GetRecipeParameters
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1180
      summary: "\nMethod which returns the recipe information related to the applicable recipe table \n"
      example: []
      syntax:
        content:
          CSharp: public object[] GetRecipeParameters(object[] recipeValues, int idCycle)
          VB: Public Function GetRecipeParameters(recipeValues As Object(), idCycle As Integer) As Object()
        parameters:
        - id: recipeValues
          type: System.Object[]
          description: Variable containing the recipe information
        - id: idCycle
          type: System.Int32
          description: The value of the id column (see Id from IComTabInfo) of the row of the first cycle sequential table
        return:
          type: System.Object[]
      overload: Database.CycleSpeedMixerInfo.GetRecipeParameters*
      implements:
      - Database.ICycleSeqInfo.GetRecipeParameters(System.Object[],System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Database.TempInfo
    commentId: T:Database.TempInfo
    language: CSharp
    name:
      CSharp: TempInfo
      VB: TempInfo
    nameWithType:
      CSharp: TempInfo
      VB: TempInfo
    qualifiedName:
      CSharp: Database.TempInfo
      VB: Database.TempInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: TempInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 1257
    summary: "\nClass containing the infomration of the temp database table generated during a speedmixer sequence. The table must contain at least the following colummns: \nspeed, pressure\n<p>Creation revision: 001</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TempInfo : IBasTabInfo'
        VB: >-
          Public Class TempInfo

              Implements IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.TempInfo.#ctor
      commentId: M:Database.TempInfo.#ctor
      language: CSharp
      name:
        CSharp: TempInfo()
        VB: TempInfo()
      nameWithType:
        CSharp: TempInfo.TempInfo()
        VB: TempInfo.TempInfo()
      qualifiedName:
        CSharp: Database.TempInfo.TempInfo()
        VB: Database.TempInfo.TempInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1262
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public TempInfo()
          VB: Public Sub New
      overload: Database.TempInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.TempInfo.TabName
      commentId: P:Database.TempInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: TempInfo.TabName
        VB: TempInfo.TabName
      qualifiedName:
        CSharp: Database.TempInfo.TabName
        VB: Database.TempInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1283
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.TempInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.TempInfo.Ids
      commentId: P:Database.TempInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: TempInfo.Ids
        VB: TempInfo.Ids
      qualifiedName:
        CSharp: Database.TempInfo.Ids
        VB: Database.TempInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1289
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; }
          VB: Public ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.TempInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.TempInfo.Descriptions
      commentId: P:Database.TempInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: TempInfo.Descriptions
        VB: TempInfo.Descriptions
      qualifiedName:
        CSharp: Database.TempInfo.Descriptions
        VB: Database.TempInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1292
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.TempInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.TempInfo.Speed
      commentId: P:Database.TempInfo.Speed
      language: CSharp
      name:
        CSharp: Speed
        VB: Speed
      nameWithType:
        CSharp: TempInfo.Speed
        VB: TempInfo.Speed
      qualifiedName:
        CSharp: Database.TempInfo.Speed
        VB: Database.TempInfo.Speed
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Speed
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1295
      example: []
      syntax:
        content:
          CSharp: public int Speed { get; }
          VB: Public ReadOnly Property Speed As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the speed column. This column contains speed logged during the speedmixer&apos;s sequence
      overload: Database.TempInfo.Speed*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.TempInfo.Pressure
      commentId: P:Database.TempInfo.Pressure
      language: CSharp
      name:
        CSharp: Pressure
        VB: Pressure
      nameWithType:
        CSharp: TempInfo.Pressure
        VB: TempInfo.Pressure
      qualifiedName:
        CSharp: Database.TempInfo.Pressure
        VB: Database.TempInfo.Pressure
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Pressure
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1298
      example: []
      syntax:
        content:
          CSharp: public int Pressure { get; }
          VB: Public ReadOnly Property Pressure As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the pressure column. This column contains pressure logged during the speedmixer&apos;s sequence
      overload: Database.TempInfo.Pressure*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Database.TempResultInfo
    commentId: T:Database.TempResultInfo
    language: CSharp
    name:
      CSharp: TempResultInfo
      VB: TempResultInfo
    nameWithType:
      CSharp: TempResultInfo
      VB: TempResultInfo
    qualifiedName:
      CSharp: Database.TempResultInfo
      VB: Database.TempResultInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: TempResultInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 1306
    summary: "\nClass containing the infomration of the temp result database table generated at the end of a speedmixer sequence. The table must contain at least the following colummns: \nspeed average and standard deviation, pressure average and standard deviation\n<p>Creation revision: 001</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TempResultInfo : IBasTabInfo'
        VB: >-
          Public Class TempResultInfo

              Implements IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.TempResultInfo.#ctor
      commentId: M:Database.TempResultInfo.#ctor
      language: CSharp
      name:
        CSharp: TempResultInfo()
        VB: TempResultInfo()
      nameWithType:
        CSharp: TempResultInfo.TempResultInfo()
        VB: TempResultInfo.TempResultInfo()
      qualifiedName:
        CSharp: Database.TempResultInfo.TempResultInfo()
        VB: Database.TempResultInfo.TempResultInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1311
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public TempResultInfo()
          VB: Public Sub New
      overload: Database.TempResultInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.TempResultInfo.TabName
      commentId: P:Database.TempResultInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: TempResultInfo.TabName
        VB: TempResultInfo.TabName
      qualifiedName:
        CSharp: Database.TempResultInfo.TabName
        VB: Database.TempResultInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1332
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.TempResultInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.TempResultInfo.Ids
      commentId: P:Database.TempResultInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: TempResultInfo.Ids
        VB: TempResultInfo.Ids
      qualifiedName:
        CSharp: Database.TempResultInfo.Ids
        VB: Database.TempResultInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1338
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; }
          VB: Public ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.TempResultInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.TempResultInfo.Descriptions
      commentId: P:Database.TempResultInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: TempResultInfo.Descriptions
        VB: TempResultInfo.Descriptions
      qualifiedName:
        CSharp: Database.TempResultInfo.Descriptions
        VB: Database.TempResultInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1341
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.TempResultInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.TempResultInfo.SpeedAvg
      commentId: P:Database.TempResultInfo.SpeedAvg
      language: CSharp
      name:
        CSharp: SpeedAvg
        VB: SpeedAvg
      nameWithType:
        CSharp: TempResultInfo.SpeedAvg
        VB: TempResultInfo.SpeedAvg
      qualifiedName:
        CSharp: Database.TempResultInfo.SpeedAvg
        VB: Database.TempResultInfo.SpeedAvg
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SpeedAvg
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1344
      example: []
      syntax:
        content:
          CSharp: public int SpeedAvg { get; }
          VB: Public ReadOnly Property SpeedAvg As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the average speed column. This column contains average speed calculated at the end of the speedmixer&apos;s sequence
      overload: Database.TempResultInfo.SpeedAvg*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.TempResultInfo.PressureAvg
      commentId: P:Database.TempResultInfo.PressureAvg
      language: CSharp
      name:
        CSharp: PressureAvg
        VB: PressureAvg
      nameWithType:
        CSharp: TempResultInfo.PressureAvg
        VB: TempResultInfo.PressureAvg
      qualifiedName:
        CSharp: Database.TempResultInfo.PressureAvg
        VB: Database.TempResultInfo.PressureAvg
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PressureAvg
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1347
      example: []
      syntax:
        content:
          CSharp: public int PressureAvg { get; }
          VB: Public ReadOnly Property PressureAvg As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the average pressure column. This column contains average pressure calculated at the end of the speedmixer&apos;s sequence
      overload: Database.TempResultInfo.PressureAvg*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.TempResultInfo.SpeedStd
      commentId: P:Database.TempResultInfo.SpeedStd
      language: CSharp
      name:
        CSharp: SpeedStd
        VB: SpeedStd
      nameWithType:
        CSharp: TempResultInfo.SpeedStd
        VB: TempResultInfo.SpeedStd
      qualifiedName:
        CSharp: Database.TempResultInfo.SpeedStd
        VB: Database.TempResultInfo.SpeedStd
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SpeedStd
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1350
      example: []
      syntax:
        content:
          CSharp: public int SpeedStd { get; }
          VB: Public ReadOnly Property SpeedStd As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the standard deviation speed column. This column contains average standard deviation calculated at the end of the speedmixer&apos;s sequence
      overload: Database.TempResultInfo.SpeedStd*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.TempResultInfo.PressureStd
      commentId: P:Database.TempResultInfo.PressureStd
      language: CSharp
      name:
        CSharp: PressureStd
        VB: PressureStd
      nameWithType:
        CSharp: TempResultInfo.PressureStd
        VB: TempResultInfo.PressureStd
      qualifiedName:
        CSharp: Database.TempResultInfo.PressureStd
        VB: Database.TempResultInfo.PressureStd
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: PressureStd
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1353
      example: []
      syntax:
        content:
          CSharp: public int PressureStd { get; }
          VB: Public ReadOnly Property PressureStd As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the standard deviation pressure column. This column contains standard deviation pressure calculated at the end of the speedmixer&apos;s sequence
      overload: Database.TempResultInfo.PressureStd*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Database.DailyTestInfo
    commentId: T:Database.DailyTestInfo
    language: CSharp
    name:
      CSharp: DailyTestInfo
      VB: DailyTestInfo
    nameWithType:
      CSharp: DailyTestInfo
      VB: DailyTestInfo
    qualifiedName:
      CSharp: Database.DailyTestInfo
      VB: Database.DailyTestInfo
    type: Class
    assemblies:
    - Database
    namespace: Database
    source:
      id: DailyTestInfo
      path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
      startLine: 1365
    summary: "\nClass containing the infomration of the sample database table. The table must contain at least the following colummns: \nId (UNIQUE INTEGER)\nDateTime, \nsetpoints (from 1 to 4), \nmeasures (from 1 to 4), \nstatus\n<p>Creation revision: 001</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DailyTestInfo : IComTabInfo, IDtTabInfo, IBasTabInfo'
        VB: >-
          Public Class DailyTestInfo

              Implements IComTabInfo, IDtTabInfo, IBasTabInfo
    inheritance:
    - System.Object
    implements:
    - Database.IComTabInfo
    - Database.IDtTabInfo
    - Database.IBasTabInfo
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Database.DailyTestInfo.#ctor
      commentId: M:Database.DailyTestInfo.#ctor
      language: CSharp
      name:
        CSharp: DailyTestInfo()
        VB: DailyTestInfo()
      nameWithType:
        CSharp: DailyTestInfo.DailyTestInfo()
        VB: DailyTestInfo.DailyTestInfo()
      qualifiedName:
        CSharp: Database.DailyTestInfo.DailyTestInfo()
        VB: Database.DailyTestInfo.DailyTestInfo()
      type: Constructor
      assemblies:
      - Database
      namespace: Database
      source:
        id: .ctor
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1370
      summary: "\nSets all the variables of the class except the values of the variable Columns\n"
      example: []
      syntax:
        content:
          CSharp: public DailyTestInfo()
          VB: Public Sub New
      overload: Database.DailyTestInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Database.DailyTestInfo.TabName
      commentId: P:Database.DailyTestInfo.TabName
      language: CSharp
      name:
        CSharp: TabName
        VB: TabName
      nameWithType:
        CSharp: DailyTestInfo.TabName
        VB: DailyTestInfo.TabName
      qualifiedName:
        CSharp: Database.DailyTestInfo.TabName
        VB: Database.DailyTestInfo.TabName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: TabName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1409
      example: []
      syntax:
        content:
          CSharp: public string TabName { get; }
          VB: Public ReadOnly Property TabName As String
        parameters: []
        return:
          type: System.String
          description: Name of the database table. From IBasTabInfo interface
      overload: Database.DailyTestInfo.TabName*
      implements:
      - Database.IBasTabInfo.TabName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Ids
      commentId: P:Database.DailyTestInfo.Ids
      language: CSharp
      name:
        CSharp: Ids
        VB: Ids
      nameWithType:
        CSharp: DailyTestInfo.Ids
        VB: DailyTestInfo.Ids
      qualifiedName:
        CSharp: Database.DailyTestInfo.Ids
        VB: Database.DailyTestInfo.Ids
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Ids
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1415
      example: []
      syntax:
        content:
          CSharp: public string[] Ids { get; }
          VB: Public ReadOnly Property Ids As String()
        parameters: []
        return:
          type: System.String[]
          description: Name of the columns of the database table. From IBasTabInfo interface
      overload: Database.DailyTestInfo.Ids*
      implements:
      - Database.IBasTabInfo.Ids
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Descriptions
      commentId: P:Database.DailyTestInfo.Descriptions
      language: CSharp
      name:
        CSharp: Descriptions
        VB: Descriptions
      nameWithType:
        CSharp: DailyTestInfo.Descriptions
        VB: DailyTestInfo.Descriptions
      qualifiedName:
        CSharp: Database.DailyTestInfo.Descriptions
        VB: Database.DailyTestInfo.Descriptions
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Descriptions
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1418
      example: []
      syntax:
        content:
          CSharp: public string[] Descriptions { get; }
          VB: Public ReadOnly Property Descriptions As String()
        parameters: []
        return:
          type: System.String[]
          description: Description of the columns of the database table
      overload: Database.DailyTestInfo.Descriptions*
      implements:
      - Database.IBasTabInfo.Descriptions
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Id
      commentId: P:Database.DailyTestInfo.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: DailyTestInfo.Id
        VB: DailyTestInfo.Id
      qualifiedName:
        CSharp: Database.DailyTestInfo.Id
        VB: Database.DailyTestInfo.Id
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Id
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1421
      example: []
      syntax:
        content:
          CSharp: public int Id { get; }
          VB: Public ReadOnly Property Id As Integer
        parameters: []
        return:
          type: System.Int32
          description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
      overload: Database.DailyTestInfo.Id*
      implements:
      - Database.IComTabInfo.Id
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Username
      commentId: P:Database.DailyTestInfo.Username
      language: CSharp
      name:
        CSharp: Username
        VB: Username
      nameWithType:
        CSharp: DailyTestInfo.Username
        VB: DailyTestInfo.Username
      qualifiedName:
        CSharp: Database.DailyTestInfo.Username
        VB: Database.DailyTestInfo.Username
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Username
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1424
      example: []
      syntax:
        content:
          CSharp: public int Username { get; }
          VB: Public ReadOnly Property Username As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the usernmae column. This column contains the name of the user who performed the sampling
      overload: Database.DailyTestInfo.Username*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.DateTime
      commentId: P:Database.DailyTestInfo.DateTime
      language: CSharp
      name:
        CSharp: DateTime
        VB: DateTime
      nameWithType:
        CSharp: DailyTestInfo.DateTime
        VB: DailyTestInfo.DateTime
      qualifiedName:
        CSharp: Database.DailyTestInfo.DateTime
        VB: Database.DailyTestInfo.DateTime
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: DateTime
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1427
      example: []
      syntax:
        content:
          CSharp: public int DateTime { get; }
          VB: Public ReadOnly Property DateTime As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the date and time column. This column contains the date and time of the insertion the rows. From IDtTabInfo
      overload: Database.DailyTestInfo.DateTime*
      implements:
      - Database.IDtTabInfo.DateTime
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.EquipmentName
      commentId: P:Database.DailyTestInfo.EquipmentName
      language: CSharp
      name:
        CSharp: EquipmentName
        VB: EquipmentName
      nameWithType:
        CSharp: DailyTestInfo.EquipmentName
        VB: DailyTestInfo.EquipmentName
      qualifiedName:
        CSharp: Database.DailyTestInfo.EquipmentName
        VB: Database.DailyTestInfo.EquipmentName
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: EquipmentName
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1430
      example: []
      syntax:
        content:
          CSharp: public int EquipmentName { get; }
          VB: Public ReadOnly Property EquipmentName As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the equipment name column. This column contains the name of the equipment used for the sampling
      overload: Database.DailyTestInfo.EquipmentName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Setpoint1
      commentId: P:Database.DailyTestInfo.Setpoint1
      language: CSharp
      name:
        CSharp: Setpoint1
        VB: Setpoint1
      nameWithType:
        CSharp: DailyTestInfo.Setpoint1
        VB: DailyTestInfo.Setpoint1
      qualifiedName:
        CSharp: Database.DailyTestInfo.Setpoint1
        VB: Database.DailyTestInfo.Setpoint1
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Setpoint1
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1433
      example: []
      syntax:
        content:
          CSharp: public int Setpoint1 { get; }
          VB: Public ReadOnly Property Setpoint1 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the setpoint 1 column. This column contains the value of the first weight sample
      overload: Database.DailyTestInfo.Setpoint1*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Setpoint2
      commentId: P:Database.DailyTestInfo.Setpoint2
      language: CSharp
      name:
        CSharp: Setpoint2
        VB: Setpoint2
      nameWithType:
        CSharp: DailyTestInfo.Setpoint2
        VB: DailyTestInfo.Setpoint2
      qualifiedName:
        CSharp: Database.DailyTestInfo.Setpoint2
        VB: Database.DailyTestInfo.Setpoint2
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Setpoint2
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1436
      example: []
      syntax:
        content:
          CSharp: public int Setpoint2 { get; }
          VB: Public ReadOnly Property Setpoint2 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the setpoint 2 column. This column contains the value of the second weight sample
      overload: Database.DailyTestInfo.Setpoint2*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Setpoint3
      commentId: P:Database.DailyTestInfo.Setpoint3
      language: CSharp
      name:
        CSharp: Setpoint3
        VB: Setpoint3
      nameWithType:
        CSharp: DailyTestInfo.Setpoint3
        VB: DailyTestInfo.Setpoint3
      qualifiedName:
        CSharp: Database.DailyTestInfo.Setpoint3
        VB: Database.DailyTestInfo.Setpoint3
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Setpoint3
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1439
      example: []
      syntax:
        content:
          CSharp: public int Setpoint3 { get; }
          VB: Public ReadOnly Property Setpoint3 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the setpoint 3 column. This column contains the value of the third weight sample
      overload: Database.DailyTestInfo.Setpoint3*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Setpoint4
      commentId: P:Database.DailyTestInfo.Setpoint4
      language: CSharp
      name:
        CSharp: Setpoint4
        VB: Setpoint4
      nameWithType:
        CSharp: DailyTestInfo.Setpoint4
        VB: DailyTestInfo.Setpoint4
      qualifiedName:
        CSharp: Database.DailyTestInfo.Setpoint4
        VB: Database.DailyTestInfo.Setpoint4
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Setpoint4
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1442
      example: []
      syntax:
        content:
          CSharp: public int Setpoint4 { get; }
          VB: Public ReadOnly Property Setpoint4 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the setpoint 4 column. This column contains the value of the fourth weight sample
      overload: Database.DailyTestInfo.Setpoint4*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Measure1
      commentId: P:Database.DailyTestInfo.Measure1
      language: CSharp
      name:
        CSharp: Measure1
        VB: Measure1
      nameWithType:
        CSharp: DailyTestInfo.Measure1
        VB: DailyTestInfo.Measure1
      qualifiedName:
        CSharp: Database.DailyTestInfo.Measure1
        VB: Database.DailyTestInfo.Measure1
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Measure1
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1445
      example: []
      syntax:
        content:
          CSharp: public int Measure1 { get; }
          VB: Public ReadOnly Property Measure1 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the measure 1 column. This column contains the measure weight of the setpoint 1
      overload: Database.DailyTestInfo.Measure1*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Measure2
      commentId: P:Database.DailyTestInfo.Measure2
      language: CSharp
      name:
        CSharp: Measure2
        VB: Measure2
      nameWithType:
        CSharp: DailyTestInfo.Measure2
        VB: DailyTestInfo.Measure2
      qualifiedName:
        CSharp: Database.DailyTestInfo.Measure2
        VB: Database.DailyTestInfo.Measure2
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Measure2
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1448
      example: []
      syntax:
        content:
          CSharp: public int Measure2 { get; }
          VB: Public ReadOnly Property Measure2 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the measure 2 column. This column contains the measure weight of the setpoint 2
      overload: Database.DailyTestInfo.Measure2*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Measure3
      commentId: P:Database.DailyTestInfo.Measure3
      language: CSharp
      name:
        CSharp: Measure3
        VB: Measure3
      nameWithType:
        CSharp: DailyTestInfo.Measure3
        VB: DailyTestInfo.Measure3
      qualifiedName:
        CSharp: Database.DailyTestInfo.Measure3
        VB: Database.DailyTestInfo.Measure3
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Measure3
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1451
      example: []
      syntax:
        content:
          CSharp: public int Measure3 { get; }
          VB: Public ReadOnly Property Measure3 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the measure 3 column. This column contains the measure weight of the setpoint 3
      overload: Database.DailyTestInfo.Measure3*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Measure4
      commentId: P:Database.DailyTestInfo.Measure4
      language: CSharp
      name:
        CSharp: Measure4
        VB: Measure4
      nameWithType:
        CSharp: DailyTestInfo.Measure4
        VB: DailyTestInfo.Measure4
      qualifiedName:
        CSharp: Database.DailyTestInfo.Measure4
        VB: Database.DailyTestInfo.Measure4
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Measure4
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1454
      example: []
      syntax:
        content:
          CSharp: public int Measure4 { get; }
          VB: Public ReadOnly Property Measure4 As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the measure 4 column. This column contains the measure weight of the setpoint 4
      overload: Database.DailyTestInfo.Measure4*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.Status
      commentId: P:Database.DailyTestInfo.Status
      language: CSharp
      name:
        CSharp: Status
        VB: Status
      nameWithType:
        CSharp: DailyTestInfo.Status
        VB: DailyTestInfo.Status
      qualifiedName:
        CSharp: Database.DailyTestInfo.Status
        VB: Database.DailyTestInfo.Status
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: Status
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1457
      example: []
      syntax:
        content:
          CSharp: public int Status { get; }
          VB: Public ReadOnly Property Status As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the status column. This column contains the status of the sample
      overload: Database.DailyTestInfo.Status*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Database.DailyTestInfo.SamplesNumber
      commentId: P:Database.DailyTestInfo.SamplesNumber
      language: CSharp
      name:
        CSharp: SamplesNumber
        VB: SamplesNumber
      nameWithType:
        CSharp: DailyTestInfo.SamplesNumber
        VB: DailyTestInfo.SamplesNumber
      qualifiedName:
        CSharp: Database.DailyTestInfo.SamplesNumber
        VB: Database.DailyTestInfo.SamplesNumber
      type: Property
      assemblies:
      - Database
      namespace: Database
      source:
        id: SamplesNumber
        path: C:\Temp\MixingApplication\Source code\Database\TableInfo.cs
        startLine: 1460
      example: []
      syntax:
        content:
          CSharp: public int SamplesNumber { get; }
          VB: Public ReadOnly Property SamplesNumber As Integer
        parameters: []
        return:
          type: System.Int32
          description: Index of the sample number column. This column contains the number of samples which can be measured
      overload: Database.DailyTestInfo.SamplesNumber*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Database.ConnectionInfo.Server*:
    name:
      CSharp:
      - id: Database.ConnectionInfo.Server*
        name: Server
        nameWithType: ConnectionInfo.Server
        qualifiedName: Database.ConnectionInfo.Server
      VB:
      - id: Database.ConnectionInfo.Server*
        name: Server
        nameWithType: ConnectionInfo.Server
        qualifiedName: Database.ConnectionInfo.Server
    isDefinition: true
    commentId: Overload:Database.ConnectionInfo.Server
  Database.ConnectionInfo.UserID*:
    name:
      CSharp:
      - id: Database.ConnectionInfo.UserID*
        name: UserID
        nameWithType: ConnectionInfo.UserID
        qualifiedName: Database.ConnectionInfo.UserID
      VB:
      - id: Database.ConnectionInfo.UserID*
        name: UserID
        nameWithType: ConnectionInfo.UserID
        qualifiedName: Database.ConnectionInfo.UserID
    isDefinition: true
    commentId: Overload:Database.ConnectionInfo.UserID
  Database.ConnectionInfo.Password*:
    name:
      CSharp:
      - id: Database.ConnectionInfo.Password*
        name: Password
        nameWithType: ConnectionInfo.Password
        qualifiedName: Database.ConnectionInfo.Password
      VB:
      - id: Database.ConnectionInfo.Password*
        name: Password
        nameWithType: ConnectionInfo.Password
        qualifiedName: Database.ConnectionInfo.Password
    isDefinition: true
    commentId: Overload:Database.ConnectionInfo.Password
  Database.ConnectionInfo.Db*:
    name:
      CSharp:
      - id: Database.ConnectionInfo.Db*
        name: Db
        nameWithType: ConnectionInfo.Db
        qualifiedName: Database.ConnectionInfo.Db
      VB:
      - id: Database.ConnectionInfo.Db*
        name: Db
        nameWithType: ConnectionInfo.Db
        qualifiedName: Database.ConnectionInfo.Db
    isDefinition: true
    commentId: Overload:Database.ConnectionInfo.Db
  Database.ConnectionInfo:
    name:
      CSharp:
      - id: Database.ConnectionInfo
        name: ConnectionInfo
        nameWithType: ConnectionInfo
        qualifiedName: Database.ConnectionInfo
      VB:
      - id: Database.ConnectionInfo
        name: ConnectionInfo
        nameWithType: ConnectionInfo
        qualifiedName: Database.ConnectionInfo
    isDefinition: true
    parent: Database
    commentId: T:Database.ConnectionInfo
  System.Configuration:
    name:
      CSharp:
      - name: System.Configuration
        nameWithType: System.Configuration
        qualifiedName: System.Configuration
        isExternal: true
      VB:
      - name: System.Configuration
        nameWithType: System.Configuration
        qualifiedName: System.Configuration
    isDefinition: true
    commentId: N:System.Configuration
  System.Configuration.SettingsSerializeAsAttribute:
    name:
      CSharp:
      - id: System.Configuration.SettingsSerializeAsAttribute
        name: SettingsSerializeAsAttribute
        nameWithType: SettingsSerializeAsAttribute
        qualifiedName: System.Configuration.SettingsSerializeAsAttribute
        isExternal: true
      VB:
      - id: System.Configuration.SettingsSerializeAsAttribute
        name: SettingsSerializeAsAttribute
        nameWithType: SettingsSerializeAsAttribute
        qualifiedName: System.Configuration.SettingsSerializeAsAttribute
        isExternal: true
    isDefinition: true
    parent: System.Configuration
    commentId: T:System.Configuration.SettingsSerializeAsAttribute
  System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs):
    name:
      CSharp:
      - id: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
        name: SettingsSerializeAsAttribute
        nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute
        qualifiedName: System.Configuration.SettingsSerializeAsAttribute.SettingsSerializeAsAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Configuration.SettingsSerializeAs
        name: SettingsSerializeAs
        nameWithType: SettingsSerializeAs
        qualifiedName: System.Configuration.SettingsSerializeAs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
        name: SettingsSerializeAsAttribute
        nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute
        qualifiedName: System.Configuration.SettingsSerializeAsAttribute.SettingsSerializeAsAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Configuration.SettingsSerializeAs
        name: SettingsSerializeAs
        nameWithType: SettingsSerializeAs
        qualifiedName: System.Configuration.SettingsSerializeAs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Configuration.SettingsSerializeAsAttribute
    commentId: M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
  System.Configuration.SettingsSerializeAs:
    name:
      CSharp:
      - id: System.Configuration.SettingsSerializeAs
        name: SettingsSerializeAs
        nameWithType: SettingsSerializeAs
        qualifiedName: System.Configuration.SettingsSerializeAs
        isExternal: true
      VB:
      - id: System.Configuration.SettingsSerializeAs
        name: SettingsSerializeAs
        nameWithType: SettingsSerializeAs
        qualifiedName: System.Configuration.SettingsSerializeAs
        isExternal: true
    isDefinition: true
    parent: System.Configuration
    commentId: T:System.Configuration.SettingsSerializeAs
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{System.Decimal}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Decimal
        name: Decimal
        nameWithType: Decimal
        qualifiedName: System.Decimal
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Decimal
        name: Decimal
        nameWithType: Decimal
        qualifiedName: System.Decimal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Decimal}
  System.Windows:
    name:
      CSharp:
      - name: System.Windows
        nameWithType: System.Windows
        qualifiedName: System.Windows
        isExternal: true
      VB:
      - name: System.Windows
        nameWithType: System.Windows
        qualifiedName: System.Windows
    isDefinition: true
    commentId: N:System.Windows
  System.Windows.Window:
    name:
      CSharp:
      - id: System.Windows.Window
        name: Window
        nameWithType: Window
        qualifiedName: System.Windows.Window
        isExternal: true
      VB:
      - id: System.Windows.Window
        name: Window
        nameWithType: Window
        qualifiedName: System.Windows.Window
        isExternal: true
    isDefinition: true
    parent: System.Windows
    commentId: T:System.Windows.Window
  Database.IniInfo:
    name:
      CSharp:
      - id: Database.IniInfo
        name: IniInfo
        nameWithType: IniInfo
        qualifiedName: Database.IniInfo
      VB:
      - id: Database.IniInfo
        name: IniInfo
        nameWithType: IniInfo
        qualifiedName: Database.IniInfo
    isDefinition: true
    parent: Database
    commentId: T:Database.IniInfo
  Database:
    name:
      CSharp:
      - name: Database
        nameWithType: Database
        qualifiedName: Database
      VB:
      - name: Database
        nameWithType: Database
        qualifiedName: Database
    isDefinition: true
    commentId: N:Database
  Database.RecipeStatus:
    name:
      CSharp:
      - id: Database.RecipeStatus
        name: RecipeStatus
        nameWithType: RecipeStatus
        qualifiedName: Database.RecipeStatus
      VB:
      - id: Database.RecipeStatus
        name: RecipeStatus
        nameWithType: RecipeStatus
        qualifiedName: Database.RecipeStatus
    isDefinition: true
    parent: Database
    commentId: T:Database.RecipeStatus
  Database.DatabaseSettings.Error_connectToDbFailed*:
    name:
      CSharp:
      - id: Database.DatabaseSettings.Error_connectToDbFailed*
        name: Error_connectToDbFailed
        nameWithType: DatabaseSettings.Error_connectToDbFailed
        qualifiedName: Database.DatabaseSettings.Error_connectToDbFailed
      VB:
      - id: Database.DatabaseSettings.Error_connectToDbFailed*
        name: Error_connectToDbFailed
        nameWithType: DatabaseSettings.Error_connectToDbFailed
        qualifiedName: Database.DatabaseSettings.Error_connectToDbFailed
    isDefinition: true
    commentId: Overload:Database.DatabaseSettings.Error_connectToDbFailed
  Database.DatabaseSettings.General_TrueValue_Read*:
    name:
      CSharp:
      - id: Database.DatabaseSettings.General_TrueValue_Read*
        name: General_TrueValue_Read
        nameWithType: DatabaseSettings.General_TrueValue_Read
        qualifiedName: Database.DatabaseSettings.General_TrueValue_Read
      VB:
      - id: Database.DatabaseSettings.General_TrueValue_Read*
        name: General_TrueValue_Read
        nameWithType: DatabaseSettings.General_TrueValue_Read
        qualifiedName: Database.DatabaseSettings.General_TrueValue_Read
    isDefinition: true
    commentId: Overload:Database.DatabaseSettings.General_TrueValue_Read
  Database.DatabaseSettings.General_FalseValue_Read*:
    name:
      CSharp:
      - id: Database.DatabaseSettings.General_FalseValue_Read*
        name: General_FalseValue_Read
        nameWithType: DatabaseSettings.General_FalseValue_Read
        qualifiedName: Database.DatabaseSettings.General_FalseValue_Read
      VB:
      - id: Database.DatabaseSettings.General_FalseValue_Read*
        name: General_FalseValue_Read
        nameWithType: DatabaseSettings.General_FalseValue_Read
        qualifiedName: Database.DatabaseSettings.General_FalseValue_Read
    isDefinition: true
    commentId: Overload:Database.DatabaseSettings.General_FalseValue_Read
  Database.DatabaseSettings.General_TrueValue_Write*:
    name:
      CSharp:
      - id: Database.DatabaseSettings.General_TrueValue_Write*
        name: General_TrueValue_Write
        nameWithType: DatabaseSettings.General_TrueValue_Write
        qualifiedName: Database.DatabaseSettings.General_TrueValue_Write
      VB:
      - id: Database.DatabaseSettings.General_TrueValue_Write*
        name: General_TrueValue_Write
        nameWithType: DatabaseSettings.General_TrueValue_Write
        qualifiedName: Database.DatabaseSettings.General_TrueValue_Write
    isDefinition: true
    commentId: Overload:Database.DatabaseSettings.General_TrueValue_Write
  Database.DatabaseSettings.General_FalseValue_Write*:
    name:
      CSharp:
      - id: Database.DatabaseSettings.General_FalseValue_Write*
        name: General_FalseValue_Write
        nameWithType: DatabaseSettings.General_FalseValue_Write
        qualifiedName: Database.DatabaseSettings.General_FalseValue_Write
      VB:
      - id: Database.DatabaseSettings.General_FalseValue_Write*
        name: General_FalseValue_Write
        nameWithType: DatabaseSettings.General_FalseValue_Write
        qualifiedName: Database.DatabaseSettings.General_FalseValue_Write
    isDefinition: true
    commentId: Overload:Database.DatabaseSettings.General_FalseValue_Write
  Database.DatabaseSettings.ConnectionInfo*:
    name:
      CSharp:
      - id: Database.DatabaseSettings.ConnectionInfo*
        name: ConnectionInfo
        nameWithType: DatabaseSettings.ConnectionInfo
        qualifiedName: Database.DatabaseSettings.ConnectionInfo
      VB:
      - id: Database.DatabaseSettings.ConnectionInfo*
        name: ConnectionInfo
        nameWithType: DatabaseSettings.ConnectionInfo
        qualifiedName: Database.DatabaseSettings.ConnectionInfo
    isDefinition: true
    commentId: Overload:Database.DatabaseSettings.ConnectionInfo
  Database.DatabaseSettings.DBAppFolder*:
    name:
      CSharp:
      - id: Database.DatabaseSettings.DBAppFolder*
        name: DBAppFolder
        nameWithType: DatabaseSettings.DBAppFolder
        qualifiedName: Database.DatabaseSettings.DBAppFolder
      VB:
      - id: Database.DatabaseSettings.DBAppFolder*
        name: DBAppFolder
        nameWithType: DatabaseSettings.DBAppFolder
        qualifiedName: Database.DatabaseSettings.DBAppFolder
    isDefinition: true
    commentId: Overload:Database.DatabaseSettings.DBAppFolder
  Database.DatabaseSettings.Timestamp_Format*:
    name:
      CSharp:
      - id: Database.DatabaseSettings.Timestamp_Format*
        name: Timestamp_Format
        nameWithType: DatabaseSettings.Timestamp_Format
        qualifiedName: Database.DatabaseSettings.Timestamp_Format
      VB:
      - id: Database.DatabaseSettings.Timestamp_Format*
        name: Timestamp_Format
        nameWithType: DatabaseSettings.Timestamp_Format
        qualifiedName: Database.DatabaseSettings.Timestamp_Format
    isDefinition: true
    commentId: Overload:Database.DatabaseSettings.Timestamp_Format
  Database.DatabaseSettings:
    name:
      CSharp:
      - id: Database.DatabaseSettings
        name: DatabaseSettings
        nameWithType: DatabaseSettings
        qualifiedName: Database.DatabaseSettings
      VB:
      - id: Database.DatabaseSettings
        name: DatabaseSettings
        nameWithType: DatabaseSettings
        qualifiedName: Database.DatabaseSettings
    isDefinition: true
    commentId: T:Database.DatabaseSettings
  Database.IComTabInfo:
    name:
      CSharp:
      - id: Database.IComTabInfo
        name: IComTabInfo
        nameWithType: IComTabInfo
        qualifiedName: Database.IComTabInfo
      VB:
      - id: Database.IComTabInfo
        name: IComTabInfo
        nameWithType: IComTabInfo
        qualifiedName: Database.IComTabInfo
    isDefinition: true
    parent: Database
    commentId: T:Database.IComTabInfo
  Database.ReadInfo.TableInfo*:
    name:
      CSharp:
      - id: Database.ReadInfo.TableInfo*
        name: TableInfo
        nameWithType: ReadInfo.TableInfo
        qualifiedName: Database.ReadInfo.TableInfo
      VB:
      - id: Database.ReadInfo.TableInfo*
        name: TableInfo
        nameWithType: ReadInfo.TableInfo
        qualifiedName: Database.ReadInfo.TableInfo
    isDefinition: true
    commentId: Overload:Database.ReadInfo.TableInfo
  Database.ReadInfo.OrderBy*:
    name:
      CSharp:
      - id: Database.ReadInfo.OrderBy*
        name: OrderBy
        nameWithType: ReadInfo.OrderBy
        qualifiedName: Database.ReadInfo.OrderBy
      VB:
      - id: Database.ReadInfo.OrderBy*
        name: OrderBy
        nameWithType: ReadInfo.OrderBy
        qualifiedName: Database.ReadInfo.OrderBy
    isDefinition: true
    commentId: Overload:Database.ReadInfo.OrderBy
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Database.ReadInfo.IsOrderAsc*:
    name:
      CSharp:
      - id: Database.ReadInfo.IsOrderAsc*
        name: IsOrderAsc
        nameWithType: ReadInfo.IsOrderAsc
        qualifiedName: Database.ReadInfo.IsOrderAsc
      VB:
      - id: Database.ReadInfo.IsOrderAsc*
        name: IsOrderAsc
        nameWithType: ReadInfo.IsOrderAsc
        qualifiedName: Database.ReadInfo.IsOrderAsc
    isDefinition: true
    commentId: Overload:Database.ReadInfo.IsOrderAsc
  System.Nullable{System.DateTime}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.DateTime}
  Database.ReadInfo.DtBefore*:
    name:
      CSharp:
      - id: Database.ReadInfo.DtBefore*
        name: DtBefore
        nameWithType: ReadInfo.DtBefore
        qualifiedName: Database.ReadInfo.DtBefore
      VB:
      - id: Database.ReadInfo.DtBefore*
        name: DtBefore
        nameWithType: ReadInfo.DtBefore
        qualifiedName: Database.ReadInfo.DtBefore
    isDefinition: true
    commentId: Overload:Database.ReadInfo.DtBefore
  Database.ReadInfo.DtAfter*:
    name:
      CSharp:
      - id: Database.ReadInfo.DtAfter*
        name: DtAfter
        nameWithType: ReadInfo.DtAfter
        qualifiedName: Database.ReadInfo.DtAfter
      VB:
      - id: Database.ReadInfo.DtAfter*
        name: DtAfter
        nameWithType: ReadInfo.DtAfter
        qualifiedName: Database.ReadInfo.DtAfter
    isDefinition: true
    commentId: Overload:Database.ReadInfo.DtAfter
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Database.ReadInfo.EventTypes*:
    name:
      CSharp:
      - id: Database.ReadInfo.EventTypes*
        name: EventTypes
        nameWithType: ReadInfo.EventTypes
        qualifiedName: Database.ReadInfo.EventTypes
      VB:
      - id: Database.ReadInfo.EventTypes*
        name: EventTypes
        nameWithType: ReadInfo.EventTypes
        qualifiedName: Database.ReadInfo.EventTypes
    isDefinition: true
    commentId: Overload:Database.ReadInfo.EventTypes
  Database.ReadInfo.CustomWhere*:
    name:
      CSharp:
      - id: Database.ReadInfo.CustomWhere*
        name: CustomWhere
        nameWithType: ReadInfo.CustomWhere
        qualifiedName: Database.ReadInfo.CustomWhere
      VB:
      - id: Database.ReadInfo.CustomWhere*
        name: CustomWhere
        nameWithType: ReadInfo.CustomWhere
        qualifiedName: Database.ReadInfo.CustomWhere
    isDefinition: true
    commentId: Overload:Database.ReadInfo.CustomWhere
  Database.ReadInfo.TableInfo:
    commentId: P:Database.ReadInfo.TableInfo
  Database.ReadInfo.OrderBy:
    commentId: P:Database.ReadInfo.OrderBy
  Database.ReadInfo.IsOrderAsc:
    commentId: P:Database.ReadInfo.IsOrderAsc
  Database.ReadInfo.DtBefore:
    commentId: P:Database.ReadInfo.DtBefore
  Database.ReadInfo.DtAfter:
    commentId: P:Database.ReadInfo.DtAfter
  Database.ReadInfo.EventTypes:
    commentId: P:Database.ReadInfo.EventTypes
  Database.ReadInfo.CustomWhere:
    commentId: P:Database.ReadInfo.CustomWhere
  Database.ReadInfo.#ctor*:
    name:
      CSharp:
      - id: Database.ReadInfo.#ctor*
        name: ReadInfo
        nameWithType: ReadInfo.ReadInfo
        qualifiedName: Database.ReadInfo.ReadInfo
      VB:
      - id: Database.ReadInfo.#ctor*
        name: ReadInfo
        nameWithType: ReadInfo.ReadInfo
        qualifiedName: Database.ReadInfo.ReadInfo
    isDefinition: true
    commentId: Overload:Database.ReadInfo.#ctor
  Database.ReadInfo:
    name:
      CSharp:
      - id: Database.ReadInfo
        name: ReadInfo
        nameWithType: ReadInfo
        qualifiedName: Database.ReadInfo
      VB:
      - id: Database.ReadInfo
        name: ReadInfo
        nameWithType: ReadInfo
        qualifiedName: Database.ReadInfo
    isDefinition: true
    parent: Database
    commentId: T:Database.ReadInfo
  Database.MyDatabase.info:
    commentId: F:Database.MyDatabase.info
  Database.MyDatabase.Initialize*:
    name:
      CSharp:
      - id: Database.MyDatabase.Initialize*
        name: Initialize
        nameWithType: MyDatabase.Initialize
        qualifiedName: Database.MyDatabase.Initialize
      VB:
      - id: Database.MyDatabase.Initialize*
        name: Initialize
        nameWithType: MyDatabase.Initialize
        qualifiedName: Database.MyDatabase.Initialize
    isDefinition: true
    commentId: Overload:Database.MyDatabase.Initialize
  System.Threading.Tasks.Task`1:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Threading.Tasks.Task`1
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
        isExternal: true
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task{System.Object}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Object}
  System.Func`1:
    name:
      CSharp:
      - id: System.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Func`1
  System.Func{System.Object}:
    name:
      CSharp:
      - id: System.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`1
    parent: System
    commentId: T:System.Func{System.Object}
  Database.MyDatabase.TaskEnQueue*:
    name:
      CSharp:
      - id: Database.MyDatabase.TaskEnQueue*
        name: TaskEnQueue
        nameWithType: MyDatabase.TaskEnQueue
        qualifiedName: Database.MyDatabase.TaskEnQueue
      VB:
      - id: Database.MyDatabase.TaskEnQueue*
        name: TaskEnQueue
        nameWithType: MyDatabase.TaskEnQueue
        qualifiedName: Database.MyDatabase.TaskEnQueue
    isDefinition: true
    commentId: Overload:Database.MyDatabase.TaskEnQueue
  Database.IBasTabInfo:
    name:
      CSharp:
      - id: Database.IBasTabInfo
        name: IBasTabInfo
        nameWithType: IBasTabInfo
        qualifiedName: Database.IBasTabInfo
      VB:
      - id: Database.IBasTabInfo
        name: IBasTabInfo
        nameWithType: IBasTabInfo
        qualifiedName: Database.IBasTabInfo
    isDefinition: true
    parent: Database
    commentId: T:Database.IBasTabInfo
  System.Object[]:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Database.MyDatabase.InsertRow_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.InsertRow_new*
        name: InsertRow_new
        nameWithType: MyDatabase.InsertRow_new
        qualifiedName: Database.MyDatabase.InsertRow_new
      VB:
      - id: Database.MyDatabase.InsertRow_new*
        name: InsertRow_new
        nameWithType: MyDatabase.InsertRow_new
        qualifiedName: Database.MyDatabase.InsertRow_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.InsertRow_new
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Database.MyDatabase.Update_Row_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.Update_Row_new*
        name: Update_Row_new
        nameWithType: MyDatabase.Update_Row_new
        qualifiedName: Database.MyDatabase.Update_Row_new
      VB:
      - id: Database.MyDatabase.Update_Row_new*
        name: Update_Row_new
        nameWithType: MyDatabase.Update_Row_new
        qualifiedName: Database.MyDatabase.Update_Row_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.Update_Row_new
  Database.MyDatabase.DeleteRow_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.DeleteRow_new*
        name: DeleteRow_new
        nameWithType: MyDatabase.DeleteRow_new
        qualifiedName: Database.MyDatabase.DeleteRow_new
      VB:
      - id: Database.MyDatabase.DeleteRow_new*
        name: DeleteRow_new
        nameWithType: MyDatabase.DeleteRow_new
        qualifiedName: Database.MyDatabase.DeleteRow_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.DeleteRow_new
  Database.IDtTabInfo:
    name:
      CSharp:
      - id: Database.IDtTabInfo
        name: IDtTabInfo
        nameWithType: IDtTabInfo
        qualifiedName: Database.IDtTabInfo
      VB:
      - id: Database.IDtTabInfo
        name: IDtTabInfo
        nameWithType: IDtTabInfo
        qualifiedName: Database.IDtTabInfo
    isDefinition: true
    parent: Database
    commentId: T:Database.IDtTabInfo
  System.DateTime:
    name:
      CSharp:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      VB:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTime
  Database.MyDatabase.DeleteRows_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.DeleteRows_new*
        name: DeleteRows_new
        nameWithType: MyDatabase.DeleteRows_new
        qualifiedName: Database.MyDatabase.DeleteRows_new
      VB:
      - id: Database.MyDatabase.DeleteRows_new*
        name: DeleteRows_new
        nameWithType: MyDatabase.DeleteRows_new
        qualifiedName: Database.MyDatabase.DeleteRows_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.DeleteRows_new
  System.Nullable{System.Int32}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Int32}
  Database.MyDatabase.GetOneRow_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetOneRow_new*
        name: GetOneRow_new
        nameWithType: MyDatabase.GetOneRow_new
        qualifiedName: Database.MyDatabase.GetOneRow_new
      VB:
      - id: Database.MyDatabase.GetOneRow_new*
        name: GetOneRow_new
        nameWithType: MyDatabase.GetOneRow_new
        qualifiedName: Database.MyDatabase.GetOneRow_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetOneRow_new
  Database.MyDatabase.GetOneRow*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetOneRow*
        name: GetOneRow
        nameWithType: MyDatabase.GetOneRow
        qualifiedName: Database.MyDatabase.GetOneRow
      VB:
      - id: Database.MyDatabase.GetOneRow*
        name: GetOneRow
        nameWithType: MyDatabase.GetOneRow
        qualifiedName: Database.MyDatabase.GetOneRow
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetOneRow
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{System.Object[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Object[]}
  Database.MyDatabase.GetRows_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetRows_new*
        name: GetRows_new
        nameWithType: MyDatabase.GetRows_new
        qualifiedName: Database.MyDatabase.GetRows_new
      VB:
      - id: Database.MyDatabase.GetRows_new*
        name: GetRows_new
        nameWithType: MyDatabase.GetRows_new
        qualifiedName: Database.MyDatabase.GetRows_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetRows_new
  Database.MyDatabase.GetAuditTrailRows_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetAuditTrailRows_new*
        name: GetAuditTrailRows_new
        nameWithType: MyDatabase.GetAuditTrailRows_new
        qualifiedName: Database.MyDatabase.GetAuditTrailRows_new
      VB:
      - id: Database.MyDatabase.GetAuditTrailRows_new*
        name: GetAuditTrailRows_new
        nameWithType: MyDatabase.GetAuditTrailRows_new
        qualifiedName: Database.MyDatabase.GetAuditTrailRows_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetAuditTrailRows_new
  Database.MyDatabase.GetAlarms_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetAlarms_new*
        name: GetAlarms_new
        nameWithType: MyDatabase.GetAlarms_new
        qualifiedName: Database.MyDatabase.GetAlarms_new
      VB:
      - id: Database.MyDatabase.GetAlarms_new*
        name: GetAlarms_new
        nameWithType: MyDatabase.GetAlarms_new
        qualifiedName: Database.MyDatabase.GetAlarms_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetAlarms_new
  Database.MyDatabase.GetLastRecipes_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetLastRecipes_new*
        name: GetLastRecipes_new
        nameWithType: MyDatabase.GetLastRecipes_new
        qualifiedName: Database.MyDatabase.GetLastRecipes_new
      VB:
      - id: Database.MyDatabase.GetLastRecipes_new*
        name: GetLastRecipes_new
        nameWithType: MyDatabase.GetLastRecipes_new
        qualifiedName: Database.MyDatabase.GetLastRecipes_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetLastRecipes_new
  Database.DailyTestInfo:
    name:
      CSharp:
      - id: Database.DailyTestInfo
        name: DailyTestInfo
        nameWithType: DailyTestInfo
        qualifiedName: Database.DailyTestInfo
      VB:
      - id: Database.DailyTestInfo
        name: DailyTestInfo
        nameWithType: DailyTestInfo
        qualifiedName: Database.DailyTestInfo
    isDefinition: true
    parent: Database
    commentId: T:Database.DailyTestInfo
  Database.MyDatabase.GetLastDailyTestDate*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetLastDailyTestDate*
        name: GetLastDailyTestDate
        nameWithType: MyDatabase.GetLastDailyTestDate
        qualifiedName: Database.MyDatabase.GetLastDailyTestDate
      VB:
      - id: Database.MyDatabase.GetLastDailyTestDate*
        name: GetLastDailyTestDate
        nameWithType: MyDatabase.GetLastDailyTestDate
        qualifiedName: Database.MyDatabase.GetLastDailyTestDate
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetLastDailyTestDate
  Database.MyDatabase.GetMax_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetMax_new*
        name: GetMax_new
        nameWithType: MyDatabase.GetMax_new
        qualifiedName: Database.MyDatabase.GetMax_new
      VB:
      - id: Database.MyDatabase.GetMax_new*
        name: GetMax_new
        nameWithType: MyDatabase.GetMax_new
        qualifiedName: Database.MyDatabase.GetMax_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetMax_new
  Database.MyDatabase.GetRowCount*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetRowCount*
        name: GetRowCount
        nameWithType: MyDatabase.GetRowCount
        qualifiedName: Database.MyDatabase.GetRowCount
      VB:
      - id: Database.MyDatabase.GetRowCount*
        name: GetRowCount
        nameWithType: MyDatabase.GetRowCount
        qualifiedName: Database.MyDatabase.GetRowCount
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetRowCount
  Database.MyDatabase.CreateTempTable*:
    name:
      CSharp:
      - id: Database.MyDatabase.CreateTempTable*
        name: CreateTempTable
        nameWithType: MyDatabase.CreateTempTable
        qualifiedName: Database.MyDatabase.CreateTempTable
      VB:
      - id: Database.MyDatabase.CreateTempTable*
        name: CreateTempTable
        nameWithType: MyDatabase.CreateTempTable
        qualifiedName: Database.MyDatabase.CreateTempTable
    isDefinition: true
    commentId: Overload:Database.MyDatabase.CreateTempTable
  Database.MyDatabase.GetResultRowTemp_new*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetResultRowTemp_new*
        name: GetResultRowTemp_new
        nameWithType: MyDatabase.GetResultRowTemp_new
        qualifiedName: Database.MyDatabase.GetResultRowTemp_new
      VB:
      - id: Database.MyDatabase.GetResultRowTemp_new*
        name: GetResultRowTemp_new
        nameWithType: MyDatabase.GetResultRowTemp_new
        qualifiedName: Database.MyDatabase.GetResultRowTemp_new
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetResultRowTemp_new
  Database.MyDatabase.GetRecipeStatus*:
    name:
      CSharp:
      - id: Database.MyDatabase.GetRecipeStatus*
        name: GetRecipeStatus
        nameWithType: MyDatabase.GetRecipeStatus
        qualifiedName: Database.MyDatabase.GetRecipeStatus
      VB:
      - id: Database.MyDatabase.GetRecipeStatus*
        name: GetRecipeStatus
        nameWithType: MyDatabase.GetRecipeStatus
        qualifiedName: Database.MyDatabase.GetRecipeStatus
    isDefinition: true
    commentId: Overload:Database.MyDatabase.GetRecipeStatus
  Database.MyDatabase:
    name:
      CSharp:
      - id: Database.MyDatabase
        name: MyDatabase
        nameWithType: MyDatabase
        qualifiedName: Database.MyDatabase
      VB:
      - id: Database.MyDatabase
        name: MyDatabase
        nameWithType: MyDatabase
        qualifiedName: Database.MyDatabase
    isDefinition: true
    commentId: T:Database.MyDatabase
  Database.IBasTabInfo.TabName*:
    name:
      CSharp:
      - id: Database.IBasTabInfo.TabName*
        name: TabName
        nameWithType: IBasTabInfo.TabName
        qualifiedName: Database.IBasTabInfo.TabName
      VB:
      - id: Database.IBasTabInfo.TabName*
        name: TabName
        nameWithType: IBasTabInfo.TabName
        qualifiedName: Database.IBasTabInfo.TabName
    isDefinition: true
    commentId: Overload:Database.IBasTabInfo.TabName
  Database.IBasTabInfo.Ids*:
    name:
      CSharp:
      - id: Database.IBasTabInfo.Ids*
        name: Ids
        nameWithType: IBasTabInfo.Ids
        qualifiedName: Database.IBasTabInfo.Ids
      VB:
      - id: Database.IBasTabInfo.Ids*
        name: Ids
        nameWithType: IBasTabInfo.Ids
        qualifiedName: Database.IBasTabInfo.Ids
    isDefinition: true
    commentId: Overload:Database.IBasTabInfo.Ids
  Database.IBasTabInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.IBasTabInfo.Descriptions*
        name: Descriptions
        nameWithType: IBasTabInfo.Descriptions
        qualifiedName: Database.IBasTabInfo.Descriptions
      VB:
      - id: Database.IBasTabInfo.Descriptions*
        name: Descriptions
        nameWithType: IBasTabInfo.Descriptions
        qualifiedName: Database.IBasTabInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.IBasTabInfo.Descriptions
  Database.IBasTabInfo.TabName:
    name:
      CSharp:
      - id: Database.IBasTabInfo.TabName
        name: TabName
        nameWithType: IBasTabInfo.TabName
        qualifiedName: Database.IBasTabInfo.TabName
      VB:
      - id: Database.IBasTabInfo.TabName
        name: TabName
        nameWithType: IBasTabInfo.TabName
        qualifiedName: Database.IBasTabInfo.TabName
    isDefinition: true
    parent: Database.IBasTabInfo
    commentId: P:Database.IBasTabInfo.TabName
  Database.IBasTabInfo.Ids:
    name:
      CSharp:
      - id: Database.IBasTabInfo.Ids
        name: Ids
        nameWithType: IBasTabInfo.Ids
        qualifiedName: Database.IBasTabInfo.Ids
      VB:
      - id: Database.IBasTabInfo.Ids
        name: Ids
        nameWithType: IBasTabInfo.Ids
        qualifiedName: Database.IBasTabInfo.Ids
    isDefinition: true
    parent: Database.IBasTabInfo
    commentId: P:Database.IBasTabInfo.Ids
  Database.IBasTabInfo.Descriptions:
    name:
      CSharp:
      - id: Database.IBasTabInfo.Descriptions
        name: Descriptions
        nameWithType: IBasTabInfo.Descriptions
        qualifiedName: Database.IBasTabInfo.Descriptions
      VB:
      - id: Database.IBasTabInfo.Descriptions
        name: Descriptions
        nameWithType: IBasTabInfo.Descriptions
        qualifiedName: Database.IBasTabInfo.Descriptions
    isDefinition: true
    parent: Database.IBasTabInfo
    commentId: P:Database.IBasTabInfo.Descriptions
  Database.IComTabInfo.Id*:
    name:
      CSharp:
      - id: Database.IComTabInfo.Id*
        name: Id
        nameWithType: IComTabInfo.Id
        qualifiedName: Database.IComTabInfo.Id
      VB:
      - id: Database.IComTabInfo.Id*
        name: Id
        nameWithType: IComTabInfo.Id
        qualifiedName: Database.IComTabInfo.Id
    isDefinition: true
    commentId: Overload:Database.IComTabInfo.Id
  Database.IDtTabInfo.DateTime*:
    name:
      CSharp:
      - id: Database.IDtTabInfo.DateTime*
        name: DateTime
        nameWithType: IDtTabInfo.DateTime
        qualifiedName: Database.IDtTabInfo.DateTime
      VB:
      - id: Database.IDtTabInfo.DateTime*
        name: DateTime
        nameWithType: IDtTabInfo.DateTime
        qualifiedName: Database.IDtTabInfo.DateTime
    isDefinition: true
    commentId: Overload:Database.IDtTabInfo.DateTime
  Database.IComTabInfo.Id:
    name:
      CSharp:
      - id: Database.IComTabInfo.Id
        name: Id
        nameWithType: IComTabInfo.Id
        qualifiedName: Database.IComTabInfo.Id
      VB:
      - id: Database.IComTabInfo.Id
        name: Id
        nameWithType: IComTabInfo.Id
        qualifiedName: Database.IComTabInfo.Id
    isDefinition: true
    parent: Database.IComTabInfo
    commentId: P:Database.IComTabInfo.Id
  Database.ISeqTabInfo.SeqType*:
    name:
      CSharp:
      - id: Database.ISeqTabInfo.SeqType*
        name: SeqType
        nameWithType: ISeqTabInfo.SeqType
        qualifiedName: Database.ISeqTabInfo.SeqType
      VB:
      - id: Database.ISeqTabInfo.SeqType*
        name: SeqType
        nameWithType: ISeqTabInfo.SeqType
        qualifiedName: Database.ISeqTabInfo.SeqType
    isDefinition: true
    commentId: Overload:Database.ISeqTabInfo.SeqType
  Database.ISeqTabInfo.NextSeqType*:
    name:
      CSharp:
      - id: Database.ISeqTabInfo.NextSeqType*
        name: NextSeqType
        nameWithType: ISeqTabInfo.NextSeqType
        qualifiedName: Database.ISeqTabInfo.NextSeqType
      VB:
      - id: Database.ISeqTabInfo.NextSeqType*
        name: NextSeqType
        nameWithType: ISeqTabInfo.NextSeqType
        qualifiedName: Database.ISeqTabInfo.NextSeqType
    isDefinition: true
    commentId: Overload:Database.ISeqTabInfo.NextSeqType
  Database.ISeqTabInfo.NextSeqId*:
    name:
      CSharp:
      - id: Database.ISeqTabInfo.NextSeqId*
        name: NextSeqId
        nameWithType: ISeqTabInfo.NextSeqId
        qualifiedName: Database.ISeqTabInfo.NextSeqId
      VB:
      - id: Database.ISeqTabInfo.NextSeqId*
        name: NextSeqId
        nameWithType: ISeqTabInfo.NextSeqId
        qualifiedName: Database.ISeqTabInfo.NextSeqId
    isDefinition: true
    commentId: Overload:Database.ISeqTabInfo.NextSeqId
  Database.ISeqTabInfo:
    name:
      CSharp:
      - id: Database.ISeqTabInfo
        name: ISeqTabInfo
        nameWithType: ISeqTabInfo
        qualifiedName: Database.ISeqTabInfo
      VB:
      - id: Database.ISeqTabInfo
        name: ISeqTabInfo
        nameWithType: ISeqTabInfo
        qualifiedName: Database.ISeqTabInfo
    isDefinition: true
    parent: Database
    commentId: T:Database.ISeqTabInfo
  Database.ISeqTabInfo.SeqType:
    name:
      CSharp:
      - id: Database.ISeqTabInfo.SeqType
        name: SeqType
        nameWithType: ISeqTabInfo.SeqType
        qualifiedName: Database.ISeqTabInfo.SeqType
      VB:
      - id: Database.ISeqTabInfo.SeqType
        name: SeqType
        nameWithType: ISeqTabInfo.SeqType
        qualifiedName: Database.ISeqTabInfo.SeqType
    isDefinition: true
    parent: Database.ISeqTabInfo
    commentId: P:Database.ISeqTabInfo.SeqType
  Database.ISeqTabInfo.NextSeqType:
    name:
      CSharp:
      - id: Database.ISeqTabInfo.NextSeqType
        name: NextSeqType
        nameWithType: ISeqTabInfo.NextSeqType
        qualifiedName: Database.ISeqTabInfo.NextSeqType
      VB:
      - id: Database.ISeqTabInfo.NextSeqType
        name: NextSeqType
        nameWithType: ISeqTabInfo.NextSeqType
        qualifiedName: Database.ISeqTabInfo.NextSeqType
    isDefinition: true
    parent: Database.ISeqTabInfo
    commentId: P:Database.ISeqTabInfo.NextSeqType
  Database.ISeqTabInfo.NextSeqId:
    name:
      CSharp:
      - id: Database.ISeqTabInfo.NextSeqId
        name: NextSeqId
        nameWithType: ISeqTabInfo.NextSeqId
        qualifiedName: Database.ISeqTabInfo.NextSeqId
      VB:
      - id: Database.ISeqTabInfo.NextSeqId
        name: NextSeqId
        nameWithType: ISeqTabInfo.NextSeqId
        qualifiedName: Database.ISeqTabInfo.NextSeqId
    isDefinition: true
    parent: Database.ISeqTabInfo
    commentId: P:Database.ISeqTabInfo.NextSeqId
  Database.ICycleSeqInfo.GetRecipeParameters*:
    name:
      CSharp:
      - id: Database.ICycleSeqInfo.GetRecipeParameters*
        name: GetRecipeParameters
        nameWithType: ICycleSeqInfo.GetRecipeParameters
        qualifiedName: Database.ICycleSeqInfo.GetRecipeParameters
      VB:
      - id: Database.ICycleSeqInfo.GetRecipeParameters*
        name: GetRecipeParameters
        nameWithType: ICycleSeqInfo.GetRecipeParameters
        qualifiedName: Database.ICycleSeqInfo.GetRecipeParameters
    isDefinition: true
    commentId: Overload:Database.ICycleSeqInfo.GetRecipeParameters
  Database.ICycleSeqInfo:
    name:
      CSharp:
      - id: Database.ICycleSeqInfo
        name: ICycleSeqInfo
        nameWithType: ICycleSeqInfo
        qualifiedName: Database.ICycleSeqInfo
      VB:
      - id: Database.ICycleSeqInfo
        name: ICycleSeqInfo
        nameWithType: ICycleSeqInfo
        qualifiedName: Database.ICycleSeqInfo
    isDefinition: true
    parent: Database
    commentId: T:Database.ICycleSeqInfo
  Database.AuditTrailInfo.#ctor*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.#ctor*
        name: AuditTrailInfo
        nameWithType: AuditTrailInfo.AuditTrailInfo
        qualifiedName: Database.AuditTrailInfo.AuditTrailInfo
      VB:
      - id: Database.AuditTrailInfo.#ctor*
        name: AuditTrailInfo
        nameWithType: AuditTrailInfo.AuditTrailInfo
        qualifiedName: Database.AuditTrailInfo.AuditTrailInfo
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.#ctor
  Database.AuditTrailInfo.TabName*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.TabName*
        name: TabName
        nameWithType: AuditTrailInfo.TabName
        qualifiedName: Database.AuditTrailInfo.TabName
      VB:
      - id: Database.AuditTrailInfo.TabName*
        name: TabName
        nameWithType: AuditTrailInfo.TabName
        qualifiedName: Database.AuditTrailInfo.TabName
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.TabName
  Database.AuditTrailInfo.Ids*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.Ids*
        name: Ids
        nameWithType: AuditTrailInfo.Ids
        qualifiedName: Database.AuditTrailInfo.Ids
      VB:
      - id: Database.AuditTrailInfo.Ids*
        name: Ids
        nameWithType: AuditTrailInfo.Ids
        qualifiedName: Database.AuditTrailInfo.Ids
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.Ids
  Database.AuditTrailInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.Descriptions*
        name: Descriptions
        nameWithType: AuditTrailInfo.Descriptions
        qualifiedName: Database.AuditTrailInfo.Descriptions
      VB:
      - id: Database.AuditTrailInfo.Descriptions*
        name: Descriptions
        nameWithType: AuditTrailInfo.Descriptions
        qualifiedName: Database.AuditTrailInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.Descriptions
  Database.AuditTrailInfo.Id*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.Id*
        name: Id
        nameWithType: AuditTrailInfo.Id
        qualifiedName: Database.AuditTrailInfo.Id
      VB:
      - id: Database.AuditTrailInfo.Id*
        name: Id
        nameWithType: AuditTrailInfo.Id
        qualifiedName: Database.AuditTrailInfo.Id
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.Id
  Database.AuditTrailInfo.DateTime*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.DateTime*
        name: DateTime
        nameWithType: AuditTrailInfo.DateTime
        qualifiedName: Database.AuditTrailInfo.DateTime
      VB:
      - id: Database.AuditTrailInfo.DateTime*
        name: DateTime
        nameWithType: AuditTrailInfo.DateTime
        qualifiedName: Database.AuditTrailInfo.DateTime
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.DateTime
  Database.IDtTabInfo.DateTime:
    name:
      CSharp:
      - id: Database.IDtTabInfo.DateTime
        name: DateTime
        nameWithType: IDtTabInfo.DateTime
        qualifiedName: Database.IDtTabInfo.DateTime
      VB:
      - id: Database.IDtTabInfo.DateTime
        name: DateTime
        nameWithType: IDtTabInfo.DateTime
        qualifiedName: Database.IDtTabInfo.DateTime
    isDefinition: true
    parent: Database.IDtTabInfo
    commentId: P:Database.IDtTabInfo.DateTime
  Database.AuditTrailInfo.Username*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.Username*
        name: Username
        nameWithType: AuditTrailInfo.Username
        qualifiedName: Database.AuditTrailInfo.Username
      VB:
      - id: Database.AuditTrailInfo.Username*
        name: Username
        nameWithType: AuditTrailInfo.Username
        qualifiedName: Database.AuditTrailInfo.Username
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.Username
  Database.AuditTrailInfo.EventType*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.EventType*
        name: EventType
        nameWithType: AuditTrailInfo.EventType
        qualifiedName: Database.AuditTrailInfo.EventType
      VB:
      - id: Database.AuditTrailInfo.EventType*
        name: EventType
        nameWithType: AuditTrailInfo.EventType
        qualifiedName: Database.AuditTrailInfo.EventType
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.EventType
  Database.AuditTrailInfo.Description*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.Description*
        name: Description
        nameWithType: AuditTrailInfo.Description
        qualifiedName: Database.AuditTrailInfo.Description
      VB:
      - id: Database.AuditTrailInfo.Description*
        name: Description
        nameWithType: AuditTrailInfo.Description
        qualifiedName: Database.AuditTrailInfo.Description
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.Description
  Database.AuditTrailInfo.ValueBefore*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.ValueBefore*
        name: ValueBefore
        nameWithType: AuditTrailInfo.ValueBefore
        qualifiedName: Database.AuditTrailInfo.ValueBefore
      VB:
      - id: Database.AuditTrailInfo.ValueBefore*
        name: ValueBefore
        nameWithType: AuditTrailInfo.ValueBefore
        qualifiedName: Database.AuditTrailInfo.ValueBefore
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.ValueBefore
  Database.AuditTrailInfo.ValueAfter*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.ValueAfter*
        name: ValueAfter
        nameWithType: AuditTrailInfo.ValueAfter
        qualifiedName: Database.AuditTrailInfo.ValueAfter
      VB:
      - id: Database.AuditTrailInfo.ValueAfter*
        name: ValueAfter
        nameWithType: AuditTrailInfo.ValueAfter
        qualifiedName: Database.AuditTrailInfo.ValueAfter
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.ValueAfter
  Database.AuditTrailInfo.Comment*:
    name:
      CSharp:
      - id: Database.AuditTrailInfo.Comment*
        name: Comment
        nameWithType: AuditTrailInfo.Comment
        qualifiedName: Database.AuditTrailInfo.Comment
      VB:
      - id: Database.AuditTrailInfo.Comment*
        name: Comment
        nameWithType: AuditTrailInfo.Comment
        qualifiedName: Database.AuditTrailInfo.Comment
    isDefinition: true
    commentId: Overload:Database.AuditTrailInfo.Comment
  Database.AuditTrailInfo:
    name:
      CSharp:
      - id: Database.AuditTrailInfo
        name: AuditTrailInfo
        nameWithType: AuditTrailInfo
        qualifiedName: Database.AuditTrailInfo
      VB:
      - id: Database.AuditTrailInfo
        name: AuditTrailInfo
        nameWithType: AuditTrailInfo
        qualifiedName: Database.AuditTrailInfo
    isDefinition: true
    commentId: T:Database.AuditTrailInfo
  Database.AccessTableInfo.#ctor*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.#ctor*
        name: AccessTableInfo
        nameWithType: AccessTableInfo.AccessTableInfo
        qualifiedName: Database.AccessTableInfo.AccessTableInfo
      VB:
      - id: Database.AccessTableInfo.#ctor*
        name: AccessTableInfo
        nameWithType: AccessTableInfo.AccessTableInfo
        qualifiedName: Database.AccessTableInfo.AccessTableInfo
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.#ctor
  Database.AccessTableInfo.TabName*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.TabName*
        name: TabName
        nameWithType: AccessTableInfo.TabName
        qualifiedName: Database.AccessTableInfo.TabName
      VB:
      - id: Database.AccessTableInfo.TabName*
        name: TabName
        nameWithType: AccessTableInfo.TabName
        qualifiedName: Database.AccessTableInfo.TabName
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.TabName
  Database.AccessTableInfo.Ids*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.Ids*
        name: Ids
        nameWithType: AccessTableInfo.Ids
        qualifiedName: Database.AccessTableInfo.Ids
      VB:
      - id: Database.AccessTableInfo.Ids*
        name: Ids
        nameWithType: AccessTableInfo.Ids
        qualifiedName: Database.AccessTableInfo.Ids
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.Ids
  Database.AccessTableInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.Descriptions*
        name: Descriptions
        nameWithType: AccessTableInfo.Descriptions
        qualifiedName: Database.AccessTableInfo.Descriptions
      VB:
      - id: Database.AccessTableInfo.Descriptions*
        name: Descriptions
        nameWithType: AccessTableInfo.Descriptions
        qualifiedName: Database.AccessTableInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.Descriptions
  Database.AccessTableInfo.Id*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.Id*
        name: Id
        nameWithType: AccessTableInfo.Id
        qualifiedName: Database.AccessTableInfo.Id
      VB:
      - id: Database.AccessTableInfo.Id*
        name: Id
        nameWithType: AccessTableInfo.Id
        qualifiedName: Database.AccessTableInfo.Id
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.Id
  Database.AccessTableInfo.Role*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.Role*
        name: Role
        nameWithType: AccessTableInfo.Role
        qualifiedName: Database.AccessTableInfo.Role
      VB:
      - id: Database.AccessTableInfo.Role*
        name: Role
        nameWithType: AccessTableInfo.Role
        qualifiedName: Database.AccessTableInfo.Role
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.Role
  Database.AccessTableInfo.CycleStart*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.CycleStart*
        name: CycleStart
        nameWithType: AccessTableInfo.CycleStart
        qualifiedName: Database.AccessTableInfo.CycleStart
      VB:
      - id: Database.AccessTableInfo.CycleStart*
        name: CycleStart
        nameWithType: AccessTableInfo.CycleStart
        qualifiedName: Database.AccessTableInfo.CycleStart
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.CycleStart
  Database.AccessTableInfo.RecipeUpdate*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.RecipeUpdate*
        name: RecipeUpdate
        nameWithType: AccessTableInfo.RecipeUpdate
        qualifiedName: Database.AccessTableInfo.RecipeUpdate
      VB:
      - id: Database.AccessTableInfo.RecipeUpdate*
        name: RecipeUpdate
        nameWithType: AccessTableInfo.RecipeUpdate
        qualifiedName: Database.AccessTableInfo.RecipeUpdate
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.RecipeUpdate
  Database.AccessTableInfo.Backup*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.Backup*
        name: Backup
        nameWithType: AccessTableInfo.Backup
        qualifiedName: Database.AccessTableInfo.Backup
      VB:
      - id: Database.AccessTableInfo.Backup*
        name: Backup
        nameWithType: AccessTableInfo.Backup
        qualifiedName: Database.AccessTableInfo.Backup
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.Backup
  Database.AccessTableInfo.Parameters*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.Parameters*
        name: Parameters
        nameWithType: AccessTableInfo.Parameters
        qualifiedName: Database.AccessTableInfo.Parameters
      VB:
      - id: Database.AccessTableInfo.Parameters*
        name: Parameters
        nameWithType: AccessTableInfo.Parameters
        qualifiedName: Database.AccessTableInfo.Parameters
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.Parameters
  Database.AccessTableInfo.DailyTest*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.DailyTest*
        name: DailyTest
        nameWithType: AccessTableInfo.DailyTest
        qualifiedName: Database.AccessTableInfo.DailyTest
      VB:
      - id: Database.AccessTableInfo.DailyTest*
        name: DailyTest
        nameWithType: AccessTableInfo.DailyTest
        qualifiedName: Database.AccessTableInfo.DailyTest
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.DailyTest
  Database.AccessTableInfo.AckAlarm*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.AckAlarm*
        name: AckAlarm
        nameWithType: AccessTableInfo.AckAlarm
        qualifiedName: Database.AccessTableInfo.AckAlarm
      VB:
      - id: Database.AccessTableInfo.AckAlarm*
        name: AckAlarm
        nameWithType: AccessTableInfo.AckAlarm
        qualifiedName: Database.AccessTableInfo.AckAlarm
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.AckAlarm
  Database.AccessTableInfo.ApplicationStop*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.ApplicationStop*
        name: ApplicationStop
        nameWithType: AccessTableInfo.ApplicationStop
        qualifiedName: Database.AccessTableInfo.ApplicationStop
      VB:
      - id: Database.AccessTableInfo.ApplicationStop*
        name: ApplicationStop
        nameWithType: AccessTableInfo.ApplicationStop
        qualifiedName: Database.AccessTableInfo.ApplicationStop
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.ApplicationStop
  Database.AccessTableInfo.OperatorRole*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.OperatorRole*
        name: OperatorRole
        nameWithType: AccessTableInfo.OperatorRole
        qualifiedName: Database.AccessTableInfo.OperatorRole
      VB:
      - id: Database.AccessTableInfo.OperatorRole*
        name: OperatorRole
        nameWithType: AccessTableInfo.OperatorRole
        qualifiedName: Database.AccessTableInfo.OperatorRole
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.OperatorRole
  Database.AccessTableInfo.SupervisorRole*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.SupervisorRole*
        name: SupervisorRole
        nameWithType: AccessTableInfo.SupervisorRole
        qualifiedName: Database.AccessTableInfo.SupervisorRole
      VB:
      - id: Database.AccessTableInfo.SupervisorRole*
        name: SupervisorRole
        nameWithType: AccessTableInfo.SupervisorRole
        qualifiedName: Database.AccessTableInfo.SupervisorRole
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.SupervisorRole
  Database.AccessTableInfo.AdministratorRole*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.AdministratorRole*
        name: AdministratorRole
        nameWithType: AccessTableInfo.AdministratorRole
        qualifiedName: Database.AccessTableInfo.AdministratorRole
      VB:
      - id: Database.AccessTableInfo.AdministratorRole*
        name: AdministratorRole
        nameWithType: AccessTableInfo.AdministratorRole
        qualifiedName: Database.AccessTableInfo.AdministratorRole
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.AdministratorRole
  Database.AccessTableInfo.NoneRole*:
    name:
      CSharp:
      - id: Database.AccessTableInfo.NoneRole*
        name: NoneRole
        nameWithType: AccessTableInfo.NoneRole
        qualifiedName: Database.AccessTableInfo.NoneRole
      VB:
      - id: Database.AccessTableInfo.NoneRole*
        name: NoneRole
        nameWithType: AccessTableInfo.NoneRole
        qualifiedName: Database.AccessTableInfo.NoneRole
    isDefinition: true
    commentId: Overload:Database.AccessTableInfo.NoneRole
  Database.AccessTableInfo:
    name:
      CSharp:
      - id: Database.AccessTableInfo
        name: AccessTableInfo
        nameWithType: AccessTableInfo
        qualifiedName: Database.AccessTableInfo
      VB:
      - id: Database.AccessTableInfo
        name: AccessTableInfo
        nameWithType: AccessTableInfo
        qualifiedName: Database.AccessTableInfo
    isDefinition: true
    commentId: T:Database.AccessTableInfo
  Database.RecipeInfo.#ctor*:
    name:
      CSharp:
      - id: Database.RecipeInfo.#ctor*
        name: RecipeInfo
        nameWithType: RecipeInfo.RecipeInfo
        qualifiedName: Database.RecipeInfo.RecipeInfo
      VB:
      - id: Database.RecipeInfo.#ctor*
        name: RecipeInfo
        nameWithType: RecipeInfo.RecipeInfo
        qualifiedName: Database.RecipeInfo.RecipeInfo
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.#ctor
  Database.RecipeInfo.TabName*:
    name:
      CSharp:
      - id: Database.RecipeInfo.TabName*
        name: TabName
        nameWithType: RecipeInfo.TabName
        qualifiedName: Database.RecipeInfo.TabName
      VB:
      - id: Database.RecipeInfo.TabName*
        name: TabName
        nameWithType: RecipeInfo.TabName
        qualifiedName: Database.RecipeInfo.TabName
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.TabName
  Database.RecipeInfo.Ids*:
    name:
      CSharp:
      - id: Database.RecipeInfo.Ids*
        name: Ids
        nameWithType: RecipeInfo.Ids
        qualifiedName: Database.RecipeInfo.Ids
      VB:
      - id: Database.RecipeInfo.Ids*
        name: Ids
        nameWithType: RecipeInfo.Ids
        qualifiedName: Database.RecipeInfo.Ids
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.Ids
  Database.RecipeInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.RecipeInfo.Descriptions*
        name: Descriptions
        nameWithType: RecipeInfo.Descriptions
        qualifiedName: Database.RecipeInfo.Descriptions
      VB:
      - id: Database.RecipeInfo.Descriptions*
        name: Descriptions
        nameWithType: RecipeInfo.Descriptions
        qualifiedName: Database.RecipeInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.Descriptions
  Database.RecipeInfo.SeqType*:
    name:
      CSharp:
      - id: Database.RecipeInfo.SeqType*
        name: SeqType
        nameWithType: RecipeInfo.SeqType
        qualifiedName: Database.RecipeInfo.SeqType
      VB:
      - id: Database.RecipeInfo.SeqType*
        name: SeqType
        nameWithType: RecipeInfo.SeqType
        qualifiedName: Database.RecipeInfo.SeqType
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.SeqType
  Database.RecipeInfo.Id*:
    name:
      CSharp:
      - id: Database.RecipeInfo.Id*
        name: Id
        nameWithType: RecipeInfo.Id
        qualifiedName: Database.RecipeInfo.Id
      VB:
      - id: Database.RecipeInfo.Id*
        name: Id
        nameWithType: RecipeInfo.Id
        qualifiedName: Database.RecipeInfo.Id
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.Id
  Database.RecipeInfo.NextSeqType*:
    name:
      CSharp:
      - id: Database.RecipeInfo.NextSeqType*
        name: NextSeqType
        nameWithType: RecipeInfo.NextSeqType
        qualifiedName: Database.RecipeInfo.NextSeqType
      VB:
      - id: Database.RecipeInfo.NextSeqType*
        name: NextSeqType
        nameWithType: RecipeInfo.NextSeqType
        qualifiedName: Database.RecipeInfo.NextSeqType
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.NextSeqType
  Database.RecipeInfo.NextSeqId*:
    name:
      CSharp:
      - id: Database.RecipeInfo.NextSeqId*
        name: NextSeqId
        nameWithType: RecipeInfo.NextSeqId
        qualifiedName: Database.RecipeInfo.NextSeqId
      VB:
      - id: Database.RecipeInfo.NextSeqId*
        name: NextSeqId
        nameWithType: RecipeInfo.NextSeqId
        qualifiedName: Database.RecipeInfo.NextSeqId
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.NextSeqId
  Database.RecipeInfo.Name*:
    name:
      CSharp:
      - id: Database.RecipeInfo.Name*
        name: Name
        nameWithType: RecipeInfo.Name
        qualifiedName: Database.RecipeInfo.Name
      VB:
      - id: Database.RecipeInfo.Name*
        name: Name
        nameWithType: RecipeInfo.Name
        qualifiedName: Database.RecipeInfo.Name
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.Name
  Database.RecipeInfo.Version*:
    name:
      CSharp:
      - id: Database.RecipeInfo.Version*
        name: Version
        nameWithType: RecipeInfo.Version
        qualifiedName: Database.RecipeInfo.Version
      VB:
      - id: Database.RecipeInfo.Version*
        name: Version
        nameWithType: RecipeInfo.Version
        qualifiedName: Database.RecipeInfo.Version
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.Version
  Database.RecipeInfo.Status*:
    name:
      CSharp:
      - id: Database.RecipeInfo.Status*
        name: Status
        nameWithType: RecipeInfo.Status
        qualifiedName: Database.RecipeInfo.Status
      VB:
      - id: Database.RecipeInfo.Status*
        name: Status
        nameWithType: RecipeInfo.Status
        qualifiedName: Database.RecipeInfo.Status
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.Status
  Database.RecipeInfo.FinaleWeightMin*:
    name:
      CSharp:
      - id: Database.RecipeInfo.FinaleWeightMin*
        name: FinaleWeightMin
        nameWithType: RecipeInfo.FinaleWeightMin
        qualifiedName: Database.RecipeInfo.FinaleWeightMin
      VB:
      - id: Database.RecipeInfo.FinaleWeightMin*
        name: FinaleWeightMin
        nameWithType: RecipeInfo.FinaleWeightMin
        qualifiedName: Database.RecipeInfo.FinaleWeightMin
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.FinaleWeightMin
  Database.RecipeInfo.FinaleWeightMax*:
    name:
      CSharp:
      - id: Database.RecipeInfo.FinaleWeightMax*
        name: FinaleWeightMax
        nameWithType: RecipeInfo.FinaleWeightMax
        qualifiedName: Database.RecipeInfo.FinaleWeightMax
      VB:
      - id: Database.RecipeInfo.FinaleWeightMax*
        name: FinaleWeightMax
        nameWithType: RecipeInfo.FinaleWeightMax
        qualifiedName: Database.RecipeInfo.FinaleWeightMax
    isDefinition: true
    commentId: Overload:Database.RecipeInfo.FinaleWeightMax
  Database.RecipeInfo:
    name:
      CSharp:
      - id: Database.RecipeInfo
        name: RecipeInfo
        nameWithType: RecipeInfo
        qualifiedName: Database.RecipeInfo
      VB:
      - id: Database.RecipeInfo
        name: RecipeInfo
        nameWithType: RecipeInfo
        qualifiedName: Database.RecipeInfo
    isDefinition: true
    commentId: T:Database.RecipeInfo
  Database.RecipeWeightInfo.#ctor*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.#ctor*
        name: RecipeWeightInfo
        nameWithType: RecipeWeightInfo.RecipeWeightInfo
        qualifiedName: Database.RecipeWeightInfo.RecipeWeightInfo
      VB:
      - id: Database.RecipeWeightInfo.#ctor*
        name: RecipeWeightInfo
        nameWithType: RecipeWeightInfo.RecipeWeightInfo
        qualifiedName: Database.RecipeWeightInfo.RecipeWeightInfo
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.#ctor
  Database.RecipeWeightInfo.TabName*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.TabName*
        name: TabName
        nameWithType: RecipeWeightInfo.TabName
        qualifiedName: Database.RecipeWeightInfo.TabName
      VB:
      - id: Database.RecipeWeightInfo.TabName*
        name: TabName
        nameWithType: RecipeWeightInfo.TabName
        qualifiedName: Database.RecipeWeightInfo.TabName
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.TabName
  Database.RecipeWeightInfo.Ids*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.Ids*
        name: Ids
        nameWithType: RecipeWeightInfo.Ids
        qualifiedName: Database.RecipeWeightInfo.Ids
      VB:
      - id: Database.RecipeWeightInfo.Ids*
        name: Ids
        nameWithType: RecipeWeightInfo.Ids
        qualifiedName: Database.RecipeWeightInfo.Ids
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.Ids
  Database.RecipeWeightInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.Descriptions*
        name: Descriptions
        nameWithType: RecipeWeightInfo.Descriptions
        qualifiedName: Database.RecipeWeightInfo.Descriptions
      VB:
      - id: Database.RecipeWeightInfo.Descriptions*
        name: Descriptions
        nameWithType: RecipeWeightInfo.Descriptions
        qualifiedName: Database.RecipeWeightInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.Descriptions
  Database.RecipeWeightInfo.SeqType*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.SeqType*
        name: SeqType
        nameWithType: RecipeWeightInfo.SeqType
        qualifiedName: Database.RecipeWeightInfo.SeqType
      VB:
      - id: Database.RecipeWeightInfo.SeqType*
        name: SeqType
        nameWithType: RecipeWeightInfo.SeqType
        qualifiedName: Database.RecipeWeightInfo.SeqType
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.SeqType
  Database.RecipeWeightInfo.Id*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.Id*
        name: Id
        nameWithType: RecipeWeightInfo.Id
        qualifiedName: Database.RecipeWeightInfo.Id
      VB:
      - id: Database.RecipeWeightInfo.Id*
        name: Id
        nameWithType: RecipeWeightInfo.Id
        qualifiedName: Database.RecipeWeightInfo.Id
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.Id
  Database.RecipeWeightInfo.NextSeqType*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.NextSeqType*
        name: NextSeqType
        nameWithType: RecipeWeightInfo.NextSeqType
        qualifiedName: Database.RecipeWeightInfo.NextSeqType
      VB:
      - id: Database.RecipeWeightInfo.NextSeqType*
        name: NextSeqType
        nameWithType: RecipeWeightInfo.NextSeqType
        qualifiedName: Database.RecipeWeightInfo.NextSeqType
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.NextSeqType
  Database.RecipeWeightInfo.NextSeqId*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.NextSeqId*
        name: NextSeqId
        nameWithType: RecipeWeightInfo.NextSeqId
        qualifiedName: Database.RecipeWeightInfo.NextSeqId
      VB:
      - id: Database.RecipeWeightInfo.NextSeqId*
        name: NextSeqId
        nameWithType: RecipeWeightInfo.NextSeqId
        qualifiedName: Database.RecipeWeightInfo.NextSeqId
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.NextSeqId
  Database.RecipeWeightInfo.Name*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.Name*
        name: Name
        nameWithType: RecipeWeightInfo.Name
        qualifiedName: Database.RecipeWeightInfo.Name
      VB:
      - id: Database.RecipeWeightInfo.Name*
        name: Name
        nameWithType: RecipeWeightInfo.Name
        qualifiedName: Database.RecipeWeightInfo.Name
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.Name
  Database.RecipeWeightInfo.IsBarcodeUsed*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.IsBarcodeUsed*
        name: IsBarcodeUsed
        nameWithType: RecipeWeightInfo.IsBarcodeUsed
        qualifiedName: Database.RecipeWeightInfo.IsBarcodeUsed
      VB:
      - id: Database.RecipeWeightInfo.IsBarcodeUsed*
        name: IsBarcodeUsed
        nameWithType: RecipeWeightInfo.IsBarcodeUsed
        qualifiedName: Database.RecipeWeightInfo.IsBarcodeUsed
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.IsBarcodeUsed
  Database.RecipeWeightInfo.Barcode*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.Barcode*
        name: Barcode
        nameWithType: RecipeWeightInfo.Barcode
        qualifiedName: Database.RecipeWeightInfo.Barcode
      VB:
      - id: Database.RecipeWeightInfo.Barcode*
        name: Barcode
        nameWithType: RecipeWeightInfo.Barcode
        qualifiedName: Database.RecipeWeightInfo.Barcode
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.Barcode
  Database.RecipeWeightInfo.Unit*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.Unit*
        name: Unit
        nameWithType: RecipeWeightInfo.Unit
        qualifiedName: Database.RecipeWeightInfo.Unit
      VB:
      - id: Database.RecipeWeightInfo.Unit*
        name: Unit
        nameWithType: RecipeWeightInfo.Unit
        qualifiedName: Database.RecipeWeightInfo.Unit
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.Unit
  Database.RecipeWeightInfo.DecimalNumber*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.DecimalNumber*
        name: DecimalNumber
        nameWithType: RecipeWeightInfo.DecimalNumber
        qualifiedName: Database.RecipeWeightInfo.DecimalNumber
      VB:
      - id: Database.RecipeWeightInfo.DecimalNumber*
        name: DecimalNumber
        nameWithType: RecipeWeightInfo.DecimalNumber
        qualifiedName: Database.RecipeWeightInfo.DecimalNumber
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.DecimalNumber
  Database.RecipeWeightInfo.Setpoint*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.Setpoint*
        name: Setpoint
        nameWithType: RecipeWeightInfo.Setpoint
        qualifiedName: Database.RecipeWeightInfo.Setpoint
      VB:
      - id: Database.RecipeWeightInfo.Setpoint*
        name: Setpoint
        nameWithType: RecipeWeightInfo.Setpoint
        qualifiedName: Database.RecipeWeightInfo.Setpoint
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.Setpoint
  Database.RecipeWeightInfo.Criteria*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.Criteria*
        name: Criteria
        nameWithType: RecipeWeightInfo.Criteria
        qualifiedName: Database.RecipeWeightInfo.Criteria
      VB:
      - id: Database.RecipeWeightInfo.Criteria*
        name: Criteria
        nameWithType: RecipeWeightInfo.Criteria
        qualifiedName: Database.RecipeWeightInfo.Criteria
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.Criteria
  Database.RecipeWeightInfo.IsSolvent*:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo.IsSolvent*
        name: IsSolvent
        nameWithType: RecipeWeightInfo.IsSolvent
        qualifiedName: Database.RecipeWeightInfo.IsSolvent
      VB:
      - id: Database.RecipeWeightInfo.IsSolvent*
        name: IsSolvent
        nameWithType: RecipeWeightInfo.IsSolvent
        qualifiedName: Database.RecipeWeightInfo.IsSolvent
    isDefinition: true
    commentId: Overload:Database.RecipeWeightInfo.IsSolvent
  Database.RecipeWeightInfo:
    name:
      CSharp:
      - id: Database.RecipeWeightInfo
        name: RecipeWeightInfo
        nameWithType: RecipeWeightInfo
        qualifiedName: Database.RecipeWeightInfo
      VB:
      - id: Database.RecipeWeightInfo
        name: RecipeWeightInfo
        nameWithType: RecipeWeightInfo
        qualifiedName: Database.RecipeWeightInfo
    isDefinition: true
    commentId: T:Database.RecipeWeightInfo
  Database.RecipeSpeedMixerInfo.#ctor*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.#ctor*
        name: RecipeSpeedMixerInfo
        nameWithType: RecipeSpeedMixerInfo.RecipeSpeedMixerInfo
        qualifiedName: Database.RecipeSpeedMixerInfo.RecipeSpeedMixerInfo
      VB:
      - id: Database.RecipeSpeedMixerInfo.#ctor*
        name: RecipeSpeedMixerInfo
        nameWithType: RecipeSpeedMixerInfo.RecipeSpeedMixerInfo
        qualifiedName: Database.RecipeSpeedMixerInfo.RecipeSpeedMixerInfo
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.#ctor
  Database.RecipeSpeedMixerInfo.TabName*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.TabName*
        name: TabName
        nameWithType: RecipeSpeedMixerInfo.TabName
        qualifiedName: Database.RecipeSpeedMixerInfo.TabName
      VB:
      - id: Database.RecipeSpeedMixerInfo.TabName*
        name: TabName
        nameWithType: RecipeSpeedMixerInfo.TabName
        qualifiedName: Database.RecipeSpeedMixerInfo.TabName
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.TabName
  Database.RecipeSpeedMixerInfo.Ids*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.Ids*
        name: Ids
        nameWithType: RecipeSpeedMixerInfo.Ids
        qualifiedName: Database.RecipeSpeedMixerInfo.Ids
      VB:
      - id: Database.RecipeSpeedMixerInfo.Ids*
        name: Ids
        nameWithType: RecipeSpeedMixerInfo.Ids
        qualifiedName: Database.RecipeSpeedMixerInfo.Ids
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.Ids
  Database.RecipeSpeedMixerInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.Descriptions*
        name: Descriptions
        nameWithType: RecipeSpeedMixerInfo.Descriptions
        qualifiedName: Database.RecipeSpeedMixerInfo.Descriptions
      VB:
      - id: Database.RecipeSpeedMixerInfo.Descriptions*
        name: Descriptions
        nameWithType: RecipeSpeedMixerInfo.Descriptions
        qualifiedName: Database.RecipeSpeedMixerInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.Descriptions
  Database.RecipeSpeedMixerInfo.SeqType*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.SeqType*
        name: SeqType
        nameWithType: RecipeSpeedMixerInfo.SeqType
        qualifiedName: Database.RecipeSpeedMixerInfo.SeqType
      VB:
      - id: Database.RecipeSpeedMixerInfo.SeqType*
        name: SeqType
        nameWithType: RecipeSpeedMixerInfo.SeqType
        qualifiedName: Database.RecipeSpeedMixerInfo.SeqType
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.SeqType
  Database.RecipeSpeedMixerInfo.Id*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.Id*
        name: Id
        nameWithType: RecipeSpeedMixerInfo.Id
        qualifiedName: Database.RecipeSpeedMixerInfo.Id
      VB:
      - id: Database.RecipeSpeedMixerInfo.Id*
        name: Id
        nameWithType: RecipeSpeedMixerInfo.Id
        qualifiedName: Database.RecipeSpeedMixerInfo.Id
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.Id
  Database.RecipeSpeedMixerInfo.NextSeqType*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.NextSeqType*
        name: NextSeqType
        nameWithType: RecipeSpeedMixerInfo.NextSeqType
        qualifiedName: Database.RecipeSpeedMixerInfo.NextSeqType
      VB:
      - id: Database.RecipeSpeedMixerInfo.NextSeqType*
        name: NextSeqType
        nameWithType: RecipeSpeedMixerInfo.NextSeqType
        qualifiedName: Database.RecipeSpeedMixerInfo.NextSeqType
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.NextSeqType
  Database.RecipeSpeedMixerInfo.NextSeqId*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.NextSeqId*
        name: NextSeqId
        nameWithType: RecipeSpeedMixerInfo.NextSeqId
        qualifiedName: Database.RecipeSpeedMixerInfo.NextSeqId
      VB:
      - id: Database.RecipeSpeedMixerInfo.NextSeqId*
        name: NextSeqId
        nameWithType: RecipeSpeedMixerInfo.NextSeqId
        qualifiedName: Database.RecipeSpeedMixerInfo.NextSeqId
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.NextSeqId
  Database.RecipeSpeedMixerInfo.Acceleration*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.Acceleration*
        name: Acceleration
        nameWithType: RecipeSpeedMixerInfo.Acceleration
        qualifiedName: Database.RecipeSpeedMixerInfo.Acceleration
      VB:
      - id: Database.RecipeSpeedMixerInfo.Acceleration*
        name: Acceleration
        nameWithType: RecipeSpeedMixerInfo.Acceleration
        qualifiedName: Database.RecipeSpeedMixerInfo.Acceleration
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.Acceleration
  Database.RecipeSpeedMixerInfo.Deceleration*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.Deceleration*
        name: Deceleration
        nameWithType: RecipeSpeedMixerInfo.Deceleration
        qualifiedName: Database.RecipeSpeedMixerInfo.Deceleration
      VB:
      - id: Database.RecipeSpeedMixerInfo.Deceleration*
        name: Deceleration
        nameWithType: RecipeSpeedMixerInfo.Deceleration
        qualifiedName: Database.RecipeSpeedMixerInfo.Deceleration
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.Deceleration
  Database.RecipeSpeedMixerInfo.Vaccum_control*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.Vaccum_control*
        name: Vaccum_control
        nameWithType: RecipeSpeedMixerInfo.Vaccum_control
        qualifiedName: Database.RecipeSpeedMixerInfo.Vaccum_control
      VB:
      - id: Database.RecipeSpeedMixerInfo.Vaccum_control*
        name: Vaccum_control
        nameWithType: RecipeSpeedMixerInfo.Vaccum_control
        qualifiedName: Database.RecipeSpeedMixerInfo.Vaccum_control
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.Vaccum_control
  Database.RecipeSpeedMixerInfo.PressureUnit*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.PressureUnit*
        name: PressureUnit
        nameWithType: RecipeSpeedMixerInfo.PressureUnit
        qualifiedName: Database.RecipeSpeedMixerInfo.PressureUnit
      VB:
      - id: Database.RecipeSpeedMixerInfo.PressureUnit*
        name: PressureUnit
        nameWithType: RecipeSpeedMixerInfo.PressureUnit
        qualifiedName: Database.RecipeSpeedMixerInfo.PressureUnit
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.PressureUnit
  Database.RecipeSpeedMixerInfo.Coldtrap*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.Coldtrap*
        name: Coldtrap
        nameWithType: RecipeSpeedMixerInfo.Coldtrap
        qualifiedName: Database.RecipeSpeedMixerInfo.Coldtrap
      VB:
      - id: Database.RecipeSpeedMixerInfo.Coldtrap*
        name: Coldtrap
        nameWithType: RecipeSpeedMixerInfo.Coldtrap
        qualifiedName: Database.RecipeSpeedMixerInfo.Coldtrap
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.Coldtrap
  Database.RecipeSpeedMixerInfo.Speed00*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.Speed00*
        name: Speed00
        nameWithType: RecipeSpeedMixerInfo.Speed00
        qualifiedName: Database.RecipeSpeedMixerInfo.Speed00
      VB:
      - id: Database.RecipeSpeedMixerInfo.Speed00*
        name: Speed00
        nameWithType: RecipeSpeedMixerInfo.Speed00
        qualifiedName: Database.RecipeSpeedMixerInfo.Speed00
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.Speed00
  Database.RecipeSpeedMixerInfo.Time00*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.Time00*
        name: Time00
        nameWithType: RecipeSpeedMixerInfo.Time00
        qualifiedName: Database.RecipeSpeedMixerInfo.Time00
      VB:
      - id: Database.RecipeSpeedMixerInfo.Time00*
        name: Time00
        nameWithType: RecipeSpeedMixerInfo.Time00
        qualifiedName: Database.RecipeSpeedMixerInfo.Time00
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.Time00
  Database.RecipeSpeedMixerInfo.Pressure00*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.Pressure00*
        name: Pressure00
        nameWithType: RecipeSpeedMixerInfo.Pressure00
        qualifiedName: Database.RecipeSpeedMixerInfo.Pressure00
      VB:
      - id: Database.RecipeSpeedMixerInfo.Pressure00*
        name: Pressure00
        nameWithType: RecipeSpeedMixerInfo.Pressure00
        qualifiedName: Database.RecipeSpeedMixerInfo.Pressure00
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.Pressure00
  Database.RecipeSpeedMixerInfo.SpeedMin*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.SpeedMin*
        name: SpeedMin
        nameWithType: RecipeSpeedMixerInfo.SpeedMin
        qualifiedName: Database.RecipeSpeedMixerInfo.SpeedMin
      VB:
      - id: Database.RecipeSpeedMixerInfo.SpeedMin*
        name: SpeedMin
        nameWithType: RecipeSpeedMixerInfo.SpeedMin
        qualifiedName: Database.RecipeSpeedMixerInfo.SpeedMin
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.SpeedMin
  Database.RecipeSpeedMixerInfo.SpeedMax*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.SpeedMax*
        name: SpeedMax
        nameWithType: RecipeSpeedMixerInfo.SpeedMax
        qualifiedName: Database.RecipeSpeedMixerInfo.SpeedMax
      VB:
      - id: Database.RecipeSpeedMixerInfo.SpeedMax*
        name: SpeedMax
        nameWithType: RecipeSpeedMixerInfo.SpeedMax
        qualifiedName: Database.RecipeSpeedMixerInfo.SpeedMax
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.SpeedMax
  Database.RecipeSpeedMixerInfo.PressureMin*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.PressureMin*
        name: PressureMin
        nameWithType: RecipeSpeedMixerInfo.PressureMin
        qualifiedName: Database.RecipeSpeedMixerInfo.PressureMin
      VB:
      - id: Database.RecipeSpeedMixerInfo.PressureMin*
        name: PressureMin
        nameWithType: RecipeSpeedMixerInfo.PressureMin
        qualifiedName: Database.RecipeSpeedMixerInfo.PressureMin
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.PressureMin
  Database.RecipeSpeedMixerInfo.PressureMax*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.PressureMax*
        name: PressureMax
        nameWithType: RecipeSpeedMixerInfo.PressureMax
        qualifiedName: Database.RecipeSpeedMixerInfo.PressureMax
      VB:
      - id: Database.RecipeSpeedMixerInfo.PressureMax*
        name: PressureMax
        nameWithType: RecipeSpeedMixerInfo.PressureMax
        qualifiedName: Database.RecipeSpeedMixerInfo.PressureMax
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.PressureMax
  Database.RecipeSpeedMixerInfo.PUnit_Torr*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.PUnit_Torr*
        name: PUnit_Torr
        nameWithType: RecipeSpeedMixerInfo.PUnit_Torr
        qualifiedName: Database.RecipeSpeedMixerInfo.PUnit_Torr
      VB:
      - id: Database.RecipeSpeedMixerInfo.PUnit_Torr*
        name: PUnit_Torr
        nameWithType: RecipeSpeedMixerInfo.PUnit_Torr
        qualifiedName: Database.RecipeSpeedMixerInfo.PUnit_Torr
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.PUnit_Torr
  Database.RecipeSpeedMixerInfo.PUnit_mBar*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.PUnit_mBar*
        name: PUnit_mBar
        nameWithType: RecipeSpeedMixerInfo.PUnit_mBar
        qualifiedName: Database.RecipeSpeedMixerInfo.PUnit_mBar
      VB:
      - id: Database.RecipeSpeedMixerInfo.PUnit_mBar*
        name: PUnit_mBar
        nameWithType: RecipeSpeedMixerInfo.PUnit_mBar
        qualifiedName: Database.RecipeSpeedMixerInfo.PUnit_mBar
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.PUnit_mBar
  Database.RecipeSpeedMixerInfo.PUnit_inHg*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.PUnit_inHg*
        name: PUnit_inHg
        nameWithType: RecipeSpeedMixerInfo.PUnit_inHg
        qualifiedName: Database.RecipeSpeedMixerInfo.PUnit_inHg
      VB:
      - id: Database.RecipeSpeedMixerInfo.PUnit_inHg*
        name: PUnit_inHg
        nameWithType: RecipeSpeedMixerInfo.PUnit_inHg
        qualifiedName: Database.RecipeSpeedMixerInfo.PUnit_inHg
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.PUnit_inHg
  Database.RecipeSpeedMixerInfo.PUnit_PSIA*:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo.PUnit_PSIA*
        name: PUnit_PSIA
        nameWithType: RecipeSpeedMixerInfo.PUnit_PSIA
        qualifiedName: Database.RecipeSpeedMixerInfo.PUnit_PSIA
      VB:
      - id: Database.RecipeSpeedMixerInfo.PUnit_PSIA*
        name: PUnit_PSIA
        nameWithType: RecipeSpeedMixerInfo.PUnit_PSIA
        qualifiedName: Database.RecipeSpeedMixerInfo.PUnit_PSIA
    isDefinition: true
    commentId: Overload:Database.RecipeSpeedMixerInfo.PUnit_PSIA
  Database.RecipeSpeedMixerInfo:
    name:
      CSharp:
      - id: Database.RecipeSpeedMixerInfo
        name: RecipeSpeedMixerInfo
        nameWithType: RecipeSpeedMixerInfo
        qualifiedName: Database.RecipeSpeedMixerInfo
      VB:
      - id: Database.RecipeSpeedMixerInfo
        name: RecipeSpeedMixerInfo
        nameWithType: RecipeSpeedMixerInfo
        qualifiedName: Database.RecipeSpeedMixerInfo
    isDefinition: true
    commentId: T:Database.RecipeSpeedMixerInfo
  Database.CycleTableInfo.#ctor*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.#ctor*
        name: CycleTableInfo
        nameWithType: CycleTableInfo.CycleTableInfo
        qualifiedName: Database.CycleTableInfo.CycleTableInfo
      VB:
      - id: Database.CycleTableInfo.#ctor*
        name: CycleTableInfo
        nameWithType: CycleTableInfo.CycleTableInfo
        qualifiedName: Database.CycleTableInfo.CycleTableInfo
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.#ctor
  Database.CycleTableInfo.TabName*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.TabName*
        name: TabName
        nameWithType: CycleTableInfo.TabName
        qualifiedName: Database.CycleTableInfo.TabName
      VB:
      - id: Database.CycleTableInfo.TabName*
        name: TabName
        nameWithType: CycleTableInfo.TabName
        qualifiedName: Database.CycleTableInfo.TabName
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.TabName
  Database.CycleTableInfo.Ids*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.Ids*
        name: Ids
        nameWithType: CycleTableInfo.Ids
        qualifiedName: Database.CycleTableInfo.Ids
      VB:
      - id: Database.CycleTableInfo.Ids*
        name: Ids
        nameWithType: CycleTableInfo.Ids
        qualifiedName: Database.CycleTableInfo.Ids
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.Ids
  Database.CycleTableInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.Descriptions*
        name: Descriptions
        nameWithType: CycleTableInfo.Descriptions
        qualifiedName: Database.CycleTableInfo.Descriptions
      VB:
      - id: Database.CycleTableInfo.Descriptions*
        name: Descriptions
        nameWithType: CycleTableInfo.Descriptions
        qualifiedName: Database.CycleTableInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.Descriptions
  Database.CycleTableInfo.SeqType*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.SeqType*
        name: SeqType
        nameWithType: CycleTableInfo.SeqType
        qualifiedName: Database.CycleTableInfo.SeqType
      VB:
      - id: Database.CycleTableInfo.SeqType*
        name: SeqType
        nameWithType: CycleTableInfo.SeqType
        qualifiedName: Database.CycleTableInfo.SeqType
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.SeqType
  Database.CycleTableInfo.Id*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.Id*
        name: Id
        nameWithType: CycleTableInfo.Id
        qualifiedName: Database.CycleTableInfo.Id
      VB:
      - id: Database.CycleTableInfo.Id*
        name: Id
        nameWithType: CycleTableInfo.Id
        qualifiedName: Database.CycleTableInfo.Id
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.Id
  Database.CycleTableInfo.NextSeqType*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.NextSeqType*
        name: NextSeqType
        nameWithType: CycleTableInfo.NextSeqType
        qualifiedName: Database.CycleTableInfo.NextSeqType
      VB:
      - id: Database.CycleTableInfo.NextSeqType*
        name: NextSeqType
        nameWithType: CycleTableInfo.NextSeqType
        qualifiedName: Database.CycleTableInfo.NextSeqType
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.NextSeqType
  Database.CycleTableInfo.NextSeqId*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.NextSeqId*
        name: NextSeqId
        nameWithType: CycleTableInfo.NextSeqId
        qualifiedName: Database.CycleTableInfo.NextSeqId
      VB:
      - id: Database.CycleTableInfo.NextSeqId*
        name: NextSeqId
        nameWithType: CycleTableInfo.NextSeqId
        qualifiedName: Database.CycleTableInfo.NextSeqId
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.NextSeqId
  Database.CycleTableInfo.JobNumber*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.JobNumber*
        name: JobNumber
        nameWithType: CycleTableInfo.JobNumber
        qualifiedName: Database.CycleTableInfo.JobNumber
      VB:
      - id: Database.CycleTableInfo.JobNumber*
        name: JobNumber
        nameWithType: CycleTableInfo.JobNumber
        qualifiedName: Database.CycleTableInfo.JobNumber
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.JobNumber
  Database.CycleTableInfo.BatchNumber*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.BatchNumber*
        name: BatchNumber
        nameWithType: CycleTableInfo.BatchNumber
        qualifiedName: Database.CycleTableInfo.BatchNumber
      VB:
      - id: Database.CycleTableInfo.BatchNumber*
        name: BatchNumber
        nameWithType: CycleTableInfo.BatchNumber
        qualifiedName: Database.CycleTableInfo.BatchNumber
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.BatchNumber
  Database.CycleTableInfo.FinalWeight*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.FinalWeight*
        name: FinalWeight
        nameWithType: CycleTableInfo.FinalWeight
        qualifiedName: Database.CycleTableInfo.FinalWeight
      VB:
      - id: Database.CycleTableInfo.FinalWeight*
        name: FinalWeight
        nameWithType: CycleTableInfo.FinalWeight
        qualifiedName: Database.CycleTableInfo.FinalWeight
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.FinalWeight
  Database.CycleTableInfo.FinalWeightUnit*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.FinalWeightUnit*
        name: FinalWeightUnit
        nameWithType: CycleTableInfo.FinalWeightUnit
        qualifiedName: Database.CycleTableInfo.FinalWeightUnit
      VB:
      - id: Database.CycleTableInfo.FinalWeightUnit*
        name: FinalWeightUnit
        nameWithType: CycleTableInfo.FinalWeightUnit
        qualifiedName: Database.CycleTableInfo.FinalWeightUnit
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.FinalWeightUnit
  Database.CycleTableInfo.ItemNumber*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.ItemNumber*
        name: ItemNumber
        nameWithType: CycleTableInfo.ItemNumber
        qualifiedName: Database.CycleTableInfo.ItemNumber
      VB:
      - id: Database.CycleTableInfo.ItemNumber*
        name: ItemNumber
        nameWithType: CycleTableInfo.ItemNumber
        qualifiedName: Database.CycleTableInfo.ItemNumber
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.ItemNumber
  Database.CycleTableInfo.RecipeName*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.RecipeName*
        name: RecipeName
        nameWithType: CycleTableInfo.RecipeName
        qualifiedName: Database.CycleTableInfo.RecipeName
      VB:
      - id: Database.CycleTableInfo.RecipeName*
        name: RecipeName
        nameWithType: CycleTableInfo.RecipeName
        qualifiedName: Database.CycleTableInfo.RecipeName
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.RecipeName
  Database.CycleTableInfo.RecipeVersion*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.RecipeVersion*
        name: RecipeVersion
        nameWithType: CycleTableInfo.RecipeVersion
        qualifiedName: Database.CycleTableInfo.RecipeVersion
      VB:
      - id: Database.CycleTableInfo.RecipeVersion*
        name: RecipeVersion
        nameWithType: CycleTableInfo.RecipeVersion
        qualifiedName: Database.CycleTableInfo.RecipeVersion
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.RecipeVersion
  Database.CycleTableInfo.EquipmentName*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.EquipmentName*
        name: EquipmentName
        nameWithType: CycleTableInfo.EquipmentName
        qualifiedName: Database.CycleTableInfo.EquipmentName
      VB:
      - id: Database.CycleTableInfo.EquipmentName*
        name: EquipmentName
        nameWithType: CycleTableInfo.EquipmentName
        qualifiedName: Database.CycleTableInfo.EquipmentName
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.EquipmentName
  Database.CycleTableInfo.DateTimeStartCycle*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.DateTimeStartCycle*
        name: DateTimeStartCycle
        nameWithType: CycleTableInfo.DateTimeStartCycle
        qualifiedName: Database.CycleTableInfo.DateTimeStartCycle
      VB:
      - id: Database.CycleTableInfo.DateTimeStartCycle*
        name: DateTimeStartCycle
        nameWithType: CycleTableInfo.DateTimeStartCycle
        qualifiedName: Database.CycleTableInfo.DateTimeStartCycle
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.DateTimeStartCycle
  Database.CycleTableInfo.DateTimeEndCycle*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.DateTimeEndCycle*
        name: DateTimeEndCycle
        nameWithType: CycleTableInfo.DateTimeEndCycle
        qualifiedName: Database.CycleTableInfo.DateTimeEndCycle
      VB:
      - id: Database.CycleTableInfo.DateTimeEndCycle*
        name: DateTimeEndCycle
        nameWithType: CycleTableInfo.DateTimeEndCycle
        qualifiedName: Database.CycleTableInfo.DateTimeEndCycle
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.DateTimeEndCycle
  Database.CycleTableInfo.Username*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.Username*
        name: Username
        nameWithType: CycleTableInfo.Username
        qualifiedName: Database.CycleTableInfo.Username
      VB:
      - id: Database.CycleTableInfo.Username*
        name: Username
        nameWithType: CycleTableInfo.Username
        qualifiedName: Database.CycleTableInfo.Username
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.Username
  Database.CycleTableInfo.FirstAlarmId*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.FirstAlarmId*
        name: FirstAlarmId
        nameWithType: CycleTableInfo.FirstAlarmId
        qualifiedName: Database.CycleTableInfo.FirstAlarmId
      VB:
      - id: Database.CycleTableInfo.FirstAlarmId*
        name: FirstAlarmId
        nameWithType: CycleTableInfo.FirstAlarmId
        qualifiedName: Database.CycleTableInfo.FirstAlarmId
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.FirstAlarmId
  Database.CycleTableInfo.LastAlarmId*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.LastAlarmId*
        name: LastAlarmId
        nameWithType: CycleTableInfo.LastAlarmId
        qualifiedName: Database.CycleTableInfo.LastAlarmId
      VB:
      - id: Database.CycleTableInfo.LastAlarmId*
        name: LastAlarmId
        nameWithType: CycleTableInfo.LastAlarmId
        qualifiedName: Database.CycleTableInfo.LastAlarmId
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.LastAlarmId
  Database.CycleTableInfo.Comment*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.Comment*
        name: Comment
        nameWithType: CycleTableInfo.Comment
        qualifiedName: Database.CycleTableInfo.Comment
      VB:
      - id: Database.CycleTableInfo.Comment*
        name: Comment
        nameWithType: CycleTableInfo.Comment
        qualifiedName: Database.CycleTableInfo.Comment
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.Comment
  Database.CycleTableInfo.IsItATest*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.IsItATest*
        name: IsItATest
        nameWithType: CycleTableInfo.IsItATest
        qualifiedName: Database.CycleTableInfo.IsItATest
      VB:
      - id: Database.CycleTableInfo.IsItATest*
        name: IsItATest
        nameWithType: CycleTableInfo.IsItATest
        qualifiedName: Database.CycleTableInfo.IsItATest
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.IsItATest
  Database.CycleTableInfo.bowlWeight*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.bowlWeight*
        name: bowlWeight
        nameWithType: CycleTableInfo.bowlWeight
        qualifiedName: Database.CycleTableInfo.bowlWeight
      VB:
      - id: Database.CycleTableInfo.bowlWeight*
        name: bowlWeight
        nameWithType: CycleTableInfo.bowlWeight
        qualifiedName: Database.CycleTableInfo.bowlWeight
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.bowlWeight
  Database.CycleTableInfo.lastWeightTh*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.lastWeightTh*
        name: lastWeightTh
        nameWithType: CycleTableInfo.lastWeightTh
        qualifiedName: Database.CycleTableInfo.lastWeightTh
      VB:
      - id: Database.CycleTableInfo.lastWeightTh*
        name: lastWeightTh
        nameWithType: CycleTableInfo.lastWeightTh
        qualifiedName: Database.CycleTableInfo.lastWeightTh
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.lastWeightTh
  Database.CycleTableInfo.lastWeightEff*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.lastWeightEff*
        name: lastWeightEff
        nameWithType: CycleTableInfo.lastWeightEff
        qualifiedName: Database.CycleTableInfo.lastWeightEff
      VB:
      - id: Database.CycleTableInfo.lastWeightEff*
        name: lastWeightEff
        nameWithType: CycleTableInfo.lastWeightEff
        qualifiedName: Database.CycleTableInfo.lastWeightEff
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.lastWeightEff
  Database.CycleTableInfo.DateTime*:
    name:
      CSharp:
      - id: Database.CycleTableInfo.DateTime*
        name: DateTime
        nameWithType: CycleTableInfo.DateTime
        qualifiedName: Database.CycleTableInfo.DateTime
      VB:
      - id: Database.CycleTableInfo.DateTime*
        name: DateTime
        nameWithType: CycleTableInfo.DateTime
        qualifiedName: Database.CycleTableInfo.DateTime
    isDefinition: true
    commentId: Overload:Database.CycleTableInfo.DateTime
  Database.CycleTableInfo:
    name:
      CSharp:
      - id: Database.CycleTableInfo
        name: CycleTableInfo
        nameWithType: CycleTableInfo
        qualifiedName: Database.CycleTableInfo
      VB:
      - id: Database.CycleTableInfo
        name: CycleTableInfo
        nameWithType: CycleTableInfo
        qualifiedName: Database.CycleTableInfo
    isDefinition: true
    commentId: T:Database.CycleTableInfo
  Database.CycleWeightInfo.#ctor*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.#ctor*
        name: CycleWeightInfo
        nameWithType: CycleWeightInfo.CycleWeightInfo
        qualifiedName: Database.CycleWeightInfo.CycleWeightInfo
      VB:
      - id: Database.CycleWeightInfo.#ctor*
        name: CycleWeightInfo
        nameWithType: CycleWeightInfo.CycleWeightInfo
        qualifiedName: Database.CycleWeightInfo.CycleWeightInfo
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.#ctor
  Database.CycleWeightInfo.TabName*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.TabName*
        name: TabName
        nameWithType: CycleWeightInfo.TabName
        qualifiedName: Database.CycleWeightInfo.TabName
      VB:
      - id: Database.CycleWeightInfo.TabName*
        name: TabName
        nameWithType: CycleWeightInfo.TabName
        qualifiedName: Database.CycleWeightInfo.TabName
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.TabName
  Database.CycleWeightInfo.Ids*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.Ids*
        name: Ids
        nameWithType: CycleWeightInfo.Ids
        qualifiedName: Database.CycleWeightInfo.Ids
      VB:
      - id: Database.CycleWeightInfo.Ids*
        name: Ids
        nameWithType: CycleWeightInfo.Ids
        qualifiedName: Database.CycleWeightInfo.Ids
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.Ids
  Database.CycleWeightInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.Descriptions*
        name: Descriptions
        nameWithType: CycleWeightInfo.Descriptions
        qualifiedName: Database.CycleWeightInfo.Descriptions
      VB:
      - id: Database.CycleWeightInfo.Descriptions*
        name: Descriptions
        nameWithType: CycleWeightInfo.Descriptions
        qualifiedName: Database.CycleWeightInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.Descriptions
  Database.CycleWeightInfo.SeqType*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.SeqType*
        name: SeqType
        nameWithType: CycleWeightInfo.SeqType
        qualifiedName: Database.CycleWeightInfo.SeqType
      VB:
      - id: Database.CycleWeightInfo.SeqType*
        name: SeqType
        nameWithType: CycleWeightInfo.SeqType
        qualifiedName: Database.CycleWeightInfo.SeqType
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.SeqType
  Database.CycleWeightInfo.Id*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.Id*
        name: Id
        nameWithType: CycleWeightInfo.Id
        qualifiedName: Database.CycleWeightInfo.Id
      VB:
      - id: Database.CycleWeightInfo.Id*
        name: Id
        nameWithType: CycleWeightInfo.Id
        qualifiedName: Database.CycleWeightInfo.Id
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.Id
  Database.CycleWeightInfo.NextSeqType*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.NextSeqType*
        name: NextSeqType
        nameWithType: CycleWeightInfo.NextSeqType
        qualifiedName: Database.CycleWeightInfo.NextSeqType
      VB:
      - id: Database.CycleWeightInfo.NextSeqType*
        name: NextSeqType
        nameWithType: CycleWeightInfo.NextSeqType
        qualifiedName: Database.CycleWeightInfo.NextSeqType
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.NextSeqType
  Database.CycleWeightInfo.NextSeqId*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.NextSeqId*
        name: NextSeqId
        nameWithType: CycleWeightInfo.NextSeqId
        qualifiedName: Database.CycleWeightInfo.NextSeqId
      VB:
      - id: Database.CycleWeightInfo.NextSeqId*
        name: NextSeqId
        nameWithType: CycleWeightInfo.NextSeqId
        qualifiedName: Database.CycleWeightInfo.NextSeqId
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.NextSeqId
  Database.CycleWeightInfo.Product*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.Product*
        name: Product
        nameWithType: CycleWeightInfo.Product
        qualifiedName: Database.CycleWeightInfo.Product
      VB:
      - id: Database.CycleWeightInfo.Product*
        name: Product
        nameWithType: CycleWeightInfo.Product
        qualifiedName: Database.CycleWeightInfo.Product
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.Product
  Database.CycleWeightInfo.WasWeightManual*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.WasWeightManual*
        name: WasWeightManual
        nameWithType: CycleWeightInfo.WasWeightManual
        qualifiedName: Database.CycleWeightInfo.WasWeightManual
      VB:
      - id: Database.CycleWeightInfo.WasWeightManual*
        name: WasWeightManual
        nameWithType: CycleWeightInfo.WasWeightManual
        qualifiedName: Database.CycleWeightInfo.WasWeightManual
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.WasWeightManual
  Database.CycleWeightInfo.DateTime*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.DateTime*
        name: DateTime
        nameWithType: CycleWeightInfo.DateTime
        qualifiedName: Database.CycleWeightInfo.DateTime
      VB:
      - id: Database.CycleWeightInfo.DateTime*
        name: DateTime
        nameWithType: CycleWeightInfo.DateTime
        qualifiedName: Database.CycleWeightInfo.DateTime
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.DateTime
  Database.CycleWeightInfo.ActualValue*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.ActualValue*
        name: ActualValue
        nameWithType: CycleWeightInfo.ActualValue
        qualifiedName: Database.CycleWeightInfo.ActualValue
      VB:
      - id: Database.CycleWeightInfo.ActualValue*
        name: ActualValue
        nameWithType: CycleWeightInfo.ActualValue
        qualifiedName: Database.CycleWeightInfo.ActualValue
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.ActualValue
  Database.CycleWeightInfo.Setpoint*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.Setpoint*
        name: Setpoint
        nameWithType: CycleWeightInfo.Setpoint
        qualifiedName: Database.CycleWeightInfo.Setpoint
      VB:
      - id: Database.CycleWeightInfo.Setpoint*
        name: Setpoint
        nameWithType: CycleWeightInfo.Setpoint
        qualifiedName: Database.CycleWeightInfo.Setpoint
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.Setpoint
  Database.CycleWeightInfo.Min*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.Min*
        name: Min
        nameWithType: CycleWeightInfo.Min
        qualifiedName: Database.CycleWeightInfo.Min
      VB:
      - id: Database.CycleWeightInfo.Min*
        name: Min
        nameWithType: CycleWeightInfo.Min
        qualifiedName: Database.CycleWeightInfo.Min
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.Min
  Database.CycleWeightInfo.Max*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.Max*
        name: Max
        nameWithType: CycleWeightInfo.Max
        qualifiedName: Database.CycleWeightInfo.Max
      VB:
      - id: Database.CycleWeightInfo.Max*
        name: Max
        nameWithType: CycleWeightInfo.Max
        qualifiedName: Database.CycleWeightInfo.Max
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.Max
  Database.CycleWeightInfo.Unit*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.Unit*
        name: Unit
        nameWithType: CycleWeightInfo.Unit
        qualifiedName: Database.CycleWeightInfo.Unit
      VB:
      - id: Database.CycleWeightInfo.Unit*
        name: Unit
        nameWithType: CycleWeightInfo.Unit
        qualifiedName: Database.CycleWeightInfo.Unit
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.Unit
  Database.CycleWeightInfo.DecimalNumber*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.DecimalNumber*
        name: DecimalNumber
        nameWithType: CycleWeightInfo.DecimalNumber
        qualifiedName: Database.CycleWeightInfo.DecimalNumber
      VB:
      - id: Database.CycleWeightInfo.DecimalNumber*
        name: DecimalNumber
        nameWithType: CycleWeightInfo.DecimalNumber
        qualifiedName: Database.CycleWeightInfo.DecimalNumber
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.DecimalNumber
  Database.CycleWeightInfo.IsSolvent*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.IsSolvent*
        name: IsSolvent
        nameWithType: CycleWeightInfo.IsSolvent
        qualifiedName: Database.CycleWeightInfo.IsSolvent
      VB:
      - id: Database.CycleWeightInfo.IsSolvent*
        name: IsSolvent
        nameWithType: CycleWeightInfo.IsSolvent
        qualifiedName: Database.CycleWeightInfo.IsSolvent
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.IsSolvent
  Database.CycleWeightInfo.GetRecipeParameters*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.GetRecipeParameters*
        name: GetRecipeParameters
        nameWithType: CycleWeightInfo.GetRecipeParameters
        qualifiedName: Database.CycleWeightInfo.GetRecipeParameters
      VB:
      - id: Database.CycleWeightInfo.GetRecipeParameters*
        name: GetRecipeParameters
        nameWithType: CycleWeightInfo.GetRecipeParameters
        qualifiedName: Database.CycleWeightInfo.GetRecipeParameters
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.GetRecipeParameters
  Database.ICycleSeqInfo.GetRecipeParameters(System.Object[],System.Int32):
    name:
      CSharp:
      - id: Database.ICycleSeqInfo.GetRecipeParameters(System.Object[],System.Int32)
        name: GetRecipeParameters
        nameWithType: ICycleSeqInfo.GetRecipeParameters
        qualifiedName: Database.ICycleSeqInfo.GetRecipeParameters
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Database.ICycleSeqInfo.GetRecipeParameters(System.Object[],System.Int32)
        name: GetRecipeParameters
        nameWithType: ICycleSeqInfo.GetRecipeParameters
        qualifiedName: Database.ICycleSeqInfo.GetRecipeParameters
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Database.ICycleSeqInfo
    commentId: M:Database.ICycleSeqInfo.GetRecipeParameters(System.Object[],System.Int32)
  System.Decimal:
    name:
      CSharp:
      - id: System.Decimal
        name: Decimal
        nameWithType: Decimal
        qualifiedName: System.Decimal
        isExternal: true
      VB:
      - id: System.Decimal
        name: Decimal
        nameWithType: Decimal
        qualifiedName: System.Decimal
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Decimal
  Database.CycleWeightInfo.GetMin*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.GetMin*
        name: GetMin
        nameWithType: CycleWeightInfo.GetMin
        qualifiedName: Database.CycleWeightInfo.GetMin
      VB:
      - id: Database.CycleWeightInfo.GetMin*
        name: GetMin
        nameWithType: CycleWeightInfo.GetMin
        qualifiedName: Database.CycleWeightInfo.GetMin
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.GetMin
  Database.CycleWeightInfo.GetMax*:
    name:
      CSharp:
      - id: Database.CycleWeightInfo.GetMax*
        name: GetMax
        nameWithType: CycleWeightInfo.GetMax
        qualifiedName: Database.CycleWeightInfo.GetMax
      VB:
      - id: Database.CycleWeightInfo.GetMax*
        name: GetMax
        nameWithType: CycleWeightInfo.GetMax
        qualifiedName: Database.CycleWeightInfo.GetMax
    isDefinition: true
    commentId: Overload:Database.CycleWeightInfo.GetMax
  Database.CycleWeightInfo:
    name:
      CSharp:
      - id: Database.CycleWeightInfo
        name: CycleWeightInfo
        nameWithType: CycleWeightInfo
        qualifiedName: Database.CycleWeightInfo
      VB:
      - id: Database.CycleWeightInfo
        name: CycleWeightInfo
        nameWithType: CycleWeightInfo
        qualifiedName: Database.CycleWeightInfo
    isDefinition: true
    commentId: T:Database.CycleWeightInfo
  Database.CycleSpeedMixerInfo.#ctor*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.#ctor*
        name: CycleSpeedMixerInfo
        nameWithType: CycleSpeedMixerInfo.CycleSpeedMixerInfo
        qualifiedName: Database.CycleSpeedMixerInfo.CycleSpeedMixerInfo
      VB:
      - id: Database.CycleSpeedMixerInfo.#ctor*
        name: CycleSpeedMixerInfo
        nameWithType: CycleSpeedMixerInfo.CycleSpeedMixerInfo
        qualifiedName: Database.CycleSpeedMixerInfo.CycleSpeedMixerInfo
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.#ctor
  Database.CycleSpeedMixerInfo.TabName*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.TabName*
        name: TabName
        nameWithType: CycleSpeedMixerInfo.TabName
        qualifiedName: Database.CycleSpeedMixerInfo.TabName
      VB:
      - id: Database.CycleSpeedMixerInfo.TabName*
        name: TabName
        nameWithType: CycleSpeedMixerInfo.TabName
        qualifiedName: Database.CycleSpeedMixerInfo.TabName
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.TabName
  Database.CycleSpeedMixerInfo.Ids*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.Ids*
        name: Ids
        nameWithType: CycleSpeedMixerInfo.Ids
        qualifiedName: Database.CycleSpeedMixerInfo.Ids
      VB:
      - id: Database.CycleSpeedMixerInfo.Ids*
        name: Ids
        nameWithType: CycleSpeedMixerInfo.Ids
        qualifiedName: Database.CycleSpeedMixerInfo.Ids
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.Ids
  Database.CycleSpeedMixerInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.Descriptions*
        name: Descriptions
        nameWithType: CycleSpeedMixerInfo.Descriptions
        qualifiedName: Database.CycleSpeedMixerInfo.Descriptions
      VB:
      - id: Database.CycleSpeedMixerInfo.Descriptions*
        name: Descriptions
        nameWithType: CycleSpeedMixerInfo.Descriptions
        qualifiedName: Database.CycleSpeedMixerInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.Descriptions
  Database.CycleSpeedMixerInfo.SeqType*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.SeqType*
        name: SeqType
        nameWithType: CycleSpeedMixerInfo.SeqType
        qualifiedName: Database.CycleSpeedMixerInfo.SeqType
      VB:
      - id: Database.CycleSpeedMixerInfo.SeqType*
        name: SeqType
        nameWithType: CycleSpeedMixerInfo.SeqType
        qualifiedName: Database.CycleSpeedMixerInfo.SeqType
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.SeqType
  Database.CycleSpeedMixerInfo.Id*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.Id*
        name: Id
        nameWithType: CycleSpeedMixerInfo.Id
        qualifiedName: Database.CycleSpeedMixerInfo.Id
      VB:
      - id: Database.CycleSpeedMixerInfo.Id*
        name: Id
        nameWithType: CycleSpeedMixerInfo.Id
        qualifiedName: Database.CycleSpeedMixerInfo.Id
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.Id
  Database.CycleSpeedMixerInfo.NextSeqType*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.NextSeqType*
        name: NextSeqType
        nameWithType: CycleSpeedMixerInfo.NextSeqType
        qualifiedName: Database.CycleSpeedMixerInfo.NextSeqType
      VB:
      - id: Database.CycleSpeedMixerInfo.NextSeqType*
        name: NextSeqType
        nameWithType: CycleSpeedMixerInfo.NextSeqType
        qualifiedName: Database.CycleSpeedMixerInfo.NextSeqType
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.NextSeqType
  Database.CycleSpeedMixerInfo.NextSeqId*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.NextSeqId*
        name: NextSeqId
        nameWithType: CycleSpeedMixerInfo.NextSeqId
        qualifiedName: Database.CycleSpeedMixerInfo.NextSeqId
      VB:
      - id: Database.CycleSpeedMixerInfo.NextSeqId*
        name: NextSeqId
        nameWithType: CycleSpeedMixerInfo.NextSeqId
        qualifiedName: Database.CycleSpeedMixerInfo.NextSeqId
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.NextSeqId
  Database.CycleSpeedMixerInfo.DateTimeStart*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.DateTimeStart*
        name: DateTimeStart
        nameWithType: CycleSpeedMixerInfo.DateTimeStart
        qualifiedName: Database.CycleSpeedMixerInfo.DateTimeStart
      VB:
      - id: Database.CycleSpeedMixerInfo.DateTimeStart*
        name: DateTimeStart
        nameWithType: CycleSpeedMixerInfo.DateTimeStart
        qualifiedName: Database.CycleSpeedMixerInfo.DateTimeStart
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.DateTimeStart
  Database.CycleSpeedMixerInfo.DateTimeEnd*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.DateTimeEnd*
        name: DateTimeEnd
        nameWithType: CycleSpeedMixerInfo.DateTimeEnd
        qualifiedName: Database.CycleSpeedMixerInfo.DateTimeEnd
      VB:
      - id: Database.CycleSpeedMixerInfo.DateTimeEnd*
        name: DateTimeEnd
        nameWithType: CycleSpeedMixerInfo.DateTimeEnd
        qualifiedName: Database.CycleSpeedMixerInfo.DateTimeEnd
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.DateTimeEnd
  Database.CycleSpeedMixerInfo.TimeSeqTh*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.TimeSeqTh*
        name: TimeSeqTh
        nameWithType: CycleSpeedMixerInfo.TimeSeqTh
        qualifiedName: Database.CycleSpeedMixerInfo.TimeSeqTh
      VB:
      - id: Database.CycleSpeedMixerInfo.TimeSeqTh*
        name: TimeSeqTh
        nameWithType: CycleSpeedMixerInfo.TimeSeqTh
        qualifiedName: Database.CycleSpeedMixerInfo.TimeSeqTh
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.TimeSeqTh
  Database.CycleSpeedMixerInfo.TimeSeqEff*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.TimeSeqEff*
        name: TimeSeqEff
        nameWithType: CycleSpeedMixerInfo.TimeSeqEff
        qualifiedName: Database.CycleSpeedMixerInfo.TimeSeqEff
      VB:
      - id: Database.CycleSpeedMixerInfo.TimeSeqEff*
        name: TimeSeqEff
        nameWithType: CycleSpeedMixerInfo.TimeSeqEff
        qualifiedName: Database.CycleSpeedMixerInfo.TimeSeqEff
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.TimeSeqEff
  Database.CycleSpeedMixerInfo.PressureUnit*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.PressureUnit*
        name: PressureUnit
        nameWithType: CycleSpeedMixerInfo.PressureUnit
        qualifiedName: Database.CycleSpeedMixerInfo.PressureUnit
      VB:
      - id: Database.CycleSpeedMixerInfo.PressureUnit*
        name: PressureUnit
        nameWithType: CycleSpeedMixerInfo.PressureUnit
        qualifiedName: Database.CycleSpeedMixerInfo.PressureUnit
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.PressureUnit
  Database.CycleSpeedMixerInfo.SpeedMin*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.SpeedMin*
        name: SpeedMin
        nameWithType: CycleSpeedMixerInfo.SpeedMin
        qualifiedName: Database.CycleSpeedMixerInfo.SpeedMin
      VB:
      - id: Database.CycleSpeedMixerInfo.SpeedMin*
        name: SpeedMin
        nameWithType: CycleSpeedMixerInfo.SpeedMin
        qualifiedName: Database.CycleSpeedMixerInfo.SpeedMin
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.SpeedMin
  Database.CycleSpeedMixerInfo.SpeedMax*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.SpeedMax*
        name: SpeedMax
        nameWithType: CycleSpeedMixerInfo.SpeedMax
        qualifiedName: Database.CycleSpeedMixerInfo.SpeedMax
      VB:
      - id: Database.CycleSpeedMixerInfo.SpeedMax*
        name: SpeedMax
        nameWithType: CycleSpeedMixerInfo.SpeedMax
        qualifiedName: Database.CycleSpeedMixerInfo.SpeedMax
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.SpeedMax
  Database.CycleSpeedMixerInfo.PressureMin*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.PressureMin*
        name: PressureMin
        nameWithType: CycleSpeedMixerInfo.PressureMin
        qualifiedName: Database.CycleSpeedMixerInfo.PressureMin
      VB:
      - id: Database.CycleSpeedMixerInfo.PressureMin*
        name: PressureMin
        nameWithType: CycleSpeedMixerInfo.PressureMin
        qualifiedName: Database.CycleSpeedMixerInfo.PressureMin
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.PressureMin
  Database.CycleSpeedMixerInfo.PressureMax*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.PressureMax*
        name: PressureMax
        nameWithType: CycleSpeedMixerInfo.PressureMax
        qualifiedName: Database.CycleSpeedMixerInfo.PressureMax
      VB:
      - id: Database.CycleSpeedMixerInfo.PressureMax*
        name: PressureMax
        nameWithType: CycleSpeedMixerInfo.PressureMax
        qualifiedName: Database.CycleSpeedMixerInfo.PressureMax
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.PressureMax
  Database.CycleSpeedMixerInfo.SpeedAvg*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.SpeedAvg*
        name: SpeedAvg
        nameWithType: CycleSpeedMixerInfo.SpeedAvg
        qualifiedName: Database.CycleSpeedMixerInfo.SpeedAvg
      VB:
      - id: Database.CycleSpeedMixerInfo.SpeedAvg*
        name: SpeedAvg
        nameWithType: CycleSpeedMixerInfo.SpeedAvg
        qualifiedName: Database.CycleSpeedMixerInfo.SpeedAvg
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.SpeedAvg
  Database.CycleSpeedMixerInfo.PressureAvg*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.PressureAvg*
        name: PressureAvg
        nameWithType: CycleSpeedMixerInfo.PressureAvg
        qualifiedName: Database.CycleSpeedMixerInfo.PressureAvg
      VB:
      - id: Database.CycleSpeedMixerInfo.PressureAvg*
        name: PressureAvg
        nameWithType: CycleSpeedMixerInfo.PressureAvg
        qualifiedName: Database.CycleSpeedMixerInfo.PressureAvg
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.PressureAvg
  Database.CycleSpeedMixerInfo.SpeedStd*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.SpeedStd*
        name: SpeedStd
        nameWithType: CycleSpeedMixerInfo.SpeedStd
        qualifiedName: Database.CycleSpeedMixerInfo.SpeedStd
      VB:
      - id: Database.CycleSpeedMixerInfo.SpeedStd*
        name: SpeedStd
        nameWithType: CycleSpeedMixerInfo.SpeedStd
        qualifiedName: Database.CycleSpeedMixerInfo.SpeedStd
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.SpeedStd
  Database.CycleSpeedMixerInfo.PressureStd*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.PressureStd*
        name: PressureStd
        nameWithType: CycleSpeedMixerInfo.PressureStd
        qualifiedName: Database.CycleSpeedMixerInfo.PressureStd
      VB:
      - id: Database.CycleSpeedMixerInfo.PressureStd*
        name: PressureStd
        nameWithType: CycleSpeedMixerInfo.PressureStd
        qualifiedName: Database.CycleSpeedMixerInfo.PressureStd
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.PressureStd
  Database.CycleSpeedMixerInfo.DateTime*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.DateTime*
        name: DateTime
        nameWithType: CycleSpeedMixerInfo.DateTime
        qualifiedName: Database.CycleSpeedMixerInfo.DateTime
      VB:
      - id: Database.CycleSpeedMixerInfo.DateTime*
        name: DateTime
        nameWithType: CycleSpeedMixerInfo.DateTime
        qualifiedName: Database.CycleSpeedMixerInfo.DateTime
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.DateTime
  Database.CycleSpeedMixerInfo.GetRecipeParameters*:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo.GetRecipeParameters*
        name: GetRecipeParameters
        nameWithType: CycleSpeedMixerInfo.GetRecipeParameters
        qualifiedName: Database.CycleSpeedMixerInfo.GetRecipeParameters
      VB:
      - id: Database.CycleSpeedMixerInfo.GetRecipeParameters*
        name: GetRecipeParameters
        nameWithType: CycleSpeedMixerInfo.GetRecipeParameters
        qualifiedName: Database.CycleSpeedMixerInfo.GetRecipeParameters
    isDefinition: true
    commentId: Overload:Database.CycleSpeedMixerInfo.GetRecipeParameters
  Database.CycleSpeedMixerInfo:
    name:
      CSharp:
      - id: Database.CycleSpeedMixerInfo
        name: CycleSpeedMixerInfo
        nameWithType: CycleSpeedMixerInfo
        qualifiedName: Database.CycleSpeedMixerInfo
      VB:
      - id: Database.CycleSpeedMixerInfo
        name: CycleSpeedMixerInfo
        nameWithType: CycleSpeedMixerInfo
        qualifiedName: Database.CycleSpeedMixerInfo
    isDefinition: true
    commentId: T:Database.CycleSpeedMixerInfo
  Database.TempInfo.#ctor*:
    name:
      CSharp:
      - id: Database.TempInfo.#ctor*
        name: TempInfo
        nameWithType: TempInfo.TempInfo
        qualifiedName: Database.TempInfo.TempInfo
      VB:
      - id: Database.TempInfo.#ctor*
        name: TempInfo
        nameWithType: TempInfo.TempInfo
        qualifiedName: Database.TempInfo.TempInfo
    isDefinition: true
    commentId: Overload:Database.TempInfo.#ctor
  Database.TempInfo.TabName*:
    name:
      CSharp:
      - id: Database.TempInfo.TabName*
        name: TabName
        nameWithType: TempInfo.TabName
        qualifiedName: Database.TempInfo.TabName
      VB:
      - id: Database.TempInfo.TabName*
        name: TabName
        nameWithType: TempInfo.TabName
        qualifiedName: Database.TempInfo.TabName
    isDefinition: true
    commentId: Overload:Database.TempInfo.TabName
  Database.TempInfo.Ids*:
    name:
      CSharp:
      - id: Database.TempInfo.Ids*
        name: Ids
        nameWithType: TempInfo.Ids
        qualifiedName: Database.TempInfo.Ids
      VB:
      - id: Database.TempInfo.Ids*
        name: Ids
        nameWithType: TempInfo.Ids
        qualifiedName: Database.TempInfo.Ids
    isDefinition: true
    commentId: Overload:Database.TempInfo.Ids
  Database.TempInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.TempInfo.Descriptions*
        name: Descriptions
        nameWithType: TempInfo.Descriptions
        qualifiedName: Database.TempInfo.Descriptions
      VB:
      - id: Database.TempInfo.Descriptions*
        name: Descriptions
        nameWithType: TempInfo.Descriptions
        qualifiedName: Database.TempInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.TempInfo.Descriptions
  Database.TempInfo.Speed*:
    name:
      CSharp:
      - id: Database.TempInfo.Speed*
        name: Speed
        nameWithType: TempInfo.Speed
        qualifiedName: Database.TempInfo.Speed
      VB:
      - id: Database.TempInfo.Speed*
        name: Speed
        nameWithType: TempInfo.Speed
        qualifiedName: Database.TempInfo.Speed
    isDefinition: true
    commentId: Overload:Database.TempInfo.Speed
  Database.TempInfo.Pressure*:
    name:
      CSharp:
      - id: Database.TempInfo.Pressure*
        name: Pressure
        nameWithType: TempInfo.Pressure
        qualifiedName: Database.TempInfo.Pressure
      VB:
      - id: Database.TempInfo.Pressure*
        name: Pressure
        nameWithType: TempInfo.Pressure
        qualifiedName: Database.TempInfo.Pressure
    isDefinition: true
    commentId: Overload:Database.TempInfo.Pressure
  Database.TempInfo:
    name:
      CSharp:
      - id: Database.TempInfo
        name: TempInfo
        nameWithType: TempInfo
        qualifiedName: Database.TempInfo
      VB:
      - id: Database.TempInfo
        name: TempInfo
        nameWithType: TempInfo
        qualifiedName: Database.TempInfo
    isDefinition: true
    commentId: T:Database.TempInfo
  Database.TempResultInfo.#ctor*:
    name:
      CSharp:
      - id: Database.TempResultInfo.#ctor*
        name: TempResultInfo
        nameWithType: TempResultInfo.TempResultInfo
        qualifiedName: Database.TempResultInfo.TempResultInfo
      VB:
      - id: Database.TempResultInfo.#ctor*
        name: TempResultInfo
        nameWithType: TempResultInfo.TempResultInfo
        qualifiedName: Database.TempResultInfo.TempResultInfo
    isDefinition: true
    commentId: Overload:Database.TempResultInfo.#ctor
  Database.TempResultInfo.TabName*:
    name:
      CSharp:
      - id: Database.TempResultInfo.TabName*
        name: TabName
        nameWithType: TempResultInfo.TabName
        qualifiedName: Database.TempResultInfo.TabName
      VB:
      - id: Database.TempResultInfo.TabName*
        name: TabName
        nameWithType: TempResultInfo.TabName
        qualifiedName: Database.TempResultInfo.TabName
    isDefinition: true
    commentId: Overload:Database.TempResultInfo.TabName
  Database.TempResultInfo.Ids*:
    name:
      CSharp:
      - id: Database.TempResultInfo.Ids*
        name: Ids
        nameWithType: TempResultInfo.Ids
        qualifiedName: Database.TempResultInfo.Ids
      VB:
      - id: Database.TempResultInfo.Ids*
        name: Ids
        nameWithType: TempResultInfo.Ids
        qualifiedName: Database.TempResultInfo.Ids
    isDefinition: true
    commentId: Overload:Database.TempResultInfo.Ids
  Database.TempResultInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.TempResultInfo.Descriptions*
        name: Descriptions
        nameWithType: TempResultInfo.Descriptions
        qualifiedName: Database.TempResultInfo.Descriptions
      VB:
      - id: Database.TempResultInfo.Descriptions*
        name: Descriptions
        nameWithType: TempResultInfo.Descriptions
        qualifiedName: Database.TempResultInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.TempResultInfo.Descriptions
  Database.TempResultInfo.SpeedAvg*:
    name:
      CSharp:
      - id: Database.TempResultInfo.SpeedAvg*
        name: SpeedAvg
        nameWithType: TempResultInfo.SpeedAvg
        qualifiedName: Database.TempResultInfo.SpeedAvg
      VB:
      - id: Database.TempResultInfo.SpeedAvg*
        name: SpeedAvg
        nameWithType: TempResultInfo.SpeedAvg
        qualifiedName: Database.TempResultInfo.SpeedAvg
    isDefinition: true
    commentId: Overload:Database.TempResultInfo.SpeedAvg
  Database.TempResultInfo.PressureAvg*:
    name:
      CSharp:
      - id: Database.TempResultInfo.PressureAvg*
        name: PressureAvg
        nameWithType: TempResultInfo.PressureAvg
        qualifiedName: Database.TempResultInfo.PressureAvg
      VB:
      - id: Database.TempResultInfo.PressureAvg*
        name: PressureAvg
        nameWithType: TempResultInfo.PressureAvg
        qualifiedName: Database.TempResultInfo.PressureAvg
    isDefinition: true
    commentId: Overload:Database.TempResultInfo.PressureAvg
  Database.TempResultInfo.SpeedStd*:
    name:
      CSharp:
      - id: Database.TempResultInfo.SpeedStd*
        name: SpeedStd
        nameWithType: TempResultInfo.SpeedStd
        qualifiedName: Database.TempResultInfo.SpeedStd
      VB:
      - id: Database.TempResultInfo.SpeedStd*
        name: SpeedStd
        nameWithType: TempResultInfo.SpeedStd
        qualifiedName: Database.TempResultInfo.SpeedStd
    isDefinition: true
    commentId: Overload:Database.TempResultInfo.SpeedStd
  Database.TempResultInfo.PressureStd*:
    name:
      CSharp:
      - id: Database.TempResultInfo.PressureStd*
        name: PressureStd
        nameWithType: TempResultInfo.PressureStd
        qualifiedName: Database.TempResultInfo.PressureStd
      VB:
      - id: Database.TempResultInfo.PressureStd*
        name: PressureStd
        nameWithType: TempResultInfo.PressureStd
        qualifiedName: Database.TempResultInfo.PressureStd
    isDefinition: true
    commentId: Overload:Database.TempResultInfo.PressureStd
  Database.TempResultInfo:
    name:
      CSharp:
      - id: Database.TempResultInfo
        name: TempResultInfo
        nameWithType: TempResultInfo
        qualifiedName: Database.TempResultInfo
      VB:
      - id: Database.TempResultInfo
        name: TempResultInfo
        nameWithType: TempResultInfo
        qualifiedName: Database.TempResultInfo
    isDefinition: true
    commentId: T:Database.TempResultInfo
  Database.DailyTestInfo.#ctor*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.#ctor*
        name: DailyTestInfo
        nameWithType: DailyTestInfo.DailyTestInfo
        qualifiedName: Database.DailyTestInfo.DailyTestInfo
      VB:
      - id: Database.DailyTestInfo.#ctor*
        name: DailyTestInfo
        nameWithType: DailyTestInfo.DailyTestInfo
        qualifiedName: Database.DailyTestInfo.DailyTestInfo
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.#ctor
  Database.DailyTestInfo.TabName*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.TabName*
        name: TabName
        nameWithType: DailyTestInfo.TabName
        qualifiedName: Database.DailyTestInfo.TabName
      VB:
      - id: Database.DailyTestInfo.TabName*
        name: TabName
        nameWithType: DailyTestInfo.TabName
        qualifiedName: Database.DailyTestInfo.TabName
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.TabName
  Database.DailyTestInfo.Ids*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Ids*
        name: Ids
        nameWithType: DailyTestInfo.Ids
        qualifiedName: Database.DailyTestInfo.Ids
      VB:
      - id: Database.DailyTestInfo.Ids*
        name: Ids
        nameWithType: DailyTestInfo.Ids
        qualifiedName: Database.DailyTestInfo.Ids
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Ids
  Database.DailyTestInfo.Descriptions*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Descriptions*
        name: Descriptions
        nameWithType: DailyTestInfo.Descriptions
        qualifiedName: Database.DailyTestInfo.Descriptions
      VB:
      - id: Database.DailyTestInfo.Descriptions*
        name: Descriptions
        nameWithType: DailyTestInfo.Descriptions
        qualifiedName: Database.DailyTestInfo.Descriptions
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Descriptions
  Database.DailyTestInfo.Id*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Id*
        name: Id
        nameWithType: DailyTestInfo.Id
        qualifiedName: Database.DailyTestInfo.Id
      VB:
      - id: Database.DailyTestInfo.Id*
        name: Id
        nameWithType: DailyTestInfo.Id
        qualifiedName: Database.DailyTestInfo.Id
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Id
  Database.DailyTestInfo.Username*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Username*
        name: Username
        nameWithType: DailyTestInfo.Username
        qualifiedName: Database.DailyTestInfo.Username
      VB:
      - id: Database.DailyTestInfo.Username*
        name: Username
        nameWithType: DailyTestInfo.Username
        qualifiedName: Database.DailyTestInfo.Username
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Username
  Database.DailyTestInfo.DateTime*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.DateTime*
        name: DateTime
        nameWithType: DailyTestInfo.DateTime
        qualifiedName: Database.DailyTestInfo.DateTime
      VB:
      - id: Database.DailyTestInfo.DateTime*
        name: DateTime
        nameWithType: DailyTestInfo.DateTime
        qualifiedName: Database.DailyTestInfo.DateTime
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.DateTime
  Database.DailyTestInfo.EquipmentName*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.EquipmentName*
        name: EquipmentName
        nameWithType: DailyTestInfo.EquipmentName
        qualifiedName: Database.DailyTestInfo.EquipmentName
      VB:
      - id: Database.DailyTestInfo.EquipmentName*
        name: EquipmentName
        nameWithType: DailyTestInfo.EquipmentName
        qualifiedName: Database.DailyTestInfo.EquipmentName
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.EquipmentName
  Database.DailyTestInfo.Setpoint1*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Setpoint1*
        name: Setpoint1
        nameWithType: DailyTestInfo.Setpoint1
        qualifiedName: Database.DailyTestInfo.Setpoint1
      VB:
      - id: Database.DailyTestInfo.Setpoint1*
        name: Setpoint1
        nameWithType: DailyTestInfo.Setpoint1
        qualifiedName: Database.DailyTestInfo.Setpoint1
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Setpoint1
  Database.DailyTestInfo.Setpoint2*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Setpoint2*
        name: Setpoint2
        nameWithType: DailyTestInfo.Setpoint2
        qualifiedName: Database.DailyTestInfo.Setpoint2
      VB:
      - id: Database.DailyTestInfo.Setpoint2*
        name: Setpoint2
        nameWithType: DailyTestInfo.Setpoint2
        qualifiedName: Database.DailyTestInfo.Setpoint2
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Setpoint2
  Database.DailyTestInfo.Setpoint3*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Setpoint3*
        name: Setpoint3
        nameWithType: DailyTestInfo.Setpoint3
        qualifiedName: Database.DailyTestInfo.Setpoint3
      VB:
      - id: Database.DailyTestInfo.Setpoint3*
        name: Setpoint3
        nameWithType: DailyTestInfo.Setpoint3
        qualifiedName: Database.DailyTestInfo.Setpoint3
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Setpoint3
  Database.DailyTestInfo.Setpoint4*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Setpoint4*
        name: Setpoint4
        nameWithType: DailyTestInfo.Setpoint4
        qualifiedName: Database.DailyTestInfo.Setpoint4
      VB:
      - id: Database.DailyTestInfo.Setpoint4*
        name: Setpoint4
        nameWithType: DailyTestInfo.Setpoint4
        qualifiedName: Database.DailyTestInfo.Setpoint4
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Setpoint4
  Database.DailyTestInfo.Measure1*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Measure1*
        name: Measure1
        nameWithType: DailyTestInfo.Measure1
        qualifiedName: Database.DailyTestInfo.Measure1
      VB:
      - id: Database.DailyTestInfo.Measure1*
        name: Measure1
        nameWithType: DailyTestInfo.Measure1
        qualifiedName: Database.DailyTestInfo.Measure1
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Measure1
  Database.DailyTestInfo.Measure2*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Measure2*
        name: Measure2
        nameWithType: DailyTestInfo.Measure2
        qualifiedName: Database.DailyTestInfo.Measure2
      VB:
      - id: Database.DailyTestInfo.Measure2*
        name: Measure2
        nameWithType: DailyTestInfo.Measure2
        qualifiedName: Database.DailyTestInfo.Measure2
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Measure2
  Database.DailyTestInfo.Measure3*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Measure3*
        name: Measure3
        nameWithType: DailyTestInfo.Measure3
        qualifiedName: Database.DailyTestInfo.Measure3
      VB:
      - id: Database.DailyTestInfo.Measure3*
        name: Measure3
        nameWithType: DailyTestInfo.Measure3
        qualifiedName: Database.DailyTestInfo.Measure3
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Measure3
  Database.DailyTestInfo.Measure4*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Measure4*
        name: Measure4
        nameWithType: DailyTestInfo.Measure4
        qualifiedName: Database.DailyTestInfo.Measure4
      VB:
      - id: Database.DailyTestInfo.Measure4*
        name: Measure4
        nameWithType: DailyTestInfo.Measure4
        qualifiedName: Database.DailyTestInfo.Measure4
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Measure4
  Database.DailyTestInfo.Status*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.Status*
        name: Status
        nameWithType: DailyTestInfo.Status
        qualifiedName: Database.DailyTestInfo.Status
      VB:
      - id: Database.DailyTestInfo.Status*
        name: Status
        nameWithType: DailyTestInfo.Status
        qualifiedName: Database.DailyTestInfo.Status
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.Status
  Database.DailyTestInfo.SamplesNumber*:
    name:
      CSharp:
      - id: Database.DailyTestInfo.SamplesNumber*
        name: SamplesNumber
        nameWithType: DailyTestInfo.SamplesNumber
        qualifiedName: Database.DailyTestInfo.SamplesNumber
      VB:
      - id: Database.DailyTestInfo.SamplesNumber*
        name: SamplesNumber
        nameWithType: DailyTestInfo.SamplesNumber
        qualifiedName: Database.DailyTestInfo.SamplesNumber
    isDefinition: true
    commentId: Overload:Database.DailyTestInfo.SamplesNumber
