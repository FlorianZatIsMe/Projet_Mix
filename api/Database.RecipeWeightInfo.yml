### YamlMime:ManagedReference
items:
- uid: Database.RecipeWeightInfo
  commentId: T:Database.RecipeWeightInfo
  id: RecipeWeightInfo
  parent: Database
  children:
  - Database.RecipeWeightInfo.#ctor
  - Database.RecipeWeightInfo.Barcode
  - Database.RecipeWeightInfo.Columns
  - Database.RecipeWeightInfo.Criteria
  - Database.RecipeWeightInfo.DecimalNumber
  - Database.RecipeWeightInfo.Id
  - Database.RecipeWeightInfo.Ids
  - Database.RecipeWeightInfo.IsBarcodeUsed
  - Database.RecipeWeightInfo.IsSolvent
  - Database.RecipeWeightInfo.Name
  - Database.RecipeWeightInfo.NextSeqId
  - Database.RecipeWeightInfo.NextSeqType
  - Database.RecipeWeightInfo.SeqType
  - Database.RecipeWeightInfo.Setpoint
  - Database.RecipeWeightInfo.TabName
  - Database.RecipeWeightInfo.Unit
  langs:
  - csharp
  - vb
  name: RecipeWeightInfo
  nameWithType: RecipeWeightInfo
  fullName: Database.RecipeWeightInfo
  type: Class
  source:
    id: RecipeWeightInfo
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 382
  assemblies:
  - Database
  namespace: Database
  summary: "\nClass containing the infomration of the recipe weight database table. The table must contain at least the following colummns: \nid, \nnextSeqType, \nnextSeqId, \nseqName, \nisBarcodeUsed, \nbarcode, \nunit, \ndecimalNumber, \nsetpoint, \nmin, \nmax\n<p>Creation revision: 001</p>\n"
  remarks: This table contains the required information to perform cycle weight sequences
  example: []
  syntax:
    content: 'public class RecipeWeightInfo : ISeqTabInfo, IComTabInfo, IBasTabInfo'
    content.vb: >-
      Public Class RecipeWeightInfo

          Implements ISeqTabInfo, IComTabInfo, IBasTabInfo
  inheritance:
  - System.Object
  implements:
  - Database.ISeqTabInfo
  - Database.IComTabInfo
  - Database.IBasTabInfo
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Database.RecipeWeightInfo.#ctor
  commentId: M:Database.RecipeWeightInfo.#ctor
  id: '#ctor'
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: RecipeWeightInfo()
  nameWithType: RecipeWeightInfo.RecipeWeightInfo()
  fullName: Database.RecipeWeightInfo.RecipeWeightInfo()
  type: Constructor
  source:
    id: .ctor
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 387
  assemblies:
  - Database
  namespace: Database
  summary: "\nSets all the variables of the class except the values of the variable Columns\n"
  example: []
  syntax:
    content: public RecipeWeightInfo()
    content.vb: Public Sub New
  overload: Database.RecipeWeightInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Database.RecipeWeightInfo.TabName
  commentId: P:Database.RecipeWeightInfo.TabName
  id: TabName
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: TabName
  nameWithType: RecipeWeightInfo.TabName
  fullName: Database.RecipeWeightInfo.TabName
  type: Property
  source:
    id: TabName
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 418
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public string TabName { get; }
    parameters: []
    return:
      type: System.String
      description: Name of the database table. From IBasTabInfo interface
    content.vb: Public ReadOnly Property TabName As String
  overload: Database.RecipeWeightInfo.TabName*
  implements:
  - Database.IBasTabInfo.TabName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.Columns
  commentId: P:Database.RecipeWeightInfo.Columns
  id: Columns
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: RecipeWeightInfo.Columns
  fullName: Database.RecipeWeightInfo.Columns
  type: Property
  source:
    id: Columns
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 421
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public List<Column> Columns { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Database.Column}
      description: Columns of the database table. From IBasTabInfo interface
    content.vb: Public Property Columns As List(Of Column)
  overload: Database.RecipeWeightInfo.Columns*
  implements:
  - Database.IBasTabInfo.Columns
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Database.RecipeWeightInfo.Ids
  commentId: P:Database.RecipeWeightInfo.Ids
  id: Ids
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: Ids
  nameWithType: RecipeWeightInfo.Ids
  fullName: Database.RecipeWeightInfo.Ids
  type: Property
  source:
    id: Ids
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 424
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public string[] Ids { get; set; }
    parameters: []
    return:
      type: System.String[]
      description: Name of the columns of the database table. From IBasTabInfo interface
    content.vb: Public Property Ids As String()
  overload: Database.RecipeWeightInfo.Ids*
  implements:
  - Database.IBasTabInfo.Ids
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Database.RecipeWeightInfo.SeqType
  commentId: P:Database.RecipeWeightInfo.SeqType
  id: SeqType
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: SeqType
  nameWithType: RecipeWeightInfo.SeqType
  fullName: Database.RecipeWeightInfo.SeqType
  type: Property
  source:
    id: SeqType
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 427
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int SeqType { get; }
    parameters: []
    return:
      type: System.Int32
      description: Identification number of the current sequential table. From ISeqTabInfo interface
    content.vb: Public ReadOnly Property SeqType As Integer
  overload: Database.RecipeWeightInfo.SeqType*
  implements:
  - Database.ISeqTabInfo.SeqType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.Id
  commentId: P:Database.RecipeWeightInfo.Id
  id: Id
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: RecipeWeightInfo.Id
  fullName: Database.RecipeWeightInfo.Id
  type: Property
  source:
    id: Id
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 430
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Id { get; }
    parameters: []
    return:
      type: System.Int32
      description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
    content.vb: Public ReadOnly Property Id As Integer
  overload: Database.RecipeWeightInfo.Id*
  implements:
  - Database.IComTabInfo.Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.NextSeqType
  commentId: P:Database.RecipeWeightInfo.NextSeqType
  id: NextSeqType
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: NextSeqType
  nameWithType: RecipeWeightInfo.NextSeqType
  fullName: Database.RecipeWeightInfo.NextSeqType
  type: Property
  source:
    id: NextSeqType
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 432
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int NextSeqType { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the next sequential type column. The type is a variable used to identify the next sequential table. From ISeqTabInfo interface
    content.vb: Public ReadOnly Property NextSeqType As Integer
  overload: Database.RecipeWeightInfo.NextSeqType*
  implements:
  - Database.ISeqTabInfo.NextSeqType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.NextSeqId
  commentId: P:Database.RecipeWeightInfo.NextSeqId
  id: NextSeqId
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: NextSeqId
  nameWithType: RecipeWeightInfo.NextSeqId
  fullName: Database.RecipeWeightInfo.NextSeqId
  type: Property
  source:
    id: NextSeqId
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 435
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int NextSeqId { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the next sequential id column. This column contains the id (see Id from IComTabInfo) of the row of the next sequential table. From ISeqTabInfo interface
    content.vb: Public ReadOnly Property NextSeqId As Integer
  overload: Database.RecipeWeightInfo.NextSeqId*
  implements:
  - Database.ISeqTabInfo.NextSeqId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.Name
  commentId: P:Database.RecipeWeightInfo.Name
  id: Name
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RecipeWeightInfo.Name
  fullName: Database.RecipeWeightInfo.Name
  type: Property
  source:
    id: Name
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 438
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Name { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the name column. This column is the name of the product to be weighted
    content.vb: Public ReadOnly Property Name As Integer
  overload: Database.RecipeWeightInfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.IsBarcodeUsed
  commentId: P:Database.RecipeWeightInfo.IsBarcodeUsed
  id: IsBarcodeUsed
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: IsBarcodeUsed
  nameWithType: RecipeWeightInfo.IsBarcodeUsed
  fullName: Database.RecipeWeightInfo.IsBarcodeUsed
  type: Property
  source:
    id: IsBarcodeUsed
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 441
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int IsBarcodeUsed { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the is barcode column. This column informs if the barcode of the product needs to be controlled during the cycle sequence
    content.vb: Public ReadOnly Property IsBarcodeUsed As Integer
  overload: Database.RecipeWeightInfo.IsBarcodeUsed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.Barcode
  commentId: P:Database.RecipeWeightInfo.Barcode
  id: Barcode
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: Barcode
  nameWithType: RecipeWeightInfo.Barcode
  fullName: Database.RecipeWeightInfo.Barcode
  type: Property
  source:
    id: Barcode
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 444
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Barcode { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the barcode column. This column contains the value of the barcode to be controlled
    content.vb: Public ReadOnly Property Barcode As Integer
  overload: Database.RecipeWeightInfo.Barcode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.Unit
  commentId: P:Database.RecipeWeightInfo.Unit
  id: Unit
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: RecipeWeightInfo.Unit
  fullName: Database.RecipeWeightInfo.Unit
  type: Property
  source:
    id: Unit
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 447
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Unit { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the unit column. This column contains the unit of the setpoint, min and max
    content.vb: Public ReadOnly Property Unit As Integer
  overload: Database.RecipeWeightInfo.Unit*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.DecimalNumber
  commentId: P:Database.RecipeWeightInfo.DecimalNumber
  id: DecimalNumber
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: DecimalNumber
  nameWithType: RecipeWeightInfo.DecimalNumber
  fullName: Database.RecipeWeightInfo.DecimalNumber
  type: Property
  source:
    id: DecimalNumber
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 450
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int DecimalNumber { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the decimal number column. This column contains the number of decimal places to be displays for the setpoint, min, max and value of the weight during the cycle sequence
    content.vb: Public ReadOnly Property DecimalNumber As Integer
  overload: Database.RecipeWeightInfo.DecimalNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.Setpoint
  commentId: P:Database.RecipeWeightInfo.Setpoint
  id: Setpoint
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: Setpoint
  nameWithType: RecipeWeightInfo.Setpoint
  fullName: Database.RecipeWeightInfo.Setpoint
  type: Property
  source:
    id: Setpoint
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 453
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Setpoint { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the setpoings column. This column contains the target weight by unit of final product
    content.vb: Public ReadOnly Property Setpoint As Integer
  overload: Database.RecipeWeightInfo.Setpoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.Criteria
  commentId: P:Database.RecipeWeightInfo.Criteria
  id: Criteria
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: Criteria
  nameWithType: RecipeWeightInfo.Criteria
  fullName: Database.RecipeWeightInfo.Criteria
  type: Property
  source:
    id: Criteria
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 456
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Criteria { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the min column. This column contains the minimum acceptable weight by unit of final product
    content.vb: Public ReadOnly Property Criteria As Integer
  overload: Database.RecipeWeightInfo.Criteria*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.RecipeWeightInfo.IsSolvent
  commentId: P:Database.RecipeWeightInfo.IsSolvent
  id: IsSolvent
  parent: Database.RecipeWeightInfo
  langs:
  - csharp
  - vb
  name: IsSolvent
  nameWithType: RecipeWeightInfo.IsSolvent
  fullName: Database.RecipeWeightInfo.IsSolvent
  type: Property
  source:
    id: IsSolvent
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 459
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int IsSolvent { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the is solvent column. This column if the product is a solvent (if it must be evaporated at the end of the cycle)
    content.vb: Public ReadOnly Property IsSolvent As Integer
  overload: Database.RecipeWeightInfo.IsSolvent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Database
  commentId: N:Database
  name: Database
  nameWithType: Database
  fullName: Database
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Database.ISeqTabInfo
  commentId: T:Database.ISeqTabInfo
  parent: Database
  name: ISeqTabInfo
  nameWithType: ISeqTabInfo
  fullName: Database.ISeqTabInfo
- uid: Database.IComTabInfo
  commentId: T:Database.IComTabInfo
  parent: Database
  name: IComTabInfo
  nameWithType: IComTabInfo
  fullName: Database.IComTabInfo
- uid: Database.IBasTabInfo
  commentId: T:Database.IBasTabInfo
  parent: Database
  name: IBasTabInfo
  nameWithType: IBasTabInfo
  fullName: Database.IBasTabInfo
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Database.RecipeWeightInfo.#ctor*
  commentId: Overload:Database.RecipeWeightInfo.#ctor
  name: RecipeWeightInfo
  nameWithType: RecipeWeightInfo.RecipeWeightInfo
  fullName: Database.RecipeWeightInfo.RecipeWeightInfo
- uid: Database.RecipeWeightInfo.TabName*
  commentId: Overload:Database.RecipeWeightInfo.TabName
  name: TabName
  nameWithType: RecipeWeightInfo.TabName
  fullName: Database.RecipeWeightInfo.TabName
- uid: Database.IBasTabInfo.TabName
  commentId: P:Database.IBasTabInfo.TabName
  parent: Database.IBasTabInfo
  name: TabName
  nameWithType: IBasTabInfo.TabName
  fullName: Database.IBasTabInfo.TabName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Database.RecipeWeightInfo.Columns*
  commentId: Overload:Database.RecipeWeightInfo.Columns
  name: Columns
  nameWithType: RecipeWeightInfo.Columns
  fullName: Database.RecipeWeightInfo.Columns
- uid: Database.IBasTabInfo.Columns
  commentId: P:Database.IBasTabInfo.Columns
  parent: Database.IBasTabInfo
  name: Columns
  nameWithType: IBasTabInfo.Columns
  fullName: Database.IBasTabInfo.Columns
- uid: System.Collections.Generic.List{Database.Column}
  commentId: T:System.Collections.Generic.List{Database.Column}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Column>
  nameWithType: List<Column>
  fullName: System.Collections.Generic.List<Database.Column>
  nameWithType.vb: List(Of Column)
  fullName.vb: System.Collections.Generic.List(Of Database.Column)
  name.vb: List(Of Column)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Database.Column
    name: Column
    nameWithType: Column
    fullName: Database.Column
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Database.Column
    name: Column
    nameWithType: Column
    fullName: Database.Column
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Database.RecipeWeightInfo.Ids*
  commentId: Overload:Database.RecipeWeightInfo.Ids
  name: Ids
  nameWithType: RecipeWeightInfo.Ids
  fullName: Database.RecipeWeightInfo.Ids
- uid: Database.IBasTabInfo.Ids
  commentId: P:Database.IBasTabInfo.Ids
  parent: Database.IBasTabInfo
  name: Ids
  nameWithType: IBasTabInfo.Ids
  fullName: Database.IBasTabInfo.Ids
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Database.RecipeWeightInfo.SeqType*
  commentId: Overload:Database.RecipeWeightInfo.SeqType
  name: SeqType
  nameWithType: RecipeWeightInfo.SeqType
  fullName: Database.RecipeWeightInfo.SeqType
- uid: Database.ISeqTabInfo.SeqType
  commentId: P:Database.ISeqTabInfo.SeqType
  parent: Database.ISeqTabInfo
  name: SeqType
  nameWithType: ISeqTabInfo.SeqType
  fullName: Database.ISeqTabInfo.SeqType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Database.RecipeWeightInfo.Id*
  commentId: Overload:Database.RecipeWeightInfo.Id
  name: Id
  nameWithType: RecipeWeightInfo.Id
  fullName: Database.RecipeWeightInfo.Id
- uid: Database.IComTabInfo.Id
  commentId: P:Database.IComTabInfo.Id
  parent: Database.IComTabInfo
  name: Id
  nameWithType: IComTabInfo.Id
  fullName: Database.IComTabInfo.Id
- uid: Database.RecipeWeightInfo.NextSeqType*
  commentId: Overload:Database.RecipeWeightInfo.NextSeqType
  name: NextSeqType
  nameWithType: RecipeWeightInfo.NextSeqType
  fullName: Database.RecipeWeightInfo.NextSeqType
- uid: Database.ISeqTabInfo.NextSeqType
  commentId: P:Database.ISeqTabInfo.NextSeqType
  parent: Database.ISeqTabInfo
  name: NextSeqType
  nameWithType: ISeqTabInfo.NextSeqType
  fullName: Database.ISeqTabInfo.NextSeqType
- uid: Database.RecipeWeightInfo.NextSeqId*
  commentId: Overload:Database.RecipeWeightInfo.NextSeqId
  name: NextSeqId
  nameWithType: RecipeWeightInfo.NextSeqId
  fullName: Database.RecipeWeightInfo.NextSeqId
- uid: Database.ISeqTabInfo.NextSeqId
  commentId: P:Database.ISeqTabInfo.NextSeqId
  parent: Database.ISeqTabInfo
  name: NextSeqId
  nameWithType: ISeqTabInfo.NextSeqId
  fullName: Database.ISeqTabInfo.NextSeqId
- uid: Database.RecipeWeightInfo.Name*
  commentId: Overload:Database.RecipeWeightInfo.Name
  name: Name
  nameWithType: RecipeWeightInfo.Name
  fullName: Database.RecipeWeightInfo.Name
- uid: Database.RecipeWeightInfo.IsBarcodeUsed*
  commentId: Overload:Database.RecipeWeightInfo.IsBarcodeUsed
  name: IsBarcodeUsed
  nameWithType: RecipeWeightInfo.IsBarcodeUsed
  fullName: Database.RecipeWeightInfo.IsBarcodeUsed
- uid: Database.RecipeWeightInfo.Barcode*
  commentId: Overload:Database.RecipeWeightInfo.Barcode
  name: Barcode
  nameWithType: RecipeWeightInfo.Barcode
  fullName: Database.RecipeWeightInfo.Barcode
- uid: Database.RecipeWeightInfo.Unit*
  commentId: Overload:Database.RecipeWeightInfo.Unit
  name: Unit
  nameWithType: RecipeWeightInfo.Unit
  fullName: Database.RecipeWeightInfo.Unit
- uid: Database.RecipeWeightInfo.DecimalNumber*
  commentId: Overload:Database.RecipeWeightInfo.DecimalNumber
  name: DecimalNumber
  nameWithType: RecipeWeightInfo.DecimalNumber
  fullName: Database.RecipeWeightInfo.DecimalNumber
- uid: Database.RecipeWeightInfo.Setpoint*
  commentId: Overload:Database.RecipeWeightInfo.Setpoint
  name: Setpoint
  nameWithType: RecipeWeightInfo.Setpoint
  fullName: Database.RecipeWeightInfo.Setpoint
- uid: Database.RecipeWeightInfo.Criteria*
  commentId: Overload:Database.RecipeWeightInfo.Criteria
  name: Criteria
  nameWithType: RecipeWeightInfo.Criteria
  fullName: Database.RecipeWeightInfo.Criteria
- uid: Database.RecipeWeightInfo.IsSolvent*
  commentId: Overload:Database.RecipeWeightInfo.IsSolvent
  name: IsSolvent
  nameWithType: RecipeWeightInfo.IsSolvent
  fullName: Database.RecipeWeightInfo.IsSolvent
