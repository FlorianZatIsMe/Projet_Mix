### YamlMime:ManagedReference
items:
- uid: Database.CycleWeightInfo
  commentId: T:Database.CycleWeightInfo
  id: CycleWeightInfo
  parent: Database
  children:
  - Database.CycleWeightInfo.#ctor
  - Database.CycleWeightInfo.ActualValue
  - Database.CycleWeightInfo.Columns
  - Database.CycleWeightInfo.DateTime
  - Database.CycleWeightInfo.DecimalNumber
  - Database.CycleWeightInfo.GetMax(Database.RecipeWeightInfo,System.Decimal)
  - Database.CycleWeightInfo.GetMin(Database.RecipeWeightInfo,System.Decimal)
  - Database.CycleWeightInfo.Id
  - Database.CycleWeightInfo.Ids
  - Database.CycleWeightInfo.IsSolvent
  - Database.CycleWeightInfo.Max
  - Database.CycleWeightInfo.Min
  - Database.CycleWeightInfo.NextSeqId
  - Database.CycleWeightInfo.NextSeqType
  - Database.CycleWeightInfo.Product
  - Database.CycleWeightInfo.SeqType
  - Database.CycleWeightInfo.Setpoint
  - Database.CycleWeightInfo.SetRecipeParameters(Database.ISeqTabInfo,System.Int32)
  - Database.CycleWeightInfo.TabName
  - Database.CycleWeightInfo.Unit
  - Database.CycleWeightInfo.WasWeightManual
  langs:
  - csharp
  - vb
  name: CycleWeightInfo
  nameWithType: CycleWeightInfo
  fullName: Database.CycleWeightInfo
  type: Class
  source:
    id: CycleWeightInfo
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 800
  assemblies:
  - Database
  namespace: Database
  summary: "\nClass containing the infomration of the cycle weight sequence database table. The table must contain at least the following colummns: \nid, \nnextSeqType, \nnextSeqId, \nproduct, \nwasWeightManual, \ndateTime, \nactualValue, \nsetpoint, \nmin, \nmax, \nunit, \ndecimalNumber\n<p>Creation revision: 001</p>\n"
  remarks: This table contains the information of the cycle weight sequences
  example: []
  syntax:
    content: 'public class CycleWeightInfo : ICycleSeqInfo, ISeqTabInfo, IComTabInfo, IBasTabInfo'
    content.vb: >-
      Public Class CycleWeightInfo

          Implements ICycleSeqInfo, ISeqTabInfo, IComTabInfo, IBasTabInfo
  inheritance:
  - System.Object
  implements:
  - Database.ICycleSeqInfo
  - Database.ISeqTabInfo
  - Database.IComTabInfo
  - Database.IBasTabInfo
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Database.CycleWeightInfo.#ctor
  commentId: M:Database.CycleWeightInfo.#ctor
  id: '#ctor'
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: CycleWeightInfo()
  nameWithType: CycleWeightInfo.CycleWeightInfo()
  fullName: Database.CycleWeightInfo.CycleWeightInfo()
  type: Constructor
  source:
    id: .ctor
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 805
  assemblies:
  - Database
  namespace: Database
  summary: "\nSets all the variables of the class except the values of the variable Columns\n"
  example: []
  syntax:
    content: public CycleWeightInfo()
    content.vb: Public Sub New
  overload: Database.CycleWeightInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Database.CycleWeightInfo.TabName
  commentId: P:Database.CycleWeightInfo.TabName
  id: TabName
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: TabName
  nameWithType: CycleWeightInfo.TabName
  fullName: Database.CycleWeightInfo.TabName
  type: Property
  source:
    id: TabName
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 840
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public string TabName { get; }
    parameters: []
    return:
      type: System.String
      description: Name of the database table. From IBasTabInfo interface
    content.vb: Public ReadOnly Property TabName As String
  overload: Database.CycleWeightInfo.TabName*
  implements:
  - Database.IBasTabInfo.TabName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.Columns
  commentId: P:Database.CycleWeightInfo.Columns
  id: Columns
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: CycleWeightInfo.Columns
  fullName: Database.CycleWeightInfo.Columns
  type: Property
  source:
    id: Columns
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 843
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public List<Column> Columns { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Database.Column}
      description: Columns of the database table. From IBasTabInfo interface
    content.vb: Public Property Columns As List(Of Column)
  overload: Database.CycleWeightInfo.Columns*
  implements:
  - Database.IBasTabInfo.Columns
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Database.CycleWeightInfo.Ids
  commentId: P:Database.CycleWeightInfo.Ids
  id: Ids
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: Ids
  nameWithType: CycleWeightInfo.Ids
  fullName: Database.CycleWeightInfo.Ids
  type: Property
  source:
    id: Ids
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 846
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public string[] Ids { get; set; }
    parameters: []
    return:
      type: System.String[]
      description: Name of the columns of the database table. From IBasTabInfo interface
    content.vb: Public Property Ids As String()
  overload: Database.CycleWeightInfo.Ids*
  implements:
  - Database.IBasTabInfo.Ids
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Database.CycleWeightInfo.SeqType
  commentId: P:Database.CycleWeightInfo.SeqType
  id: SeqType
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: SeqType
  nameWithType: CycleWeightInfo.SeqType
  fullName: Database.CycleWeightInfo.SeqType
  type: Property
  source:
    id: SeqType
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 849
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int SeqType { get; }
    parameters: []
    return:
      type: System.Int32
      description: Identification number of the current sequential table. From ISeqTabInfo interface
    content.vb: Public ReadOnly Property SeqType As Integer
  overload: Database.CycleWeightInfo.SeqType*
  implements:
  - Database.ISeqTabInfo.SeqType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.Id
  commentId: P:Database.CycleWeightInfo.Id
  id: Id
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CycleWeightInfo.Id
  fullName: Database.CycleWeightInfo.Id
  type: Property
  source:
    id: Id
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 852
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Id { get; }
    parameters: []
    return:
      type: System.Int32
      description: 'Index of the id column (usually the first one: 0). This column <code>must be</code> an integer, usually automatically incremented. From IComTabInfo interface'
    content.vb: Public ReadOnly Property Id As Integer
  overload: Database.CycleWeightInfo.Id*
  implements:
  - Database.IComTabInfo.Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.NextSeqType
  commentId: P:Database.CycleWeightInfo.NextSeqType
  id: NextSeqType
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: NextSeqType
  nameWithType: CycleWeightInfo.NextSeqType
  fullName: Database.CycleWeightInfo.NextSeqType
  type: Property
  source:
    id: NextSeqType
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 854
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int NextSeqType { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the next sequential type column. The type is a variable used to identify the next sequential table. From ISeqTabInfo interface
    content.vb: Public ReadOnly Property NextSeqType As Integer
  overload: Database.CycleWeightInfo.NextSeqType*
  implements:
  - Database.ISeqTabInfo.NextSeqType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.NextSeqId
  commentId: P:Database.CycleWeightInfo.NextSeqId
  id: NextSeqId
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: NextSeqId
  nameWithType: CycleWeightInfo.NextSeqId
  fullName: Database.CycleWeightInfo.NextSeqId
  type: Property
  source:
    id: NextSeqId
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 857
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int NextSeqId { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the next sequential id column. This column contains the id (see Id from IComTabInfo) of the row of the next sequential table. From ISeqTabInfo interface
    content.vb: Public ReadOnly Property NextSeqId As Integer
  overload: Database.CycleWeightInfo.NextSeqId*
  implements:
  - Database.ISeqTabInfo.NextSeqId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.Product
  commentId: P:Database.CycleWeightInfo.Product
  id: Product
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: Product
  nameWithType: CycleWeightInfo.Product
  fullName: Database.CycleWeightInfo.Product
  type: Property
  source:
    id: Product
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 860
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Product { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the product column. This column contains the weighted product (from the name column of the weight recipe)
    content.vb: Public ReadOnly Property Product As Integer
  overload: Database.CycleWeightInfo.Product*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.WasWeightManual
  commentId: P:Database.CycleWeightInfo.WasWeightManual
  id: WasWeightManual
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: WasWeightManual
  nameWithType: CycleWeightInfo.WasWeightManual
  fullName: Database.CycleWeightInfo.WasWeightManual
  type: Property
  source:
    id: WasWeightManual
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 863
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int WasWeightManual { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the was weight manual column. This column informs if the user entered the weighedt value manually or not
    content.vb: Public ReadOnly Property WasWeightManual As Integer
  overload: Database.CycleWeightInfo.WasWeightManual*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.DateTime
  commentId: P:Database.CycleWeightInfo.DateTime
  id: DateTime
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: DateTime
  nameWithType: CycleWeightInfo.DateTime
  fullName: Database.CycleWeightInfo.DateTime
  type: Property
  source:
    id: DateTime
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 866
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int DateTime { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the date and time column. This column contains the date and time of the weighting
    content.vb: Public ReadOnly Property DateTime As Integer
  overload: Database.CycleWeightInfo.DateTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.ActualValue
  commentId: P:Database.CycleWeightInfo.ActualValue
  id: ActualValue
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: ActualValue
  nameWithType: CycleWeightInfo.ActualValue
  fullName: Database.CycleWeightInfo.ActualValue
  type: Property
  source:
    id: ActualValue
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 869
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int ActualValue { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the weighted value column. This column contains weighted value of the product
    content.vb: Public ReadOnly Property ActualValue As Integer
  overload: Database.CycleWeightInfo.ActualValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.Setpoint
  commentId: P:Database.CycleWeightInfo.Setpoint
  id: Setpoint
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: Setpoint
  nameWithType: CycleWeightInfo.Setpoint
  fullName: Database.CycleWeightInfo.Setpoint
  type: Property
  source:
    id: Setpoint
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 872
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Setpoint { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the setpoint column. This column contains the target weight (equals basically the setpoint from the weight recipe multiplied by the final weight)
    content.vb: Public ReadOnly Property Setpoint As Integer
  overload: Database.CycleWeightInfo.Setpoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.Min
  commentId: P:Database.CycleWeightInfo.Min
  id: Min
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: Min
  nameWithType: CycleWeightInfo.Min
  fullName: Database.CycleWeightInfo.Min
  type: Property
  source:
    id: Min
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 875
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Min { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the min column. This column contains the minimum weight (equals basically the minimum from the weight recipe multiplied by the final weight)
    content.vb: Public ReadOnly Property Min As Integer
  overload: Database.CycleWeightInfo.Min*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.Max
  commentId: P:Database.CycleWeightInfo.Max
  id: Max
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: CycleWeightInfo.Max
  fullName: Database.CycleWeightInfo.Max
  type: Property
  source:
    id: Max
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 878
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Max { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the max column. This column contains the maximum weight (equals basically the maximum from the weight recipe multiplied by the final weight)
    content.vb: Public ReadOnly Property Max As Integer
  overload: Database.CycleWeightInfo.Max*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.Unit
  commentId: P:Database.CycleWeightInfo.Unit
  id: Unit
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: CycleWeightInfo.Unit
  fullName: Database.CycleWeightInfo.Unit
  type: Property
  source:
    id: Unit
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 881
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int Unit { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the unit column. This column contains the unit of the weight
    content.vb: Public ReadOnly Property Unit As Integer
  overload: Database.CycleWeightInfo.Unit*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.DecimalNumber
  commentId: P:Database.CycleWeightInfo.DecimalNumber
  id: DecimalNumber
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: DecimalNumber
  nameWithType: CycleWeightInfo.DecimalNumber
  fullName: Database.CycleWeightInfo.DecimalNumber
  type: Property
  source:
    id: DecimalNumber
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 884
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int DecimalNumber { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the decimal number column. This column contains number of decimal places to be displayed (from the weight recipe)
    content.vb: Public ReadOnly Property DecimalNumber As Integer
  overload: Database.CycleWeightInfo.DecimalNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.IsSolvent
  commentId: P:Database.CycleWeightInfo.IsSolvent
  id: IsSolvent
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: IsSolvent
  nameWithType: CycleWeightInfo.IsSolvent
  fullName: Database.CycleWeightInfo.IsSolvent
  type: Property
  source:
    id: IsSolvent
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 887
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public int IsSolvent { get; }
    parameters: []
    return:
      type: System.Int32
      description: Index of the is solvent column. This column informs if the product is a solvent (from the weight recipe)
    content.vb: Public ReadOnly Property IsSolvent As Integer
  overload: Database.CycleWeightInfo.IsSolvent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Database.CycleWeightInfo.SetRecipeParameters(Database.ISeqTabInfo,System.Int32)
  commentId: M:Database.CycleWeightInfo.SetRecipeParameters(Database.ISeqTabInfo,System.Int32)
  id: SetRecipeParameters(Database.ISeqTabInfo,System.Int32)
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: SetRecipeParameters(ISeqTabInfo, Int32)
  nameWithType: CycleWeightInfo.SetRecipeParameters(ISeqTabInfo, Int32)
  fullName: Database.CycleWeightInfo.SetRecipeParameters(Database.ISeqTabInfo, System.Int32)
  type: Method
  source:
    id: SetRecipeParameters
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 894
  assemblies:
  - Database
  namespace: Database
  summary: "\nMethod which sets the recipe information related to the weight recipe table \n"
  example: []
  syntax:
    content: public void SetRecipeParameters(ISeqTabInfo recipe, int idCycle)
    parameters:
    - id: recipe
      type: Database.ISeqTabInfo
      description: Variable containing the recipe information
    - id: idCycle
      type: System.Int32
      description: The value of the id column (see Id from IComTabInfo) of the row of the first cycle sequential table
    content.vb: Public Sub SetRecipeParameters(recipe As ISeqTabInfo, idCycle As Integer)
  overload: Database.CycleWeightInfo.SetRecipeParameters*
  implements:
  - Database.ICycleSeqInfo.SetRecipeParameters(Database.ISeqTabInfo,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Database.CycleWeightInfo.GetMin(Database.RecipeWeightInfo,System.Decimal)
  commentId: M:Database.CycleWeightInfo.GetMin(Database.RecipeWeightInfo,System.Decimal)
  id: GetMin(Database.RecipeWeightInfo,System.Decimal)
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: GetMin(RecipeWeightInfo, Decimal)
  nameWithType: CycleWeightInfo.GetMin(RecipeWeightInfo, Decimal)
  fullName: Database.CycleWeightInfo.GetMin(Database.RecipeWeightInfo, System.Decimal)
  type: Method
  source:
    id: GetMin
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 983
  assemblies:
  - Database
  namespace: Database
  syntax:
    content: public decimal GetMin(RecipeWeightInfo recipeWeighInfo, decimal finalWeight)
    parameters:
    - id: recipeWeighInfo
      type: Database.RecipeWeightInfo
    - id: finalWeight
      type: System.Decimal
    return:
      type: System.Decimal
    content.vb: Public Function GetMin(recipeWeighInfo As RecipeWeightInfo, finalWeight As Decimal) As Decimal
  overload: Database.CycleWeightInfo.GetMin*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Database.CycleWeightInfo.GetMax(Database.RecipeWeightInfo,System.Decimal)
  commentId: M:Database.CycleWeightInfo.GetMax(Database.RecipeWeightInfo,System.Decimal)
  id: GetMax(Database.RecipeWeightInfo,System.Decimal)
  parent: Database.CycleWeightInfo
  langs:
  - csharp
  - vb
  name: GetMax(RecipeWeightInfo, Decimal)
  nameWithType: CycleWeightInfo.GetMax(RecipeWeightInfo, Decimal)
  fullName: Database.CycleWeightInfo.GetMax(Database.RecipeWeightInfo, System.Decimal)
  type: Method
  source:
    id: GetMax
    path: C:\Temp\MixingApplication\Database\TableInfo.cs
    startLine: 992
  assemblies:
  - Database
  namespace: Database
  syntax:
    content: public decimal GetMax(RecipeWeightInfo recipeWeighInfo, decimal finalWeight)
    parameters:
    - id: recipeWeighInfo
      type: Database.RecipeWeightInfo
    - id: finalWeight
      type: System.Decimal
    return:
      type: System.Decimal
    content.vb: Public Function GetMax(recipeWeighInfo As RecipeWeightInfo, finalWeight As Decimal) As Decimal
  overload: Database.CycleWeightInfo.GetMax*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Database
  commentId: N:Database
  name: Database
  nameWithType: Database
  fullName: Database
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Database.ICycleSeqInfo
  commentId: T:Database.ICycleSeqInfo
  parent: Database
  name: ICycleSeqInfo
  nameWithType: ICycleSeqInfo
  fullName: Database.ICycleSeqInfo
- uid: Database.ISeqTabInfo
  commentId: T:Database.ISeqTabInfo
  parent: Database
  name: ISeqTabInfo
  nameWithType: ISeqTabInfo
  fullName: Database.ISeqTabInfo
- uid: Database.IComTabInfo
  commentId: T:Database.IComTabInfo
  parent: Database
  name: IComTabInfo
  nameWithType: IComTabInfo
  fullName: Database.IComTabInfo
- uid: Database.IBasTabInfo
  commentId: T:Database.IBasTabInfo
  parent: Database
  name: IBasTabInfo
  nameWithType: IBasTabInfo
  fullName: Database.IBasTabInfo
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Database.CycleWeightInfo.#ctor*
  commentId: Overload:Database.CycleWeightInfo.#ctor
  name: CycleWeightInfo
  nameWithType: CycleWeightInfo.CycleWeightInfo
  fullName: Database.CycleWeightInfo.CycleWeightInfo
- uid: Database.CycleWeightInfo.TabName*
  commentId: Overload:Database.CycleWeightInfo.TabName
  name: TabName
  nameWithType: CycleWeightInfo.TabName
  fullName: Database.CycleWeightInfo.TabName
- uid: Database.IBasTabInfo.TabName
  commentId: P:Database.IBasTabInfo.TabName
  parent: Database.IBasTabInfo
  name: TabName
  nameWithType: IBasTabInfo.TabName
  fullName: Database.IBasTabInfo.TabName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Database.CycleWeightInfo.Columns*
  commentId: Overload:Database.CycleWeightInfo.Columns
  name: Columns
  nameWithType: CycleWeightInfo.Columns
  fullName: Database.CycleWeightInfo.Columns
- uid: Database.IBasTabInfo.Columns
  commentId: P:Database.IBasTabInfo.Columns
  parent: Database.IBasTabInfo
  name: Columns
  nameWithType: IBasTabInfo.Columns
  fullName: Database.IBasTabInfo.Columns
- uid: System.Collections.Generic.List{Database.Column}
  commentId: T:System.Collections.Generic.List{Database.Column}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Column>
  nameWithType: List<Column>
  fullName: System.Collections.Generic.List<Database.Column>
  nameWithType.vb: List(Of Column)
  fullName.vb: System.Collections.Generic.List(Of Database.Column)
  name.vb: List(Of Column)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Database.Column
    name: Column
    nameWithType: Column
    fullName: Database.Column
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Database.Column
    name: Column
    nameWithType: Column
    fullName: Database.Column
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Database.CycleWeightInfo.Ids*
  commentId: Overload:Database.CycleWeightInfo.Ids
  name: Ids
  nameWithType: CycleWeightInfo.Ids
  fullName: Database.CycleWeightInfo.Ids
- uid: Database.IBasTabInfo.Ids
  commentId: P:Database.IBasTabInfo.Ids
  parent: Database.IBasTabInfo
  name: Ids
  nameWithType: IBasTabInfo.Ids
  fullName: Database.IBasTabInfo.Ids
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Database.CycleWeightInfo.SeqType*
  commentId: Overload:Database.CycleWeightInfo.SeqType
  name: SeqType
  nameWithType: CycleWeightInfo.SeqType
  fullName: Database.CycleWeightInfo.SeqType
- uid: Database.ISeqTabInfo.SeqType
  commentId: P:Database.ISeqTabInfo.SeqType
  parent: Database.ISeqTabInfo
  name: SeqType
  nameWithType: ISeqTabInfo.SeqType
  fullName: Database.ISeqTabInfo.SeqType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Database.CycleWeightInfo.Id*
  commentId: Overload:Database.CycleWeightInfo.Id
  name: Id
  nameWithType: CycleWeightInfo.Id
  fullName: Database.CycleWeightInfo.Id
- uid: Database.IComTabInfo.Id
  commentId: P:Database.IComTabInfo.Id
  parent: Database.IComTabInfo
  name: Id
  nameWithType: IComTabInfo.Id
  fullName: Database.IComTabInfo.Id
- uid: Database.CycleWeightInfo.NextSeqType*
  commentId: Overload:Database.CycleWeightInfo.NextSeqType
  name: NextSeqType
  nameWithType: CycleWeightInfo.NextSeqType
  fullName: Database.CycleWeightInfo.NextSeqType
- uid: Database.ISeqTabInfo.NextSeqType
  commentId: P:Database.ISeqTabInfo.NextSeqType
  parent: Database.ISeqTabInfo
  name: NextSeqType
  nameWithType: ISeqTabInfo.NextSeqType
  fullName: Database.ISeqTabInfo.NextSeqType
- uid: Database.CycleWeightInfo.NextSeqId*
  commentId: Overload:Database.CycleWeightInfo.NextSeqId
  name: NextSeqId
  nameWithType: CycleWeightInfo.NextSeqId
  fullName: Database.CycleWeightInfo.NextSeqId
- uid: Database.ISeqTabInfo.NextSeqId
  commentId: P:Database.ISeqTabInfo.NextSeqId
  parent: Database.ISeqTabInfo
  name: NextSeqId
  nameWithType: ISeqTabInfo.NextSeqId
  fullName: Database.ISeqTabInfo.NextSeqId
- uid: Database.CycleWeightInfo.Product*
  commentId: Overload:Database.CycleWeightInfo.Product
  name: Product
  nameWithType: CycleWeightInfo.Product
  fullName: Database.CycleWeightInfo.Product
- uid: Database.CycleWeightInfo.WasWeightManual*
  commentId: Overload:Database.CycleWeightInfo.WasWeightManual
  name: WasWeightManual
  nameWithType: CycleWeightInfo.WasWeightManual
  fullName: Database.CycleWeightInfo.WasWeightManual
- uid: Database.CycleWeightInfo.DateTime*
  commentId: Overload:Database.CycleWeightInfo.DateTime
  name: DateTime
  nameWithType: CycleWeightInfo.DateTime
  fullName: Database.CycleWeightInfo.DateTime
- uid: Database.CycleWeightInfo.ActualValue*
  commentId: Overload:Database.CycleWeightInfo.ActualValue
  name: ActualValue
  nameWithType: CycleWeightInfo.ActualValue
  fullName: Database.CycleWeightInfo.ActualValue
- uid: Database.CycleWeightInfo.Setpoint*
  commentId: Overload:Database.CycleWeightInfo.Setpoint
  name: Setpoint
  nameWithType: CycleWeightInfo.Setpoint
  fullName: Database.CycleWeightInfo.Setpoint
- uid: Database.CycleWeightInfo.Min*
  commentId: Overload:Database.CycleWeightInfo.Min
  name: Min
  nameWithType: CycleWeightInfo.Min
  fullName: Database.CycleWeightInfo.Min
- uid: Database.CycleWeightInfo.Max*
  commentId: Overload:Database.CycleWeightInfo.Max
  name: Max
  nameWithType: CycleWeightInfo.Max
  fullName: Database.CycleWeightInfo.Max
- uid: Database.CycleWeightInfo.Unit*
  commentId: Overload:Database.CycleWeightInfo.Unit
  name: Unit
  nameWithType: CycleWeightInfo.Unit
  fullName: Database.CycleWeightInfo.Unit
- uid: Database.CycleWeightInfo.DecimalNumber*
  commentId: Overload:Database.CycleWeightInfo.DecimalNumber
  name: DecimalNumber
  nameWithType: CycleWeightInfo.DecimalNumber
  fullName: Database.CycleWeightInfo.DecimalNumber
- uid: Database.CycleWeightInfo.IsSolvent*
  commentId: Overload:Database.CycleWeightInfo.IsSolvent
  name: IsSolvent
  nameWithType: CycleWeightInfo.IsSolvent
  fullName: Database.CycleWeightInfo.IsSolvent
- uid: Database.CycleWeightInfo.SetRecipeParameters*
  commentId: Overload:Database.CycleWeightInfo.SetRecipeParameters
  name: SetRecipeParameters
  nameWithType: CycleWeightInfo.SetRecipeParameters
  fullName: Database.CycleWeightInfo.SetRecipeParameters
- uid: Database.ICycleSeqInfo.SetRecipeParameters(Database.ISeqTabInfo,System.Int32)
  commentId: M:Database.ICycleSeqInfo.SetRecipeParameters(Database.ISeqTabInfo,System.Int32)
  parent: Database.ICycleSeqInfo
  isExternal: true
  name: SetRecipeParameters(ISeqTabInfo, Int32)
  nameWithType: ICycleSeqInfo.SetRecipeParameters(ISeqTabInfo, Int32)
  fullName: Database.ICycleSeqInfo.SetRecipeParameters(Database.ISeqTabInfo, System.Int32)
  spec.csharp:
  - uid: Database.ICycleSeqInfo.SetRecipeParameters(Database.ISeqTabInfo,System.Int32)
    name: SetRecipeParameters
    nameWithType: ICycleSeqInfo.SetRecipeParameters
    fullName: Database.ICycleSeqInfo.SetRecipeParameters
  - name: (
    nameWithType: (
    fullName: (
  - uid: Database.ISeqTabInfo
    name: ISeqTabInfo
    nameWithType: ISeqTabInfo
    fullName: Database.ISeqTabInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Database.ICycleSeqInfo.SetRecipeParameters(Database.ISeqTabInfo,System.Int32)
    name: SetRecipeParameters
    nameWithType: ICycleSeqInfo.SetRecipeParameters
    fullName: Database.ICycleSeqInfo.SetRecipeParameters
  - name: (
    nameWithType: (
    fullName: (
  - uid: Database.ISeqTabInfo
    name: ISeqTabInfo
    nameWithType: ISeqTabInfo
    fullName: Database.ISeqTabInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Database.CycleWeightInfo.GetMin*
  commentId: Overload:Database.CycleWeightInfo.GetMin
  name: GetMin
  nameWithType: CycleWeightInfo.GetMin
  fullName: Database.CycleWeightInfo.GetMin
- uid: Database.RecipeWeightInfo
  commentId: T:Database.RecipeWeightInfo
  parent: Database
  name: RecipeWeightInfo
  nameWithType: RecipeWeightInfo
  fullName: Database.RecipeWeightInfo
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Database.CycleWeightInfo.GetMax*
  commentId: Overload:Database.CycleWeightInfo.GetMax
  name: GetMax
  nameWithType: CycleWeightInfo.GetMax
  fullName: Database.CycleWeightInfo.GetMax
