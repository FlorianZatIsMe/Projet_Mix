### YamlMime:ManagedReference
items:
- uid: User_Management.UserManagement
  commentId: T:User_Management.UserManagement
  id: UserManagement
  parent: User_Management
  children:
  - User_Management.UserManagement.GetCurrentAccessTable
  - User_Management.UserManagement.Initialize(User_Management.IniInfo)
  - User_Management.UserManagement.SetNoneAccess
  - User_Management.UserManagement.UpdateAccessTable(System.String)
  langs:
  - csharp
  - vb
  name: UserManagement
  nameWithType: UserManagement
  fullName: User_Management.UserManagement
  type: Class
  source:
    id: UserManagement
    path: C:\Temp\MixingApplication\User_Management\UserManagement.cs
    startLine: 29
  assemblies:
  - User_Management
  namespace: User_Management
  summary: "\nThis class allows the update of the access table variable. The access table can then be used by other projects to allow or avoid accesses.\n<p>Creation revision: 001</p>\n"
  example: []
  syntax:
    content: public static class UserManagement
    content.vb: Public Module UserManagement
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: User_Management.UserManagement.Initialize(User_Management.IniInfo)
  commentId: M:User_Management.UserManagement.Initialize(User_Management.IniInfo)
  id: Initialize(User_Management.IniInfo)
  parent: User_Management.UserManagement
  langs:
  - csharp
  - vb
  name: Initialize(IniInfo)
  nameWithType: UserManagement.Initialize(IniInfo)
  fullName: User_Management.UserManagement.Initialize(User_Management.IniInfo)
  type: Method
  source:
    id: Initialize
    path: C:\Temp\MixingApplication\User_Management\UserManagement.cs
    startLine: 43
  assemblies:
  - User_Management
  namespace: User_Management
  summary: "\nMethod called by other project which initializes the variable <xref href=\"User_Management.UserManagement.info\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static void Initialize(IniInfo info_arg)
    parameters:
    - id: info_arg
      type: User_Management.IniInfo
      description: <xref href="User_Management.IniInfo" data-throw-if-not-resolved="false"></xref> variable which contains the applicable settings from the calling project
    content.vb: Public Shared Sub Initialize(info_arg As IniInfo)
  overload: User_Management.UserManagement.Initialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: User_Management.UserManagement.UpdateAccessTable(System.String)
  commentId: M:User_Management.UserManagement.UpdateAccessTable(System.String)
  id: UpdateAccessTable(System.String)
  parent: User_Management.UserManagement
  langs:
  - csharp
  - vb
  name: UpdateAccessTable(String)
  nameWithType: UserManagement.UpdateAccessTable(String)
  fullName: User_Management.UserManagement.UpdateAccessTable(System.String)
  type: Method
  source:
    id: UpdateAccessTable
    path: C:\Temp\MixingApplication\User_Management\UserManagement.cs
    startLine: 54
  assemblies:
  - User_Management
  namespace: User_Management
  summary: "\nUpdate the access table variable\n"
  example: []
  syntax:
    content: public static string UpdateAccessTable(string username)
    parameters:
    - id: username
      type: System.String
      description: Name a windows account
    return:
      type: System.String
      description: The name of role of the windows account username
    content.vb: Public Shared Function UpdateAccessTable(username As String) As String
  overload: User_Management.UserManagement.UpdateAccessTable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: User_Management.UserManagement.SetNoneAccess
  commentId: M:User_Management.UserManagement.SetNoneAccess
  id: SetNoneAccess
  parent: User_Management.UserManagement
  langs:
  - csharp
  - vb
  name: SetNoneAccess()
  nameWithType: UserManagement.SetNoneAccess()
  fullName: User_Management.UserManagement.SetNoneAccess()
  type: Method
  source:
    id: SetNoneAccess
    path: C:\Temp\MixingApplication\User_Management\UserManagement.cs
    startLine: 121
  assemblies:
  - User_Management
  namespace: User_Management
  summary: "\nUpdate the current access table with the guest rights\n"
  example: []
  syntax:
    content: public static void SetNoneAccess()
    content.vb: Public Shared Sub SetNoneAccess
  overload: User_Management.UserManagement.SetNoneAccess*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: User_Management.UserManagement.GetCurrentAccessTable
  commentId: M:User_Management.UserManagement.GetCurrentAccessTable
  id: GetCurrentAccessTable
  parent: User_Management.UserManagement
  langs:
  - csharp
  - vb
  name: GetCurrentAccessTable()
  nameWithType: UserManagement.GetCurrentAccessTable()
  fullName: User_Management.UserManagement.GetCurrentAccessTable()
  type: Method
  source:
    id: GetCurrentAccessTable
    path: C:\Temp\MixingApplication\User_Management\UserManagement.cs
    startLine: 174
  assemblies:
  - User_Management
  namespace: User_Management
  example: []
  syntax:
    content: public static bool[] GetCurrentAccessTable()
    return:
      type: System.Boolean[]
      description: The access table variable
    content.vb: Public Shared Function GetCurrentAccessTable As Boolean()
  overload: User_Management.UserManagement.GetCurrentAccessTable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: User_Management
  commentId: N:User_Management
  name: User_Management
  nameWithType: User_Management
  fullName: User_Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: User_Management.UserManagement.info
  commentId: F:User_Management.UserManagement.info
  isExternal: true
- uid: User_Management.IniInfo
  commentId: T:User_Management.IniInfo
  parent: User_Management
  name: IniInfo
  nameWithType: IniInfo
  fullName: User_Management.IniInfo
- uid: User_Management.UserManagement.Initialize*
  commentId: Overload:User_Management.UserManagement.Initialize
  name: Initialize
  nameWithType: UserManagement.Initialize
  fullName: User_Management.UserManagement.Initialize
- uid: User_Management.UserManagement.UpdateAccessTable*
  commentId: Overload:User_Management.UserManagement.UpdateAccessTable
  name: UpdateAccessTable
  nameWithType: UserManagement.UpdateAccessTable
  fullName: User_Management.UserManagement.UpdateAccessTable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: User_Management.UserManagement.SetNoneAccess*
  commentId: Overload:User_Management.UserManagement.SetNoneAccess
  name: SetNoneAccess
  nameWithType: UserManagement.SetNoneAccess
  fullName: User_Management.UserManagement.SetNoneAccess
- uid: User_Management.UserManagement.GetCurrentAccessTable*
  commentId: Overload:User_Management.UserManagement.GetCurrentAccessTable
  name: GetCurrentAccessTable
  nameWithType: UserManagement.GetCurrentAccessTable
  fullName: User_Management.UserManagement.GetCurrentAccessTable
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
