### YamlMime:ManagedReference
items:
- uid: Driver_Ethernet.Ethernet
  commentId: T:Driver_Ethernet.Ethernet
  id: Ethernet
  parent: Driver_Ethernet
  children:
  - Driver_Ethernet.Ethernet.#ctor(System.String,System.Int32,System.String,System.Int32,System.Int32)
  - Driver_Ethernet.Ethernet.Connect
  - Driver_Ethernet.Ethernet.Disconnect
  - Driver_Ethernet.Ethernet.endLine
  - Driver_Ethernet.Ethernet.IsConnected
  - Driver_Ethernet.Ethernet.ReadData(System.Int32)
  - Driver_Ethernet.Ethernet.ReadData(System.String,System.Int32)
  - Driver_Ethernet.Ethernet.WriteData(System.String)
  langs:
  - csharp
  - vb
  name: Ethernet
  nameWithType: Ethernet
  fullName: Driver_Ethernet.Ethernet
  type: Class
  source:
    id: Ethernet
    path: C:\Temp\MixingApplication\Driver_Ethernet\Ethernet.cs
    startLine: 19
  assemblies:
  - Driver_Ethernet
  namespace: Driver_Ethernet
  syntax:
    content: public class Ethernet
    content.vb: Public Class Ethernet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Driver_Ethernet.Ethernet.endLine
  commentId: F:Driver_Ethernet.Ethernet.endLine
  id: endLine
  parent: Driver_Ethernet.Ethernet
  langs:
  - csharp
  - vb
  name: endLine
  nameWithType: Ethernet.endLine
  fullName: Driver_Ethernet.Ethernet.endLine
  type: Field
  source:
    id: endLine
    path: C:\Temp\MixingApplication\Driver_Ethernet\Ethernet.cs
    startLine: 24
  assemblies:
  - Driver_Ethernet
  namespace: Driver_Ethernet
  syntax:
    content: public readonly string endLine
    return:
      type: System.String
    content.vb: Public ReadOnly endLine As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Driver_Ethernet.Ethernet.#ctor(System.String,System.Int32,System.String,System.Int32,System.Int32)
  commentId: M:Driver_Ethernet.Ethernet.#ctor(System.String,System.Int32,System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.String,System.Int32,System.Int32)'
  parent: Driver_Ethernet.Ethernet
  langs:
  - csharp
  - vb
  name: Ethernet(String, Int32, String, Int32, Int32)
  nameWithType: Ethernet.Ethernet(String, Int32, String, Int32, Int32)
  fullName: Driver_Ethernet.Ethernet.Ethernet(System.String, System.Int32, System.String, System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: C:\Temp\MixingApplication\Driver_Ethernet\Ethernet.cs
    startLine: 33
  assemblies:
  - Driver_Ethernet
  namespace: Driver_Ethernet
  syntax:
    content: public Ethernet(string ipAddress_arg, int port_arg, string endLine_arg = "", int alarmConnectId1_arg = -1, int alarmConnectId2_arg = -1)
    parameters:
    - id: ipAddress_arg
      type: System.String
    - id: port_arg
      type: System.Int32
    - id: endLine_arg
      type: System.String
    - id: alarmConnectId1_arg
      type: System.Int32
    - id: alarmConnectId2_arg
      type: System.Int32
    content.vb: Public Sub New(ipAddress_arg As String, port_arg As Integer, endLine_arg As String = "", alarmConnectId1_arg As Integer = -1, alarmConnectId2_arg As Integer = -1)
  overload: Driver_Ethernet.Ethernet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Driver_Ethernet.Ethernet.Connect
  commentId: M:Driver_Ethernet.Ethernet.Connect
  id: Connect
  parent: Driver_Ethernet.Ethernet
  langs:
  - csharp
  - vb
  name: Connect()
  nameWithType: Ethernet.Connect()
  fullName: Driver_Ethernet.Ethernet.Connect()
  type: Method
  source:
    id: Connect
    path: C:\Temp\MixingApplication\Driver_Ethernet\Ethernet.cs
    startLine: 83
  assemblies:
  - Driver_Ethernet
  namespace: Driver_Ethernet
  syntax:
    content: public void Connect()
    content.vb: Public Sub Connect
  overload: Driver_Ethernet.Ethernet.Connect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Driver_Ethernet.Ethernet.IsConnected
  commentId: M:Driver_Ethernet.Ethernet.IsConnected
  id: IsConnected
  parent: Driver_Ethernet.Ethernet
  langs:
  - csharp
  - vb
  name: IsConnected()
  nameWithType: Ethernet.IsConnected()
  fullName: Driver_Ethernet.Ethernet.IsConnected()
  type: Method
  source:
    id: IsConnected
    path: C:\Temp\MixingApplication\Driver_Ethernet\Ethernet.cs
    startLine: 104
  assemblies:
  - Driver_Ethernet
  namespace: Driver_Ethernet
  syntax:
    content: public bool IsConnected()
    return:
      type: System.Boolean
    content.vb: Public Function IsConnected As Boolean
  overload: Driver_Ethernet.Ethernet.IsConnected*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Driver_Ethernet.Ethernet.Disconnect
  commentId: M:Driver_Ethernet.Ethernet.Disconnect
  id: Disconnect
  parent: Driver_Ethernet.Ethernet
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: Ethernet.Disconnect()
  fullName: Driver_Ethernet.Ethernet.Disconnect()
  type: Method
  source:
    id: Disconnect
    path: C:\Temp\MixingApplication\Driver_Ethernet\Ethernet.cs
    startLine: 109
  assemblies:
  - Driver_Ethernet
  namespace: Driver_Ethernet
  syntax:
    content: public void Disconnect()
    content.vb: Public Sub Disconnect
  overload: Driver_Ethernet.Ethernet.Disconnect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Driver_Ethernet.Ethernet.WriteData(System.String)
  commentId: M:Driver_Ethernet.Ethernet.WriteData(System.String)
  id: WriteData(System.String)
  parent: Driver_Ethernet.Ethernet
  langs:
  - csharp
  - vb
  name: WriteData(String)
  nameWithType: Ethernet.WriteData(String)
  fullName: Driver_Ethernet.Ethernet.WriteData(System.String)
  type: Method
  source:
    id: WriteData
    path: C:\Temp\MixingApplication\Driver_Ethernet\Ethernet.cs
    startLine: 120
  assemblies:
  - Driver_Ethernet
  namespace: Driver_Ethernet
  syntax:
    content: public bool WriteData(string dataToSend)
    parameters:
    - id: dataToSend
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function WriteData(dataToSend As String) As Boolean
  overload: Driver_Ethernet.Ethernet.WriteData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Driver_Ethernet.Ethernet.ReadData(System.Int32)
  commentId: M:Driver_Ethernet.Ethernet.ReadData(System.Int32)
  id: ReadData(System.Int32)
  parent: Driver_Ethernet.Ethernet
  langs:
  - csharp
  - vb
  name: ReadData(Int32)
  nameWithType: Ethernet.ReadData(Int32)
  fullName: Driver_Ethernet.Ethernet.ReadData(System.Int32)
  type: Method
  source:
    id: ReadData
    path: C:\Temp\MixingApplication\Driver_Ethernet\Ethernet.cs
    startLine: 131
  assemblies:
  - Driver_Ethernet
  namespace: Driver_Ethernet
  syntax:
    content: public string ReadData(int msWaitTime = 1000)
    parameters:
    - id: msWaitTime
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function ReadData(msWaitTime As Integer = 1000) As String
  overload: Driver_Ethernet.Ethernet.ReadData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Driver_Ethernet.Ethernet.ReadData(System.String,System.Int32)
  commentId: M:Driver_Ethernet.Ethernet.ReadData(System.String,System.Int32)
  id: ReadData(System.String,System.Int32)
  parent: Driver_Ethernet.Ethernet
  langs:
  - csharp
  - vb
  name: ReadData(String, Int32)
  nameWithType: Ethernet.ReadData(String, Int32)
  fullName: Driver_Ethernet.Ethernet.ReadData(System.String, System.Int32)
  type: Method
  source:
    id: ReadData
    path: C:\Temp\MixingApplication\Driver_Ethernet\Ethernet.cs
    startLine: 162
  assemblies:
  - Driver_Ethernet
  namespace: Driver_Ethernet
  syntax:
    content: public string ReadData(string dataToSend, int msWaitTime = -1)
    parameters:
    - id: dataToSend
      type: System.String
    - id: msWaitTime
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function ReadData(dataToSend As String, msWaitTime As Integer = -1) As String
  overload: Driver_Ethernet.Ethernet.ReadData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Driver_Ethernet
  commentId: N:Driver_Ethernet
  name: Driver_Ethernet
  nameWithType: Driver_Ethernet
  fullName: Driver_Ethernet
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Driver_Ethernet.Ethernet.#ctor*
  commentId: Overload:Driver_Ethernet.Ethernet.#ctor
  name: Ethernet
  nameWithType: Ethernet.Ethernet
  fullName: Driver_Ethernet.Ethernet.Ethernet
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Driver_Ethernet.Ethernet.Connect*
  commentId: Overload:Driver_Ethernet.Ethernet.Connect
  name: Connect
  nameWithType: Ethernet.Connect
  fullName: Driver_Ethernet.Ethernet.Connect
- uid: Driver_Ethernet.Ethernet.IsConnected*
  commentId: Overload:Driver_Ethernet.Ethernet.IsConnected
  name: IsConnected
  nameWithType: Ethernet.IsConnected
  fullName: Driver_Ethernet.Ethernet.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Driver_Ethernet.Ethernet.Disconnect*
  commentId: Overload:Driver_Ethernet.Ethernet.Disconnect
  name: Disconnect
  nameWithType: Ethernet.Disconnect
  fullName: Driver_Ethernet.Ethernet.Disconnect
- uid: Driver_Ethernet.Ethernet.WriteData*
  commentId: Overload:Driver_Ethernet.Ethernet.WriteData
  name: WriteData
  nameWithType: Ethernet.WriteData
  fullName: Driver_Ethernet.Ethernet.WriteData
- uid: Driver_Ethernet.Ethernet.ReadData*
  commentId: Overload:Driver_Ethernet.Ethernet.ReadData
  name: ReadData
  nameWithType: Ethernet.ReadData
  fullName: Driver_Ethernet.Ethernet.ReadData
