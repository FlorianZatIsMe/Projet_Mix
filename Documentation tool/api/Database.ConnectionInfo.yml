### YamlMime:ManagedReference
items:
- uid: Database.ConnectionInfo
  commentId: T:Database.ConnectionInfo
  id: ConnectionInfo
  parent: Database
  children:
  - Database.ConnectionInfo.Db
  - Database.ConnectionInfo.Password
  - Database.ConnectionInfo.Server
  - Database.ConnectionInfo.UserID
  langs:
  - csharp
  - vb
  name: ConnectionInfo
  nameWithType: ConnectionInfo
  fullName: Database.ConnectionInfo
  type: Class
  source:
    id: ConnectionInfo
    path: C:\Temp\MixingApplication\Database\MyDatabase.cs
    startLine: 19
  assemblies:
  - Database
  namespace: Database
  summary: "\nClass to store information of connection to the database in the settings\n"
  example: []
  syntax:
    content: >-
      [SettingsSerializeAs(SettingsSerializeAs.Xml)]

      public class ConnectionInfo
    content.vb: >-
      <SettingsSerializeAs(SettingsSerializeAs.Xml)>

      Public Class ConnectionInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Configuration.SettingsSerializeAsAttribute
    ctor: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
    arguments:
    - type: System.Configuration.SettingsSerializeAs
      value: 1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Database.ConnectionInfo.Server
  commentId: P:Database.ConnectionInfo.Server
  id: Server
  parent: Database.ConnectionInfo
  langs:
  - csharp
  - vb
  name: Server
  nameWithType: ConnectionInfo.Server
  fullName: Database.ConnectionInfo.Server
  type: Property
  source:
    id: Server
    path: C:\Temp\MixingApplication\Database\MyDatabase.cs
    startLine: 23
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public string Server { get; set; }
    parameters: []
    return:
      type: System.String
      description: Database server name
    content.vb: Public Property Server As String
  overload: Database.ConnectionInfo.Server*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Database.ConnectionInfo.UserID
  commentId: P:Database.ConnectionInfo.UserID
  id: UserID
  parent: Database.ConnectionInfo
  langs:
  - csharp
  - vb
  name: UserID
  nameWithType: ConnectionInfo.UserID
  fullName: Database.ConnectionInfo.UserID
  type: Property
  source:
    id: UserID
    path: C:\Temp\MixingApplication\Database\MyDatabase.cs
    startLine: 26
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public string UserID { get; set; }
    parameters: []
    return:
      type: System.String
      description: User ID to log on the database
    content.vb: Public Property UserID As String
  overload: Database.ConnectionInfo.UserID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Database.ConnectionInfo.Password
  commentId: P:Database.ConnectionInfo.Password
  id: Password
  parent: Database.ConnectionInfo
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: ConnectionInfo.Password
  fullName: Database.ConnectionInfo.Password
  type: Property
  source:
    id: Password
    path: C:\Temp\MixingApplication\Database\MyDatabase.cs
    startLine: 29
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
      description: Password of the user ID
    content.vb: Public Property Password As String
  overload: Database.ConnectionInfo.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Database.ConnectionInfo.Db
  commentId: P:Database.ConnectionInfo.Db
  id: Db
  parent: Database.ConnectionInfo
  langs:
  - csharp
  - vb
  name: Db
  nameWithType: ConnectionInfo.Db
  fullName: Database.ConnectionInfo.Db
  type: Property
  source:
    id: Db
    path: C:\Temp\MixingApplication\Database\MyDatabase.cs
    startLine: 32
  assemblies:
  - Database
  namespace: Database
  example: []
  syntax:
    content: public string Db { get; set; }
    parameters: []
    return:
      type: System.String
      description: Database to use
    content.vb: Public Property Db As String
  overload: Database.ConnectionInfo.Db*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Database
  commentId: N:Database
  name: Database
  nameWithType: Database
  fullName: Database
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Database.ConnectionInfo.Server*
  commentId: Overload:Database.ConnectionInfo.Server
  name: Server
  nameWithType: ConnectionInfo.Server
  fullName: Database.ConnectionInfo.Server
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Database.ConnectionInfo.UserID*
  commentId: Overload:Database.ConnectionInfo.UserID
  name: UserID
  nameWithType: ConnectionInfo.UserID
  fullName: Database.ConnectionInfo.UserID
- uid: Database.ConnectionInfo.Password*
  commentId: Overload:Database.ConnectionInfo.Password
  name: Password
  nameWithType: ConnectionInfo.Password
  fullName: Database.ConnectionInfo.Password
- uid: Database.ConnectionInfo.Db*
  commentId: Overload:Database.ConnectionInfo.Db
  name: Db
  nameWithType: ConnectionInfo.Db
  fullName: Database.ConnectionInfo.Db
