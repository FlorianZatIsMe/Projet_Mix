<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class ReadInfo
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class ReadInfo
   ">
    <meta name="generator" content="docfx 2.59.4.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="Database.ReadInfo">
  
  
  <h1 id="Database_ReadInfo" data-uid="Database.ReadInfo" class="text-break">Class ReadInfo
  </h1>
  <div class="markdown level0 summary"><p>Class containing the parameters required by other method (usually to select one or several row in a database table)</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">ReadInfo</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Object.ToString()</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="Database.html">Database</a></h6>
  <h6><strong>Assembly</strong>: Database.dll</h6>
  <h5 id="Database_ReadInfo_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class ReadInfo</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <a id="Database_ReadInfo__ctor_" data-uid="Database.ReadInfo.#ctor*"></a>
  <h4 id="Database_ReadInfo__ctor_Database_IComTabInfo_System_String_System_Boolean_System_Nullable_System_DateTime__System_Nullable_System_DateTime__System_String___System_String_" data-uid="Database.ReadInfo.#ctor(Database.IComTabInfo,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String[],System.String)">ReadInfo(IComTabInfo, String, Boolean, Nullable&lt;DateTime&gt;, Nullable&lt;DateTime&gt;, String[], String)</h4>
  <div class="markdown level1 summary"><p>Initialize all variables of the class from parameters</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public ReadInfo(IComTabInfo _tableInfo = null, string _orderBy = null, bool _isOrderAsc = true, DateTime? _dtBefore = null, DateTime? _dtAfter = null, string[] _eventTypes = null, string _customWhere = &quot;&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Database.IComTabInfo.html">IComTabInfo</a></td>
        <td><span class="parametername">_tableInfo</span></td>
        <td><p><a class="xref" href="Database.ReadInfo.html#Database_ReadInfo_TableInfo">TableInfo</a></p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">_orderBy</span></td>
        <td><p><a class="xref" href="Database.ReadInfo.html#Database_ReadInfo_OrderBy">OrderBy</a></p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">_isOrderAsc</span></td>
        <td><p><a class="xref" href="Database.ReadInfo.html#Database_ReadInfo_IsOrderAsc">IsOrderAsc</a></p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.DateTime</span>&gt;</td>
        <td><span class="parametername">_dtBefore</span></td>
        <td><p><a class="xref" href="Database.ReadInfo.html#Database_ReadInfo_DtBefore">DtBefore</a></p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.DateTime</span>&gt;</td>
        <td><span class="parametername">_dtAfter</span></td>
        <td><p><a class="xref" href="Database.ReadInfo.html#Database_ReadInfo_DtAfter">DtAfter</a></p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span>[]</td>
        <td><span class="parametername">_eventTypes</span></td>
        <td><p><a class="xref" href="Database.ReadInfo.html#Database_ReadInfo_EventTypes">EventTypes</a></p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">_customWhere</span></td>
        <td><p><a class="xref" href="Database.ReadInfo.html#Database_ReadInfo_CustomWhere">CustomWhere</a></p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Database_ReadInfo__ctor_" data-uid="Database.ReadInfo.#ctor*"></a>
  <h4 id="Database_ReadInfo__ctor_Database_ReadInfo_Database_IComTabInfo_" data-uid="Database.ReadInfo.#ctor(Database.ReadInfo,Database.IComTabInfo)">ReadInfo(ReadInfo, IComTabInfo)</h4>
  <div class="markdown level1 summary"><p>Initialize all variables of the class from another object of the same class (the database table is replaced though)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public ReadInfo(ReadInfo _readInfo, IComTabInfo _tableInfo = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Database.ReadInfo.html">ReadInfo</a></td>
        <td><span class="parametername">_readInfo</span></td>
        <td><p>Object of the same class</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Database.IComTabInfo.html">IComTabInfo</a></td>
        <td><span class="parametername">_tableInfo</span></td>
        <td><p><a class="xref" href="Database.ReadInfo.html#Database_ReadInfo_TableInfo">TableInfo</a></p>
</td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="Database_ReadInfo_CustomWhere_" data-uid="Database.ReadInfo.CustomWhere*"></a>
  <h4 id="Database_ReadInfo_CustomWhere" data-uid="Database.ReadInfo.CustomWhere">CustomWhere</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string CustomWhere { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><p>Parameter containing a custom SQL command to put after the WHERE statetement</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Database_ReadInfo_DtAfter_" data-uid="Database.ReadInfo.DtAfter*"></a>
  <h4 id="Database_ReadInfo_DtAfter" data-uid="Database.ReadInfo.DtAfter">DtAfter</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public DateTime? DtAfter { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.DateTime</span>&gt;</td>
        <td><p>Used for tables containing a date and time column: date and time of the last row to filter</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Database_ReadInfo_DtBefore_" data-uid="Database.ReadInfo.DtBefore*"></a>
  <h4 id="Database_ReadInfo_DtBefore" data-uid="Database.ReadInfo.DtBefore">DtBefore</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public DateTime? DtBefore { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.DateTime</span>&gt;</td>
        <td><p>Used for tables containing a date and time column: date and time of the first row to filter</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Database_ReadInfo_EventTypes_" data-uid="Database.ReadInfo.EventTypes*"></a>
  <h4 id="Database_ReadInfo_EventTypes" data-uid="Database.ReadInfo.EventTypes">EventTypes</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string[] EventTypes { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span>[]</td>
        <td><p>Used for tables containing an event type column. List of event types to filter</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Database_ReadInfo_IsOrderAsc_" data-uid="Database.ReadInfo.IsOrderAsc*"></a>
  <h4 id="Database_ReadInfo_IsOrderAsc" data-uid="Database.ReadInfo.IsOrderAsc">IsOrderAsc</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsOrderAsc { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p>If value value = true then the order of the sort is ascending. Descending if false</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Database_ReadInfo_OrderBy_" data-uid="Database.ReadInfo.OrderBy*"></a>
  <h4 id="Database_ReadInfo_OrderBy" data-uid="Database.ReadInfo.OrderBy">OrderBy</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string OrderBy { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><p>Must contains the id of the column to use to sort the rows</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Database_ReadInfo_TableInfo_" data-uid="Database.ReadInfo.TableInfo*"></a>
  <h4 id="Database_ReadInfo_TableInfo" data-uid="Database.ReadInfo.TableInfo">TableInfo</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IComTabInfo TableInfo { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Database.IComTabInfo.html">IComTabInfo</a></td>
        <td><p>Object of database table. The values of this object can be used to select a set of rows</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
